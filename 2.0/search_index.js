var search_data = {
    'index': {
        'searchIndex': ["","phpseclib","phpseclib\\crypt","phpseclib\\file","phpseclib\\file\\asn1","phpseclib\\math","phpseclib\\net","phpseclib\\net\\sftp","phpseclib\\system","phpseclib\\system\\ssh","phpseclib\\system\\ssh\\agent","crypt_aes","crypt_base","crypt_blowfish","crypt_des","crypt_hash","crypt_rc2","crypt_rc4","crypt_rsa","crypt_rijndael","crypt_tripledes","crypt_twofish","file_ansi","file_asn1","file_asn1_element","file_x509","functional_net_scpssh2userstorytest","functional_net_sftplargefiletest","functional_net_sftpstreamtest","functional_net_sftptestcase","functional_net_sftpuserstorytest","functional_net_ssh2agenttest","functional_net_ssh2test","math_biginteger","myarraystore","net_scp","net_sftp","net_sftp_stream","net_ssh1","net_ssh2","phpseclibfunctionaltestcase","phpseclibtestcase","system_ssh_agent","system_ssh_agent_identity","unit_crypt_aes_internaltest","unit_crypt_aes_mcrypttest","unit_crypt_aes_openssltest","unit_crypt_aes_testcase","unit_crypt_blowfishtest","unit_crypt_destest","unit_crypt_hash_md5test","unit_crypt_hash_sha256test","unit_crypt_hash_sha256_96test","unit_crypt_hash_sha512test","unit_crypt_hash_sha512_96test","unit_crypt_hash_testcase","unit_crypt_rc2test","unit_crypt_rc4test","unit_crypt_rsa_loadkeytest","unit_crypt_rsa_modetest","unit_crypt_randomtest","unit_crypt_tripledestest","unit_crypt_twofishtest","unit_file_ansitest","unit_file_asn1test","unit_file_x509_csrtest","unit_file_x509_spkactest","unit_file_x509_x509test","unit_math_biginteger_bcmathtest","unit_math_biginteger_gmptest","unit_math_biginteger_internalopenssltest","unit_math_biginteger_internaltest","unit_math_biginteger_testcase","unit_net_sftpstreamtest","unit_net_ssh1test","unit_net_ssh2test","phpseclib\\crypt\\aes","phpseclib\\crypt\\base","phpseclib\\crypt\\blowfish","phpseclib\\crypt\\des","phpseclib\\crypt\\hash","phpseclib\\crypt\\rc2","phpseclib\\crypt\\rc4","phpseclib\\crypt\\rsa","phpseclib\\crypt\\random","phpseclib\\crypt\\rijndael","phpseclib\\crypt\\tripledes","phpseclib\\crypt\\twofish","phpseclib\\file\\ansi","phpseclib\\file\\asn1","phpseclib\\file\\asn1\\element","phpseclib\\file\\x509","phpseclib\\math\\biginteger","phpseclib\\net\\scp","phpseclib\\net\\sftp","phpseclib\\net\\sftp\\stream","phpseclib\\net\\ssh1","phpseclib\\net\\ssh2","phpseclib\\system\\ssh\\agent","phpseclib\\system\\ssh\\agent\\identity","crypt_aes::setblocklength","crypt_aes::setkeylength","crypt_aes::setkey","crypt_base::__construct","crypt_base::crypt_base","crypt_base::setiv","crypt_base::setkeylength","crypt_base::getkeylength","crypt_base::getblocklength","crypt_base::setkey","crypt_base::setpassword","crypt_base::encrypt","crypt_base::decrypt","crypt_base::_openssl_ctr_process","crypt_base::_openssl_ofb_process","crypt_base::_openssl_translate_mode","crypt_base::enablepadding","crypt_base::disablepadding","crypt_base::enablecontinuousbuffer","crypt_base::disablecontinuousbuffer","crypt_base::isvalidengine","crypt_base::setpreferredengine","crypt_base::getengine","crypt_base::_setengine","crypt_base::_encryptblock","crypt_base::_decryptblock","crypt_base::_setupkey","crypt_base::_setup","crypt_base::_setupmcrypt","crypt_base::_pad","crypt_base::_unpad","crypt_base::_clearbuffers","crypt_base::_string_shift","crypt_base::_string_pop","crypt_base::_increment_str","crypt_base::_setupinlinecrypt","crypt_base::_createinlinecryptfunction","crypt_base::_getlambdafunctions","crypt_base::_hashinlinecryptfunction","crypt_base::safe_intval","crypt_base::safe_intval_inline","crypt_blowfish::setkeylength","crypt_blowfish::isvalidengine","crypt_blowfish::_setupkey","crypt_blowfish::_encryptblock","crypt_blowfish::_decryptblock","crypt_blowfish::_setupinlinecrypt","crypt_des::isvalidengine","crypt_des::setkey","crypt_des::_encryptblock","crypt_des::_decryptblock","crypt_des::_processblock","crypt_des::_setupkey","crypt_des::_setupinlinecrypt","crypt_hash::__construct","crypt_hash::crypt_hash","crypt_hash::setkey","crypt_hash::_computekey","crypt_hash::gethash","crypt_hash::sethash","crypt_hash::hash","crypt_hash::getlength","crypt_hash::_md5","crypt_hash::_sha1","crypt_hash::_md2","crypt_hash::_sha256","crypt_hash::_sha512","crypt_hash::_rightrotate","crypt_hash::_rightshift","crypt_hash::_not","crypt_hash::_add","crypt_hash::_string_shift","crypt_rc2::isvalidengine","crypt_rc2::setkeylength","crypt_rc2::getkeylength","crypt_rc2::setkey","crypt_rc2::encrypt","crypt_rc2::decrypt","crypt_rc2::_encryptblock","crypt_rc2::_decryptblock","crypt_rc2::_setupmcrypt","crypt_rc2::_setupkey","crypt_rc2::_setupinlinecrypt","crypt_rc4::__construct","crypt_rc4::crypt_rc4","crypt_rc4::isvalidengine","crypt_rc4::setiv","crypt_rc4::setkeylength","crypt_rc4::encrypt","crypt_rc4::decrypt","crypt_rc4::_setupkey","crypt_rc4::_crypt","crypt_rsa::__construct","crypt_rsa::crypt_rsa","crypt_rsa::createkey","crypt_rsa::_convertprivatekey","crypt_rsa::_convertpublickey","crypt_rsa::_parsekey","crypt_rsa::getsize","crypt_rsa::_start_element_handler","crypt_rsa::_stop_element_handler","crypt_rsa::_data_handler","crypt_rsa::loadkey","crypt_rsa::setpassword","crypt_rsa::setpublickey","crypt_rsa::setprivatekey","crypt_rsa::getpublickey","crypt_rsa::getpublickeyfingerprint","crypt_rsa::getprivatekey","crypt_rsa::_getprivatepublickey","crypt_rsa::__tostring","crypt_rsa::__clone","crypt_rsa::_generateminmax","crypt_rsa::_decodelength","crypt_rsa::_encodelength","crypt_rsa::_string_shift","crypt_rsa::setprivatekeyformat","crypt_rsa::setpublickeyformat","crypt_rsa::sethash","crypt_rsa::setmgfhash","crypt_rsa::setsaltlength","crypt_rsa::_i2osp","crypt_rsa::_os2ip","crypt_rsa::_exponentiate","crypt_rsa::_blind","crypt_rsa::_equals","crypt_rsa::_rsaep","crypt_rsa::_rsadp","crypt_rsa::_rsasp1","crypt_rsa::_rsavp1","crypt_rsa::_mgf1","crypt_rsa::_rsaes_oaep_encrypt","crypt_rsa::_rsaes_oaep_decrypt","crypt_rsa::_raw_encrypt","crypt_rsa::_rsaes_pkcs1_v1_5_encrypt","crypt_rsa::_rsaes_pkcs1_v1_5_decrypt","crypt_rsa::_emsa_pss_encode","crypt_rsa::_emsa_pss_verify","crypt_rsa::_rsassa_pss_sign","crypt_rsa::_rsassa_pss_verify","crypt_rsa::_emsa_pkcs1_v1_5_encode","crypt_rsa::_rsassa_pkcs1_v1_5_sign","crypt_rsa::_rsassa_pkcs1_v1_5_verify","crypt_rsa::setencryptionmode","crypt_rsa::setsignaturemode","crypt_rsa::setcomment","crypt_rsa::getcomment","crypt_rsa::encrypt","crypt_rsa::decrypt","crypt_rsa::sign","crypt_rsa::verify","crypt_rsa::_extractber","crypt_rijndael::setkey","crypt_rijndael::setkeylength","crypt_rijndael::setblocklength","crypt_rijndael::isvalidengine","crypt_rijndael::_encryptblock","crypt_rijndael::_decryptblock","crypt_rijndael::_setupkey","crypt_rijndael::_subword","crypt_rijndael::_gettables","crypt_rijndael::_getinvtables","crypt_rijndael::_setupinlinecrypt","crypt_tripledes::__construct","crypt_tripledes::crypt_tripledes","crypt_tripledes::isvalidengine","crypt_tripledes::setiv","crypt_tripledes::setkeylength","crypt_tripledes::setkey","crypt_tripledes::encrypt","crypt_tripledes::decrypt","crypt_tripledes::enablecontinuousbuffer","crypt_tripledes::disablecontinuousbuffer","crypt_tripledes::_setupkey","crypt_tripledes::setpreferredengine","crypt_twofish::setkeylength","crypt_twofish::_setupkey","crypt_twofish::_mdsrem","crypt_twofish::_encryptblock","crypt_twofish::_decryptblock","crypt_twofish::_setupinlinecrypt","file_ansi::__construct","file_ansi::file_ansi","file_ansi::setdimensions","file_ansi::sethistory","file_ansi::loadstring","file_ansi::appendstring","file_ansi::_newline","file_ansi::_processcoordinate","file_ansi::_getscreen","file_ansi::getscreen","file_ansi::gethistory","file_asn1::__construct","file_asn1::file_asn1","file_asn1::decodeber","file_asn1::_decode_ber","file_asn1::asn1map","file_asn1::encodeder","file_asn1::_encode_der","file_asn1::_encodelength","file_asn1::_decodeoid","file_asn1::_encodeoid","file_asn1::_decodeunixtime","file_asn1::_decodedatetime","file_asn1::settimeformat","file_asn1::loadoids","file_asn1::loadfilters","file_asn1::_string_shift","file_asn1::convert","file_asn1_element::__construct","file_asn1_element::file_asn1_element","file_x509::__construct","file_x509::file_x509","file_x509::loadx509","file_x509::savex509","file_x509::_mapinextensions","file_x509::_mapoutextensions","file_x509::_mapinattributes","file_x509::_mapoutattributes","file_x509::_mapindns","file_x509::_mapoutdns","file_x509::_getmapping","file_x509::loadca","file_x509::validateurl","file_x509::validatedate","file_x509::_fetchurl","file_x509::_testforintermediate","file_x509::validatesignature","file_x509::_validatesignaturecountable","file_x509::_validatesignature","file_x509::setrecurlimit","file_x509::disableurlfetch","file_x509::enableurlfetch","file_x509::_reformatkey","file_x509::_decodeip","file_x509::_decodenameconstraintip","file_x509::_encodeip","file_x509::_translatednprop","file_x509::setdnprop","file_x509::removednprop","file_x509::getdnprop","file_x509::setdn","file_x509::getdn","file_x509::getissuerdn","file_x509::getsubjectdn","file_x509::getissuerdnprop","file_x509::getsubjectdnprop","file_x509::getchain","file_x509::setpublickey","file_x509::setprivatekey","file_x509::setchallenge","file_x509::getpublickey","file_x509::loadcsr","file_x509::savecsr","file_x509::loadspkac","file_x509::savespkac","file_x509::loadcrl","file_x509::savecrl","file_x509::_timefield","file_x509::sign","file_x509::signcsr","file_x509::signspkac","file_x509::signcrl","file_x509::_sign","file_x509::setstartdate","file_x509::setenddate","file_x509::setserialnumber","file_x509::makeca","file_x509::_issubarrayvalid","file_x509::_subarrayunchecked","file_x509::_subarray","file_x509::_extensions","file_x509::_removeextension","file_x509::_getextension","file_x509::_getextensions","file_x509::_setextension","file_x509::removeextension","file_x509::getextension","file_x509::getextensions","file_x509::setextension","file_x509::removeattribute","file_x509::getattribute","file_x509::getattributes","file_x509::setattribute","file_x509::setkeyidentifier","file_x509::computekeyidentifier","file_x509::_formatsubjectpublickey","file_x509::setdomain","file_x509::setipaddress","file_x509::_dnsname","file_x509::_ipaddress","file_x509::_revokedcertificate","file_x509::revoke","file_x509::unrevoke","file_x509::getrevoked","file_x509::listrevoked","file_x509::removerevokedcertificateextension","file_x509::getrevokedcertificateextension","file_x509::getrevokedcertificateextensions","file_x509::setrevokedcertificateextension","file_x509::_extractber","file_x509::getoid","functional_net_scpssh2userstorytest::setupbeforeclass","functional_net_scpssh2userstorytest::testconstructssh2","functional_net_scpssh2userstorytest::testconstructor","functional_net_scpssh2userstorytest::testputgetstring","functional_net_scpssh2userstorytest::testgetfile","functional_net_sftplargefiletest::setupbeforeclass","functional_net_sftplargefiletest::testputsizelocalfile","functional_net_sftpstreamtest::setupbeforeclass","functional_net_sftpstreamtest::testfopenfclosecreatesfile","functional_net_sftpstreamtest::testfilenamewithhash","functional_net_sftptestcase::setup","functional_net_sftptestcase::teardown","functional_net_sftpuserstorytest::setupbeforeclass","functional_net_sftpuserstorytest::testconstructor","functional_net_sftpuserstorytest::testpasswordlogin","functional_net_sftpuserstorytest::testpwdhome","functional_net_sftpuserstorytest::testmkdirscratch","functional_net_sftpuserstorytest::testchdirscratch","functional_net_sftpuserstorytest::teststatondir","functional_net_sftpuserstorytest::testputsizegetfile","functional_net_sftpuserstorytest::testputsizegetfilecallback","functional_net_sftpuserstorytest::testtouch","functional_net_sftpuserstorytest::testtruncate","functional_net_sftpuserstorytest::testchmodonfile","functional_net_sftpuserstorytest::testchdironfile","functional_net_sftpuserstorytest::testfileexistsisfileisdirfile","functional_net_sftpuserstorytest::testfileexistsisfileisdirfilenonexistent","functional_net_sftpuserstorytest::testsortorder","functional_net_sftpuserstorytest::testresourcexfer","functional_net_sftpuserstorytest::testsymlink","functional_net_sftpuserstorytest::teststatlstatcache","functional_net_sftpuserstorytest::testlinkfile","functional_net_sftpuserstorytest::testreadlink","functional_net_sftpuserstorytest::teststatoncwd","functional_net_sftpuserstorytest::teststatcachefix","functional_net_sftpuserstorytest::testchdiruphome","functional_net_sftpuserstorytest::testfileexistsisfileisdirdir","functional_net_sftpuserstorytest::testtruncatelargefile","functional_net_sftpuserstorytest::testrmdirscratch","functional_net_sftpuserstorytest::testdeleterecursivescratch","functional_net_sftpuserstorytest::testrmdirscratchnonexistent","functional_net_sftpuserstorytest::testdeleteemptydir","functional_net_sftpuserstorytest::teststatvslstat","functional_net_sftpuserstorytest::testuploadoffsets","functional_net_sftpuserstorytest::testreadablewritable","functional_net_sftpuserstorytest::testexecnlist","functional_net_sftpuserstorytest::testrawlistdisabledstatcache","functional_net_ssh2agenttest::setupbeforeclass","functional_net_ssh2agenttest::testagentlogin","functional_net_ssh2agenttest::testagentforward","functional_net_ssh2test::testconstructor","functional_net_ssh2test::testprelogin","functional_net_ssh2test::testbadpassword","functional_net_ssh2test::testpasswordlogin","functional_net_ssh2test::testexecwithmethodcallback","functional_net_ssh2test::testgetserverpublichostkey","functional_net_ssh2test::testopensocketconnect","functional_net_ssh2test::testdisablepty","functional_net_ssh2test::testchanneldataafteropen","math_biginteger::__construct","math_biginteger::math_biginteger","math_biginteger::tobytes","math_biginteger::tohex","math_biginteger::tobits","math_biginteger::tostring","math_biginteger::copy","math_biginteger::__tostring","math_biginteger::__clone","math_biginteger::__sleep","math_biginteger::__wakeup","math_biginteger::__debuginfo","math_biginteger::add","math_biginteger::_add","math_biginteger::subtract","math_biginteger::_subtract","math_biginteger::multiply","math_biginteger::_multiply","math_biginteger::_regularmultiply","math_biginteger::_karatsuba","math_biginteger::_square","math_biginteger::_basesquare","math_biginteger::_karatsubasquare","math_biginteger::divide","math_biginteger::_divide_digit","math_biginteger::modpow","math_biginteger::powmod","math_biginteger::_slidingwindow","math_biginteger::_reduce","math_biginteger::_preparereduce","math_biginteger::_multiplyreduce","math_biginteger::_squarereduce","math_biginteger::_mod2","math_biginteger::_barrett","math_biginteger::_regularbarrett","math_biginteger::_multiplylower","math_biginteger::_montgomery","math_biginteger::_montgomerymultiply","math_biginteger::_prepmontgomery","math_biginteger::_modinverse67108864","math_biginteger::modinverse","math_biginteger::extendedgcd","math_biginteger::gcd","math_biginteger::abs","math_biginteger::compare","math_biginteger::_compare","math_biginteger::equals","math_biginteger::setprecision","math_biginteger::bitwise_and","math_biginteger::bitwise_or","math_biginteger::bitwise_xor","math_biginteger::bitwise_not","math_biginteger::bitwise_rightshift","math_biginteger::bitwise_leftshift","math_biginteger::bitwise_leftrotate","math_biginteger::bitwise_rightrotate","math_biginteger::setrandomgenerator","math_biginteger::_random_number_helper","math_biginteger::random","math_biginteger::randomprime","math_biginteger::_make_odd","math_biginteger::isprime","math_biginteger::_lshift","math_biginteger::_rshift","math_biginteger::_normalize","math_biginteger::_trim","math_biginteger::_array_repeat","math_biginteger::_base256_lshift","math_biginteger::_base256_rshift","math_biginteger::_int2bytes","math_biginteger::_bytes2int","math_biginteger::_encodeasn1length","math_biginteger::_safe_divide","myarraystore::removeclass","net_scp::__construct","net_scp::net_scp","net_scp::put","net_scp::get","net_scp::_send","net_scp::_receive","net_scp::_close","net_sftp::__construct","net_sftp::net_sftp","net_sftp::login","net_sftp::disablestatcache","net_sftp::enablestatcache","net_sftp::clearstatcache","net_sftp::enablepathcanonicalization","net_sftp::disablepathcanonicalization","net_sftp::pwd","net_sftp::_logerror","net_sftp::realpath","net_sftp::_realpath","net_sftp::chdir","net_sftp::nlist","net_sftp::_nlist_helper","net_sftp::rawlist","net_sftp::_list","net_sftp::_comparator","net_sftp::setlistorder","net_sftp::size","net_sftp::_update_stat_cache","net_sftp::_remove_from_stat_cache","net_sftp::_query_stat_cache","net_sftp::stat","net_sftp::lstat","net_sftp::_stat","net_sftp::truncate","net_sftp::touch","net_sftp::chown","net_sftp::chgrp","net_sftp::chmod","net_sftp::_setstat","net_sftp::_setstat_recursive","net_sftp::readlink","net_sftp::symlink","net_sftp::mkdir","net_sftp::_mkdir_helper","net_sftp::rmdir","net_sftp::put","net_sftp::_read_put_responses","net_sftp::_close_handle","net_sftp::get","net_sftp::delete","net_sftp::_delete_recursive","net_sftp::file_exists","net_sftp::is_dir","net_sftp::is_file","net_sftp::is_link","net_sftp::is_readable","net_sftp::is_writable","net_sftp::is_writeable","net_sftp::fileatime","net_sftp::filemtime","net_sftp::fileperms","net_sftp::fileowner","net_sftp::filegroup","net_sftp::filesize","net_sftp::filetype","net_sftp::_get_stat_cache_prop","net_sftp::_get_lstat_cache_prop","net_sftp::_get_xstat_cache_prop","net_sftp::rename","net_sftp::_parseattributes","net_sftp::_parsemode","net_sftp::_parselongname","net_sftp::_send_sftp_packet","net_sftp::_get_sftp_packet","net_sftp::getsftplog","net_sftp::getsftperrors","net_sftp::getlastsftperror","net_sftp::getsupportedversions","net_sftp::_disconnect","net_sftp_stream::__construct","net_sftp_stream::_parse_path","net_sftp_stream::_stream_open","net_sftp_stream::_stream_read","net_sftp_stream::_stream_write","net_sftp_stream::_stream_tell","net_sftp_stream::_stream_eof","net_sftp_stream::_stream_seek","net_sftp_stream::_stream_metadata","net_sftp_stream::_stream_cast","net_sftp_stream::_stream_lock","net_sftp_stream::_rename","net_sftp_stream::_dir_opendir","net_sftp_stream::_dir_readdir","net_sftp_stream::_dir_rewinddir","net_sftp_stream::_dir_closedir","net_sftp_stream::_mkdir","net_sftp_stream::_rmdir","net_sftp_stream::_stream_flush","net_sftp_stream::_stream_stat","net_sftp_stream::_unlink","net_sftp_stream::_url_stat","net_sftp_stream::_stream_truncate","net_sftp_stream::_stream_set_option","net_sftp_stream::_stream_close","net_sftp_stream::__call","net_ssh1::__construct","net_ssh1::net_ssh1","net_ssh1::_connect","net_ssh1::login","net_ssh1::settimeout","net_ssh1::exec","net_ssh1::_initshell","net_ssh1::write","net_ssh1::read","net_ssh1::interactivewrite","net_ssh1::interactiveread","net_ssh1::disconnect","net_ssh1::__destruct","net_ssh1::_disconnect","net_ssh1::_get_binary_packet","net_ssh1::_send_binary_packet","net_ssh1::_crc","net_ssh1::_string_shift","net_ssh1::_rsa_crypt","net_ssh1::_define_array","net_ssh1::getlog","net_ssh1::_format_log","net_ssh1::_format_log_helper","net_ssh1::getserverkeypublicexponent","net_ssh1::getserverkeypublicmodulus","net_ssh1::gethostkeypublicexponent","net_ssh1::gethostkeypublicmodulus","net_ssh1::getsupportedciphers","net_ssh1::getsupportedauthentications","net_ssh1::getserveridentification","net_ssh1::_append_log","net_ssh2::__construct","net_ssh2::net_ssh2","net_ssh2::setcryptoengine","net_ssh2::sendidentificationstringfirst","net_ssh2::sendidentificationstringlast","net_ssh2::sendkexinitfirst","net_ssh2::sendkexinitlast","net_ssh2::_connect","net_ssh2::_generate_identifier","net_ssh2::_key_exchange","net_ssh2::_encryption_algorithm_to_key_size","net_ssh2::_bad_algorithm_candidate","net_ssh2::login","net_ssh2::_login","net_ssh2::_login_helper","net_ssh2::_keyboard_interactive_login","net_ssh2::_keyboard_interactive_process","net_ssh2::_ssh_agent_login","net_ssh2::_privatekey_login","net_ssh2::settimeout","net_ssh2::getstderror","net_ssh2::exec","net_ssh2::_initshell","net_ssh2::_get_interactive_channel","net_ssh2::_get_open_channel","net_ssh2::read","net_ssh2::write","net_ssh2::startsubsystem","net_ssh2::stopsubsystem","net_ssh2::reset","net_ssh2::istimeout","net_ssh2::disconnect","net_ssh2::__destruct","net_ssh2::isconnected","net_ssh2::isauthenticated","net_ssh2::ping","net_ssh2::_reconnect","net_ssh2::_reset_connection","net_ssh2::_get_binary_packet","net_ssh2::_filter","net_ssh2::enablequietmode","net_ssh2::disablequietmode","net_ssh2::isquietmodeenabled","net_ssh2::enablepty","net_ssh2::disablepty","net_ssh2::isptyenabled","net_ssh2::_get_channel_packet","net_ssh2::_send_binary_packet","net_ssh2::_append_log","net_ssh2::_send_channel_packet","net_ssh2::_close_channel","net_ssh2::_disconnect","net_ssh2::_string_shift","net_ssh2::_define_array","net_ssh2::getlog","net_ssh2::_format_log","net_ssh2::_format_log_helper","net_ssh2::_on_channel_open","net_ssh2::_array_intersect_first","net_ssh2::geterrors","net_ssh2::getlasterror","net_ssh2::getserveridentification","net_ssh2::getkexalgorithms","net_ssh2::getserverhostkeyalgorithms","net_ssh2::getencryptionalgorithmsclient2server","net_ssh2::getencryptionalgorithmsserver2client","net_ssh2::getmacalgorithmsclient2server","net_ssh2::getmacalgorithmsserver2client","net_ssh2::getcompressionalgorithmsclient2server","net_ssh2::getcompressionalgorithmsserver2client","net_ssh2::getlanguagesserver2client","net_ssh2::getlanguagesclient2server","net_ssh2::getbannermessage","net_ssh2::getserverpublichostkey","net_ssh2::getexitstatus","net_ssh2::getwindowcolumns","net_ssh2::getwindowrows","net_ssh2::setwindowcolumns","net_ssh2::setwindowrows","net_ssh2::setwindowsize","phpseclibfunctionaltestcase::setupbeforeclass","phpseclibtestcase::teardown","system_ssh_agent::__construct","system_ssh_agent::system_ssh_agent","system_ssh_agent::requestidentities","system_ssh_agent::startsshforwarding","system_ssh_agent::_request_forwarding","system_ssh_agent::_on_channel_open","system_ssh_agent::_forward_data","system_ssh_agent_identity::__construct","system_ssh_agent_identity::system_ssh_agent_identity","system_ssh_agent_identity::setpublickey","system_ssh_agent_identity::setpublickeyblob","system_ssh_agent_identity::getpublickey","system_ssh_agent_identity::setsignaturemode","system_ssh_agent_identity::sethash","system_ssh_agent_identity::sign","system_ssh_agent_identity::_string_shift","unit_crypt_aes_testcase::continuousbuffercombos","unit_crypt_aes_testcase::testencryptdecryptwithcontinuousbuffer","unit_crypt_aes_testcase::testkeypaddingrijndael","unit_crypt_aes_testcase::testkeypaddingaes","unit_crypt_aes_testcase::continuousbufferbatterycombos","unit_crypt_aes_testcase::testcontinuousbufferbattery","unit_crypt_aes_testcase::testnoncontinuousbufferbattery","unit_crypt_aes_testcase::testgfsbox128","unit_crypt_aes_testcase::testgfsbox192","unit_crypt_aes_testcase::testgfsbox256","unit_crypt_aes_testcase::testgetkeylengthdefault","unit_crypt_aes_testcase::testgetkeylengthwith192bitkey","unit_crypt_aes_testcase::testsetkeylengthwithlargerkey","unit_crypt_aes_testcase::testsetkeylengthwithsmallerkey","unit_crypt_aes_testcase::testcontinuousbuffer","unit_crypt_blowfishtest::enginevectors","unit_crypt_blowfishtest::testvectors","unit_crypt_blowfishtest::testkeysizes","unit_crypt_destest::testencryptpadding","unit_crypt_destest::testdecryptpadding","unit_crypt_hash_md5test::getinstance","unit_crypt_hash_md5test::testhash","unit_crypt_hash_md5test::hashdata","unit_crypt_hash_md5test::testhmac","unit_crypt_hash_md5test::hmacdata","unit_crypt_hash_sha256test::getinstance","unit_crypt_hash_sha256test::testhash","unit_crypt_hash_sha256test::hashdata","unit_crypt_hash_sha256test::testhmac","unit_crypt_hash_sha256test::hmacdata","unit_crypt_hash_sha256_96test::getinstance","unit_crypt_hash_sha256_96test::testhash","unit_crypt_hash_sha256_96test::testhmac","unit_crypt_hash_sha512test::getinstance","unit_crypt_hash_sha512test::testhash","unit_crypt_hash_sha512test::hashdata","unit_crypt_hash_sha512test::testhmac","unit_crypt_hash_sha512test::hmacdata","unit_crypt_hash_sha512_96test::getinstance","unit_crypt_hash_sha512_96test::testhash","unit_crypt_hash_sha512_96test::testhmac","unit_crypt_hash_testcase::setupbeforeclass","unit_crypt_hash_testcase::setup","unit_crypt_rc2test::enginevectors","unit_crypt_rc2test::testencryptpadding","unit_crypt_rc2test::testvectors","unit_crypt_rc4test::enginevectors","unit_crypt_rc4test::testvectors","unit_crypt_rc4test::testkeysizes","unit_crypt_rsa_loadkeytest::testbadkey","unit_crypt_rsa_loadkeytest::testpkcs1key","unit_crypt_rsa_loadkeytest::testpkcs1spaceskey","unit_crypt_rsa_loadkeytest::testpkcs1noheaderkey","unit_crypt_rsa_loadkeytest::testpkcs1nowhitespacenoheaderkey","unit_crypt_rsa_loadkeytest::testrawpkcs1key","unit_crypt_rsa_loadkeytest::testloadpkcs8privatekey","unit_crypt_rsa_loadkeytest::testsavepkcs8privatekey","unit_crypt_rsa_loadkeytest::testpubkey1","unit_crypt_rsa_loadkeytest::testpubkey2","unit_crypt_rsa_loadkeytest::testsshpubkey","unit_crypt_rsa_loadkeytest::testsshpubkeyfingerprint","unit_crypt_rsa_loadkeytest::testsetprivate","unit_crypt_rsa_loadkeytest::testunsignedxml","unit_crypt_rsa_loadkeytest::testsignedpkcs1","unit_crypt_rsa_loadkeytest::testpkcs8only","unit_crypt_rsa_loadkeytest::testsetload","unit_crypt_rsa_loadkeytest::testzerocomponents","unit_crypt_rsa_loadkeytest::testgoodbad","unit_crypt_rsa_loadkeytest::testopensshprivate","unit_crypt_rsa_modetest::testencryptionmodenone","unit_crypt_rsa_modetest::testpsssigs","unit_crypt_rsa_modetest::testzerolengthsalt","unit_crypt_randomtest::stringlengthdata","unit_crypt_randomtest::teststringlength","unit_crypt_randomtest::teststringuniqueness","unit_crypt_tripledestest::enginevectors","unit_crypt_tripledestest::testvectors","unit_crypt_tripledestest::engineivvectors","unit_crypt_tripledestest::testvectorswithiv","unit_crypt_tripledestest::testinnerchaining","unit_crypt_tripledestest::testcorrectselfuseinlambda","unit_crypt_twofishtest::testvectors","unit_file_ansitest::testcase1","unit_file_ansitest::testlineoverflow","unit_file_asn1test::testanystring","unit_file_asn1test::testincorrectstring","unit_file_asn1test::testindefinitelength","unit_file_asn1test::testdefinitelength","unit_file_asn1test::testcontextspecificnonconstructed","unit_file_asn1test::testemptycontexttag","unit_file_asn1test::testinfiniteloop","unit_file_asn1test::testapplicationtag","unit_file_asn1test::testinvalidcertificate","unit_file_asn1test::testoids","unit_file_asn1test::testexplicitimplicitdate","unit_file_x509_csrtest::testloadcsr","unit_file_x509_csrtest::testcsrwithattributes","unit_file_x509_csrtest::testcsrder","unit_file_x509_csrtest::testnewcsr","unit_file_x509_spkactest::testloadspkac","unit_file_x509_spkactest::testsavespkac","unit_file_x509_spkactest::testbadsignaturespkac","unit_file_x509_x509test::testextensionmapping","unit_file_x509_x509test::testloadunsupportedextension","unit_file_x509_x509test::testsaveunsupportedextension","unit_file_x509_x509test::testsavenullrsaparam","unit_file_x509_x509test::testgetoid","unit_file_x509_x509test::testipaddresssubjectaltnamesdecoding","unit_file_x509_x509test::testpostaladdress","unit_file_x509_x509test::teststrictcomparison","unit_file_x509_x509test::testmultipledomainnames","unit_file_x509_x509test::testutctimewithoutseconds","unit_file_x509_x509test::testvalidateurl","unit_file_x509_x509test::testvalidatesignaturewithoutkeyidentifier","unit_file_x509_x509test::testvalidatesignatureselfsignedwithoutkeyidentifier","unit_file_x509_x509test::testextensionremoval","unit_file_x509_x509test::testauthorityinfoaccess","unit_file_x509_x509test::testvalidatedate","unit_file_x509_x509test::testlongtagonbadcert","unit_file_x509_x509test::testnameconstraintip","unit_math_biginteger_bcmathtest::setupbeforeclass","unit_math_biginteger_gmptest::setupbeforeclass","unit_math_biginteger_internalopenssltest::setupbeforeclass","unit_math_biginteger_internaltest::setupbeforeclass","unit_math_biginteger_internaltest::testinternalrepresentation","unit_math_biginteger_testcase::setupbeforeclass","unit_math_biginteger_testcase::getinstance","unit_math_biginteger_testcase::testconstructorbase2","unit_math_biginteger_testcase::testconstructorbase10","unit_math_biginteger_testcase::testconstructorbase16","unit_math_biginteger_testcase::testtobytes","unit_math_biginteger_testcase::testtobytestwoscompliment","unit_math_biginteger_testcase::testtohex","unit_math_biginteger_testcase::testtobits","unit_math_biginteger_testcase::testadd","unit_math_biginteger_testcase::testsubtract","unit_math_biginteger_testcase::testmultiply","unit_math_biginteger_testcase::testdivide","unit_math_biginteger_testcase::testmodpow","unit_math_biginteger_testcase::testmodinverse","unit_math_biginteger_testcase::testextendedgcd","unit_math_biginteger_testcase::testgcd","unit_math_biginteger_testcase::testabs","unit_math_biginteger_testcase::testequals","unit_math_biginteger_testcase::testcompare","unit_math_biginteger_testcase::testbitwiseand","unit_math_biginteger_testcase::testbitwiseor","unit_math_biginteger_testcase::testbitwisexor","unit_math_biginteger_testcase::testbitwisenot","unit_math_biginteger_testcase::testbitwiseleftshift","unit_math_biginteger_testcase::testbitwiserightshift","unit_math_biginteger_testcase::testserializable","unit_math_biginteger_testcase::testclone","unit_math_biginteger_testcase::testrandomtwoargument","unit_math_biginteger_testcase::testrandomoneargument","unit_math_biginteger_testcase::testdiffiehellmankeyagreement","unit_math_biginteger_testcase::testdebuginfo","unit_math_biginteger_testcase::testslidingwindow","unit_math_biginteger_testcase::test48tohex","unit_math_biginteger_testcase::testzerobase10","unit_net_sftpstreamtest::testregisterwithoutargument","unit_net_sftpstreamtest::testregisterwithargument","unit_net_ssh1test::formatlogdataprovider","unit_net_ssh1test::testformatlog","unit_net_ssh2test::formatlogdataprovider","unit_net_ssh2test::testformatlog","unit_net_ssh2test::testgenerateidentifier","unit_net_ssh2test::testgetexitstatusifnotconnected","unit_net_ssh2test::testptyidefaultvalue","unit_net_ssh2test::testenablepty","unit_net_ssh2test::testquietmodedefaultvalue","unit_net_ssh2test::testenablequietmode","phpseclib\\crypt\\aes::setblocklength","phpseclib\\crypt\\aes::setkeylength","phpseclib\\crypt\\aes::setkey","phpseclib\\crypt\\base::__construct","phpseclib\\crypt\\base::setiv","phpseclib\\crypt\\base::setkeylength","phpseclib\\crypt\\base::getkeylength","phpseclib\\crypt\\base::getblocklength","phpseclib\\crypt\\base::setkey","phpseclib\\crypt\\base::setpassword","phpseclib\\crypt\\base::encrypt","phpseclib\\crypt\\base::decrypt","phpseclib\\crypt\\base::_openssl_ctr_process","phpseclib\\crypt\\base::_openssl_ofb_process","phpseclib\\crypt\\base::_openssl_translate_mode","phpseclib\\crypt\\base::enablepadding","phpseclib\\crypt\\base::disablepadding","phpseclib\\crypt\\base::enablecontinuousbuffer","phpseclib\\crypt\\base::disablecontinuousbuffer","phpseclib\\crypt\\base::isvalidengine","phpseclib\\crypt\\base::setpreferredengine","phpseclib\\crypt\\base::getengine","phpseclib\\crypt\\base::_setengine","phpseclib\\crypt\\base::_setup","phpseclib\\crypt\\base::_setupmcrypt","phpseclib\\crypt\\base::_pad","phpseclib\\crypt\\base::_unpad","phpseclib\\crypt\\base::_clearbuffers","phpseclib\\crypt\\base::_string_shift","phpseclib\\crypt\\base::_string_pop","phpseclib\\crypt\\base::_increment_str","phpseclib\\crypt\\base::_setupinlinecrypt","phpseclib\\crypt\\base::_createinlinecryptfunction","phpseclib\\crypt\\base::_getlambdafunctions","phpseclib\\crypt\\base::_hashinlinecryptfunction","phpseclib\\crypt\\base::safe_intval","phpseclib\\crypt\\base::safe_intval_inline","phpseclib\\crypt\\blowfish::setkeylength","phpseclib\\crypt\\blowfish::isvalidengine","phpseclib\\crypt\\blowfish::_setupkey","phpseclib\\crypt\\blowfish::_encryptblock","phpseclib\\crypt\\blowfish::_decryptblock","phpseclib\\crypt\\blowfish::_setupinlinecrypt","phpseclib\\crypt\\des::isvalidengine","phpseclib\\crypt\\des::setkey","phpseclib\\crypt\\des::_encryptblock","phpseclib\\crypt\\des::_decryptblock","phpseclib\\crypt\\des::_processblock","phpseclib\\crypt\\des::_setupkey","phpseclib\\crypt\\des::_setupinlinecrypt","phpseclib\\crypt\\hash::__construct","phpseclib\\crypt\\hash::setkey","phpseclib\\crypt\\hash::_computekey","phpseclib\\crypt\\hash::gethash","phpseclib\\crypt\\hash::sethash","phpseclib\\crypt\\hash::hash","phpseclib\\crypt\\hash::getlength","phpseclib\\crypt\\hash::_md5","phpseclib\\crypt\\hash::_sha1","phpseclib\\crypt\\hash::_md2","phpseclib\\crypt\\hash::_sha256","phpseclib\\crypt\\hash::_sha512","phpseclib\\crypt\\hash::_rightrotate","phpseclib\\crypt\\hash::_rightshift","phpseclib\\crypt\\hash::_not","phpseclib\\crypt\\hash::_add","phpseclib\\crypt\\hash::_string_shift","phpseclib\\crypt\\rc2::isvalidengine","phpseclib\\crypt\\rc2::setkeylength","phpseclib\\crypt\\rc2::getkeylength","phpseclib\\crypt\\rc2::setkey","phpseclib\\crypt\\rc2::encrypt","phpseclib\\crypt\\rc2::decrypt","phpseclib\\crypt\\rc2::_encryptblock","phpseclib\\crypt\\rc2::_decryptblock","phpseclib\\crypt\\rc2::_setupmcrypt","phpseclib\\crypt\\rc2::_setupkey","phpseclib\\crypt\\rc2::_setupinlinecrypt","phpseclib\\crypt\\rc4::__construct","phpseclib\\crypt\\rc4::isvalidengine","phpseclib\\crypt\\rc4::setiv","phpseclib\\crypt\\rc4::setkeylength","phpseclib\\crypt\\rc4::encrypt","phpseclib\\crypt\\rc4::decrypt","phpseclib\\crypt\\rc4::_encryptblock","phpseclib\\crypt\\rc4::_decryptblock","phpseclib\\crypt\\rc4::_setupkey","phpseclib\\crypt\\rc4::_crypt","phpseclib\\crypt\\rsa::__construct","phpseclib\\crypt\\rsa::createkey","phpseclib\\crypt\\rsa::_convertprivatekey","phpseclib\\crypt\\rsa::_convertpublickey","phpseclib\\crypt\\rsa::_parsekey","phpseclib\\crypt\\rsa::getsize","phpseclib\\crypt\\rsa::_start_element_handler","phpseclib\\crypt\\rsa::_stop_element_handler","phpseclib\\crypt\\rsa::_data_handler","phpseclib\\crypt\\rsa::loadkey","phpseclib\\crypt\\rsa::setpassword","phpseclib\\crypt\\rsa::setpublickey","phpseclib\\crypt\\rsa::setprivatekey","phpseclib\\crypt\\rsa::getpublickey","phpseclib\\crypt\\rsa::getpublickeyfingerprint","phpseclib\\crypt\\rsa::getprivatekey","phpseclib\\crypt\\rsa::_getprivatepublickey","phpseclib\\crypt\\rsa::__tostring","phpseclib\\crypt\\rsa::__clone","phpseclib\\crypt\\rsa::_generateminmax","phpseclib\\crypt\\rsa::_decodelength","phpseclib\\crypt\\rsa::_encodelength","phpseclib\\crypt\\rsa::_string_shift","phpseclib\\crypt\\rsa::setprivatekeyformat","phpseclib\\crypt\\rsa::setpublickeyformat","phpseclib\\crypt\\rsa::sethash","phpseclib\\crypt\\rsa::setmgfhash","phpseclib\\crypt\\rsa::setsaltlength","phpseclib\\crypt\\rsa::_i2osp","phpseclib\\crypt\\rsa::_os2ip","phpseclib\\crypt\\rsa::_exponentiate","phpseclib\\crypt\\rsa::_blind","phpseclib\\crypt\\rsa::_equals","phpseclib\\crypt\\rsa::_rsaep","phpseclib\\crypt\\rsa::_rsadp","phpseclib\\crypt\\rsa::_rsasp1","phpseclib\\crypt\\rsa::_rsavp1","phpseclib\\crypt\\rsa::_mgf1","phpseclib\\crypt\\rsa::_rsaes_oaep_encrypt","phpseclib\\crypt\\rsa::_rsaes_oaep_decrypt","phpseclib\\crypt\\rsa::_raw_encrypt","phpseclib\\crypt\\rsa::_rsaes_pkcs1_v1_5_encrypt","phpseclib\\crypt\\rsa::_rsaes_pkcs1_v1_5_decrypt","phpseclib\\crypt\\rsa::_emsa_pss_encode","phpseclib\\crypt\\rsa::_emsa_pss_verify","phpseclib\\crypt\\rsa::_rsassa_pss_sign","phpseclib\\crypt\\rsa::_rsassa_pss_verify","phpseclib\\crypt\\rsa::_emsa_pkcs1_v1_5_encode","phpseclib\\crypt\\rsa::_rsassa_pkcs1_v1_5_sign","phpseclib\\crypt\\rsa::_rsassa_pkcs1_v1_5_verify","phpseclib\\crypt\\rsa::setencryptionmode","phpseclib\\crypt\\rsa::setsignaturemode","phpseclib\\crypt\\rsa::setcomment","phpseclib\\crypt\\rsa::getcomment","phpseclib\\crypt\\rsa::encrypt","phpseclib\\crypt\\rsa::decrypt","phpseclib\\crypt\\rsa::sign","phpseclib\\crypt\\rsa::verify","phpseclib\\crypt\\rsa::_extractber","phpseclib\\crypt\\rijndael::setkeylength","phpseclib\\crypt\\rijndael::setblocklength","phpseclib\\crypt\\rijndael::isvalidengine","phpseclib\\crypt\\rijndael::_encryptblock","phpseclib\\crypt\\rijndael::_decryptblock","phpseclib\\crypt\\rijndael::_setupkey","phpseclib\\crypt\\rijndael::_subword","phpseclib\\crypt\\rijndael::_gettables","phpseclib\\crypt\\rijndael::_getinvtables","phpseclib\\crypt\\rijndael::_setupinlinecrypt","phpseclib\\crypt\\tripledes::__construct","phpseclib\\crypt\\tripledes::isvalidengine","phpseclib\\crypt\\tripledes::setiv","phpseclib\\crypt\\tripledes::setkeylength","phpseclib\\crypt\\tripledes::setkey","phpseclib\\crypt\\tripledes::encrypt","phpseclib\\crypt\\tripledes::decrypt","phpseclib\\crypt\\tripledes::enablecontinuousbuffer","phpseclib\\crypt\\tripledes::disablecontinuousbuffer","phpseclib\\crypt\\tripledes::_setupkey","phpseclib\\crypt\\tripledes::setpreferredengine","phpseclib\\crypt\\twofish::setkeylength","phpseclib\\crypt\\twofish::_setupkey","phpseclib\\crypt\\twofish::_mdsrem","phpseclib\\crypt\\twofish::_encryptblock","phpseclib\\crypt\\twofish::_decryptblock","phpseclib\\crypt\\twofish::_setupinlinecrypt","phpseclib\\file\\ansi::__construct","phpseclib\\file\\ansi::setdimensions","phpseclib\\file\\ansi::sethistory","phpseclib\\file\\ansi::loadstring","phpseclib\\file\\ansi::appendstring","phpseclib\\file\\ansi::_newline","phpseclib\\file\\ansi::_processcoordinate","phpseclib\\file\\ansi::_getscreen","phpseclib\\file\\ansi::getscreen","phpseclib\\file\\ansi::gethistory","phpseclib\\file\\asn1::decodeber","phpseclib\\file\\asn1::_decode_ber","phpseclib\\file\\asn1::asn1map","phpseclib\\file\\asn1::encodeder","phpseclib\\file\\asn1::_encode_der","phpseclib\\file\\asn1::_encodelength","phpseclib\\file\\asn1::_decodeoid","phpseclib\\file\\asn1::_encodeoid","phpseclib\\file\\asn1::_decodetime","phpseclib\\file\\asn1::settimeformat","phpseclib\\file\\asn1::loadoids","phpseclib\\file\\asn1::loadfilters","phpseclib\\file\\asn1::_string_shift","phpseclib\\file\\asn1::convert","phpseclib\\file\\asn1\\element::__construct","phpseclib\\file\\x509::__construct","phpseclib\\file\\x509::loadx509","phpseclib\\file\\x509::savex509","phpseclib\\file\\x509::_mapinextensions","phpseclib\\file\\x509::_mapoutextensions","phpseclib\\file\\x509::_mapinattributes","phpseclib\\file\\x509::_mapoutattributes","phpseclib\\file\\x509::_mapindns","phpseclib\\file\\x509::_mapoutdns","phpseclib\\file\\x509::_getmapping","phpseclib\\file\\x509::loadca","phpseclib\\file\\x509::validateurl","phpseclib\\file\\x509::validatedate","phpseclib\\file\\x509::_testforintermediate","phpseclib\\file\\x509::validatesignature","phpseclib\\file\\x509::_validatesignaturecountable","phpseclib\\file\\x509::_validatesignature","phpseclib\\file\\x509::_reformatkey","phpseclib\\file\\x509::_decodeip","phpseclib\\file\\x509::_decodenameconstraintip","phpseclib\\file\\x509::_encodeip","phpseclib\\file\\x509::_translatednprop","phpseclib\\file\\x509::setdnprop","phpseclib\\file\\x509::removednprop","phpseclib\\file\\x509::getdnprop","phpseclib\\file\\x509::setdn","phpseclib\\file\\x509::getdn","phpseclib\\file\\x509::getissuerdn","phpseclib\\file\\x509::getsubjectdn","phpseclib\\file\\x509::getissuerdnprop","phpseclib\\file\\x509::getsubjectdnprop","phpseclib\\file\\x509::getchain","phpseclib\\file\\x509::setpublickey","phpseclib\\file\\x509::setprivatekey","phpseclib\\file\\x509::setchallenge","phpseclib\\file\\x509::getpublickey","phpseclib\\file\\x509::loadcsr","phpseclib\\file\\x509::savecsr","phpseclib\\file\\x509::loadspkac","phpseclib\\file\\x509::savespkac","phpseclib\\file\\x509::loadcrl","phpseclib\\file\\x509::savecrl","phpseclib\\file\\x509::_timefield","phpseclib\\file\\x509::sign","phpseclib\\file\\x509::signcsr","phpseclib\\file\\x509::signspkac","phpseclib\\file\\x509::signcrl","phpseclib\\file\\x509::_sign","phpseclib\\file\\x509::setstartdate","phpseclib\\file\\x509::setenddate","phpseclib\\file\\x509::setserialnumber","phpseclib\\file\\x509::makeca","phpseclib\\file\\x509::_issubarrayvalid","phpseclib\\file\\x509::_subarrayunchecked","phpseclib\\file\\x509::_subarray","phpseclib\\file\\x509::_extensions","phpseclib\\file\\x509::_removeextension","phpseclib\\file\\x509::_getextension","phpseclib\\file\\x509::_getextensions","phpseclib\\file\\x509::_setextension","phpseclib\\file\\x509::removeextension","phpseclib\\file\\x509::getextension","phpseclib\\file\\x509::getextensions","phpseclib\\file\\x509::setextension","phpseclib\\file\\x509::removeattribute","phpseclib\\file\\x509::getattribute","phpseclib\\file\\x509::getattributes","phpseclib\\file\\x509::setattribute","phpseclib\\file\\x509::setkeyidentifier","phpseclib\\file\\x509::computekeyidentifier","phpseclib\\file\\x509::_formatsubjectpublickey","phpseclib\\file\\x509::setdomain","phpseclib\\file\\x509::setipaddress","phpseclib\\file\\x509::_dnsname","phpseclib\\file\\x509::_ipaddress","phpseclib\\file\\x509::_revokedcertificate","phpseclib\\file\\x509::revoke","phpseclib\\file\\x509::unrevoke","phpseclib\\file\\x509::getrevoked","phpseclib\\file\\x509::listrevoked","phpseclib\\file\\x509::removerevokedcertificateextension","phpseclib\\file\\x509::getrevokedcertificateextension","phpseclib\\file\\x509::getrevokedcertificateextensions","phpseclib\\file\\x509::setrevokedcertificateextension","phpseclib\\file\\x509::_extractber","phpseclib\\file\\x509::getoid","phpseclib\\math\\biginteger::__construct","phpseclib\\math\\biginteger::tobytes","phpseclib\\math\\biginteger::tohex","phpseclib\\math\\biginteger::tobits","phpseclib\\math\\biginteger::tostring","phpseclib\\math\\biginteger::copy","phpseclib\\math\\biginteger::__tostring","phpseclib\\math\\biginteger::__clone","phpseclib\\math\\biginteger::__sleep","phpseclib\\math\\biginteger::__wakeup","phpseclib\\math\\biginteger::__debuginfo","phpseclib\\math\\biginteger::add","phpseclib\\math\\biginteger::_add","phpseclib\\math\\biginteger::subtract","phpseclib\\math\\biginteger::_subtract","phpseclib\\math\\biginteger::multiply","phpseclib\\math\\biginteger::_multiply","phpseclib\\math\\biginteger::_regularmultiply","phpseclib\\math\\biginteger::_karatsuba","phpseclib\\math\\biginteger::_square","phpseclib\\math\\biginteger::_basesquare","phpseclib\\math\\biginteger::_karatsubasquare","phpseclib\\math\\biginteger::divide","phpseclib\\math\\biginteger::_divide_digit","phpseclib\\math\\biginteger::modpow","phpseclib\\math\\biginteger::powmod","phpseclib\\math\\biginteger::_slidingwindow","phpseclib\\math\\biginteger::_reduce","phpseclib\\math\\biginteger::_preparereduce","phpseclib\\math\\biginteger::_multiplyreduce","phpseclib\\math\\biginteger::_squarereduce","phpseclib\\math\\biginteger::_mod2","phpseclib\\math\\biginteger::_barrett","phpseclib\\math\\biginteger::_regularbarrett","phpseclib\\math\\biginteger::_multiplylower","phpseclib\\math\\biginteger::_montgomery","phpseclib\\math\\biginteger::_montgomerymultiply","phpseclib\\math\\biginteger::_prepmontgomery","phpseclib\\math\\biginteger::_modinverse67108864","phpseclib\\math\\biginteger::modinverse","phpseclib\\math\\biginteger::extendedgcd","phpseclib\\math\\biginteger::gcd","phpseclib\\math\\biginteger::abs","phpseclib\\math\\biginteger::compare","phpseclib\\math\\biginteger::_compare","phpseclib\\math\\biginteger::equals","phpseclib\\math\\biginteger::setprecision","phpseclib\\math\\biginteger::bitwise_and","phpseclib\\math\\biginteger::bitwise_or","phpseclib\\math\\biginteger::bitwise_xor","phpseclib\\math\\biginteger::bitwise_not","phpseclib\\math\\biginteger::bitwise_rightshift","phpseclib\\math\\biginteger::bitwise_leftshift","phpseclib\\math\\biginteger::bitwise_leftrotate","phpseclib\\math\\biginteger::bitwise_rightrotate","phpseclib\\math\\biginteger::_random_number_helper","phpseclib\\math\\biginteger::random","phpseclib\\math\\biginteger::randomprime","phpseclib\\math\\biginteger::_make_odd","phpseclib\\math\\biginteger::isprime","phpseclib\\math\\biginteger::_lshift","phpseclib\\math\\biginteger::_rshift","phpseclib\\math\\biginteger::_normalize","phpseclib\\math\\biginteger::_trim","phpseclib\\math\\biginteger::_array_repeat","phpseclib\\math\\biginteger::_base256_lshift","phpseclib\\math\\biginteger::_base256_rshift","phpseclib\\math\\biginteger::_int2bytes","phpseclib\\math\\biginteger::_bytes2int","phpseclib\\math\\biginteger::_encodeasn1length","phpseclib\\math\\biginteger::_safe_divide","phpseclib\\net\\scp::__construct","phpseclib\\net\\scp::put","phpseclib\\net\\scp::get","phpseclib\\net\\scp::_send","phpseclib\\net\\scp::_receive","phpseclib\\net\\scp::_close","phpseclib\\net\\sftp::__construct","phpseclib\\net\\sftp::login","phpseclib\\net\\sftp::disablestatcache","phpseclib\\net\\sftp::enablestatcache","phpseclib\\net\\sftp::clearstatcache","phpseclib\\net\\sftp::enablepathcanonicalization","phpseclib\\net\\sftp::disablepathcanonicalization","phpseclib\\net\\sftp::pwd","phpseclib\\net\\sftp::_logerror","phpseclib\\net\\sftp::realpath","phpseclib\\net\\sftp::_realpath","phpseclib\\net\\sftp::chdir","phpseclib\\net\\sftp::nlist","phpseclib\\net\\sftp::_nlist_helper","phpseclib\\net\\sftp::rawlist","phpseclib\\net\\sftp::_list","phpseclib\\net\\sftp::_comparator","phpseclib\\net\\sftp::setlistorder","phpseclib\\net\\sftp::size","phpseclib\\net\\sftp::_update_stat_cache","phpseclib\\net\\sftp::_remove_from_stat_cache","phpseclib\\net\\sftp::_query_stat_cache","phpseclib\\net\\sftp::stat","phpseclib\\net\\sftp::lstat","phpseclib\\net\\sftp::_stat","phpseclib\\net\\sftp::truncate","phpseclib\\net\\sftp::touch","phpseclib\\net\\sftp::chown","phpseclib\\net\\sftp::chgrp","phpseclib\\net\\sftp::chmod","phpseclib\\net\\sftp::_setstat","phpseclib\\net\\sftp::_setstat_recursive","phpseclib\\net\\sftp::readlink","phpseclib\\net\\sftp::symlink","phpseclib\\net\\sftp::mkdir","phpseclib\\net\\sftp::_mkdir_helper","phpseclib\\net\\sftp::rmdir","phpseclib\\net\\sftp::put","phpseclib\\net\\sftp::_read_put_responses","phpseclib\\net\\sftp::_close_handle","phpseclib\\net\\sftp::get","phpseclib\\net\\sftp::delete","phpseclib\\net\\sftp::_delete_recursive","phpseclib\\net\\sftp::file_exists","phpseclib\\net\\sftp::is_dir","phpseclib\\net\\sftp::is_file","phpseclib\\net\\sftp::is_link","phpseclib\\net\\sftp::is_readable","phpseclib\\net\\sftp::is_writable","phpseclib\\net\\sftp::is_writeable","phpseclib\\net\\sftp::fileatime","phpseclib\\net\\sftp::filemtime","phpseclib\\net\\sftp::fileperms","phpseclib\\net\\sftp::fileowner","phpseclib\\net\\sftp::filegroup","phpseclib\\net\\sftp::filesize","phpseclib\\net\\sftp::filetype","phpseclib\\net\\sftp::_get_stat_cache_prop","phpseclib\\net\\sftp::_get_lstat_cache_prop","phpseclib\\net\\sftp::_get_xstat_cache_prop","phpseclib\\net\\sftp::rename","phpseclib\\net\\sftp::_parseattributes","phpseclib\\net\\sftp::_parsemode","phpseclib\\net\\sftp::_parselongname","phpseclib\\net\\sftp::_send_sftp_packet","phpseclib\\net\\sftp::_get_sftp_packet","phpseclib\\net\\sftp::getsftplog","phpseclib\\net\\sftp::getsftperrors","phpseclib\\net\\sftp::getlastsftperror","phpseclib\\net\\sftp::getsupportedversions","phpseclib\\net\\sftp::_disconnect","phpseclib\\net\\sftp\\stream::__construct","phpseclib\\net\\sftp\\stream::_parse_path","phpseclib\\net\\sftp\\stream::_stream_open","phpseclib\\net\\sftp\\stream::_stream_read","phpseclib\\net\\sftp\\stream::_stream_write","phpseclib\\net\\sftp\\stream::_stream_tell","phpseclib\\net\\sftp\\stream::_stream_eof","phpseclib\\net\\sftp\\stream::_stream_seek","phpseclib\\net\\sftp\\stream::_stream_metadata","phpseclib\\net\\sftp\\stream::_stream_cast","phpseclib\\net\\sftp\\stream::_stream_lock","phpseclib\\net\\sftp\\stream::_rename","phpseclib\\net\\sftp\\stream::_dir_opendir","phpseclib\\net\\sftp\\stream::_dir_readdir","phpseclib\\net\\sftp\\stream::_dir_rewinddir","phpseclib\\net\\sftp\\stream::_dir_closedir","phpseclib\\net\\sftp\\stream::_mkdir","phpseclib\\net\\sftp\\stream::_rmdir","phpseclib\\net\\sftp\\stream::_stream_flush","phpseclib\\net\\sftp\\stream::_stream_stat","phpseclib\\net\\sftp\\stream::_unlink","phpseclib\\net\\sftp\\stream::_url_stat","phpseclib\\net\\sftp\\stream::_stream_truncate","phpseclib\\net\\sftp\\stream::_stream_set_option","phpseclib\\net\\sftp\\stream::_stream_close","phpseclib\\net\\sftp\\stream::__call","phpseclib\\net\\ssh1::__construct","phpseclib\\net\\ssh1::_connect","phpseclib\\net\\ssh1::login","phpseclib\\net\\ssh1::settimeout","phpseclib\\net\\ssh1::exec","phpseclib\\net\\ssh1::_initshell","phpseclib\\net\\ssh1::write","phpseclib\\net\\ssh1::read","phpseclib\\net\\ssh1::interactivewrite","phpseclib\\net\\ssh1::interactiveread","phpseclib\\net\\ssh1::disconnect","phpseclib\\net\\ssh1::__destruct","phpseclib\\net\\ssh1::_disconnect","phpseclib\\net\\ssh1::_get_binary_packet","phpseclib\\net\\ssh1::_send_binary_packet","phpseclib\\net\\ssh1::_crc","phpseclib\\net\\ssh1::_string_shift","phpseclib\\net\\ssh1::_rsa_crypt","phpseclib\\net\\ssh1::_define_array","phpseclib\\net\\ssh1::getlog","phpseclib\\net\\ssh1::_format_log","phpseclib\\net\\ssh1::_format_log_helper","phpseclib\\net\\ssh1::getserverkeypublicexponent","phpseclib\\net\\ssh1::getserverkeypublicmodulus","phpseclib\\net\\ssh1::gethostkeypublicexponent","phpseclib\\net\\ssh1::gethostkeypublicmodulus","phpseclib\\net\\ssh1::getsupportedciphers","phpseclib\\net\\ssh1::getsupportedauthentications","phpseclib\\net\\ssh1::getserveridentification","phpseclib\\net\\ssh1::_append_log","phpseclib\\net\\ssh2::__construct","phpseclib\\net\\ssh2::setcryptoengine","phpseclib\\net\\ssh2::sendidentificationstringfirst","phpseclib\\net\\ssh2::sendidentificationstringlast","phpseclib\\net\\ssh2::sendkexinitfirst","phpseclib\\net\\ssh2::sendkexinitlast","phpseclib\\net\\ssh2::_connect","phpseclib\\net\\ssh2::_generate_identifier","phpseclib\\net\\ssh2::_key_exchange","phpseclib\\net\\ssh2::_encryption_algorithm_to_key_size","phpseclib\\net\\ssh2::_encryption_algorithm_to_crypt_instance","phpseclib\\net\\ssh2::_bad_algorithm_candidate","phpseclib\\net\\ssh2::login","phpseclib\\net\\ssh2::_login","phpseclib\\net\\ssh2::_login_helper","phpseclib\\net\\ssh2::_keyboard_interactive_login","phpseclib\\net\\ssh2::_keyboard_interactive_process","phpseclib\\net\\ssh2::_ssh_agent_login","phpseclib\\net\\ssh2::_privatekey_login","phpseclib\\net\\ssh2::settimeout","phpseclib\\net\\ssh2::getstderror","phpseclib\\net\\ssh2::exec","phpseclib\\net\\ssh2::_initshell","phpseclib\\net\\ssh2::_get_interactive_channel","phpseclib\\net\\ssh2::_get_open_channel","phpseclib\\net\\ssh2::read","phpseclib\\net\\ssh2::write","phpseclib\\net\\ssh2::startsubsystem","phpseclib\\net\\ssh2::stopsubsystem","phpseclib\\net\\ssh2::reset","phpseclib\\net\\ssh2::istimeout","phpseclib\\net\\ssh2::disconnect","phpseclib\\net\\ssh2::__destruct","phpseclib\\net\\ssh2::isconnected","phpseclib\\net\\ssh2::isauthenticated","phpseclib\\net\\ssh2::ping","phpseclib\\net\\ssh2::_reconnect","phpseclib\\net\\ssh2::_reset_connection","phpseclib\\net\\ssh2::_get_binary_packet","phpseclib\\net\\ssh2::_filter","phpseclib\\net\\ssh2::enablequietmode","phpseclib\\net\\ssh2::disablequietmode","phpseclib\\net\\ssh2::isquietmodeenabled","phpseclib\\net\\ssh2::enablepty","phpseclib\\net\\ssh2::disablepty","phpseclib\\net\\ssh2::isptyenabled","phpseclib\\net\\ssh2::_get_channel_packet","phpseclib\\net\\ssh2::_send_binary_packet","phpseclib\\net\\ssh2::_append_log","phpseclib\\net\\ssh2::_send_channel_packet","phpseclib\\net\\ssh2::_close_channel","phpseclib\\net\\ssh2::_disconnect","phpseclib\\net\\ssh2::_string_shift","phpseclib\\net\\ssh2::_define_array","phpseclib\\net\\ssh2::getlog","phpseclib\\net\\ssh2::_format_log","phpseclib\\net\\ssh2::_format_log_helper","phpseclib\\net\\ssh2::_on_channel_open","phpseclib\\net\\ssh2::_array_intersect_first","phpseclib\\net\\ssh2::geterrors","phpseclib\\net\\ssh2::getlasterror","phpseclib\\net\\ssh2::getserveridentification","phpseclib\\net\\ssh2::getkexalgorithms","phpseclib\\net\\ssh2::getserverhostkeyalgorithms","phpseclib\\net\\ssh2::getencryptionalgorithmsclient2server","phpseclib\\net\\ssh2::getencryptionalgorithmsserver2client","phpseclib\\net\\ssh2::getmacalgorithmsclient2server","phpseclib\\net\\ssh2::getmacalgorithmsserver2client","phpseclib\\net\\ssh2::getcompressionalgorithmsclient2server","phpseclib\\net\\ssh2::getcompressionalgorithmsserver2client","phpseclib\\net\\ssh2::getlanguagesserver2client","phpseclib\\net\\ssh2::getlanguagesclient2server","phpseclib\\net\\ssh2::getbannermessage","phpseclib\\net\\ssh2::getserverpublichostkey","phpseclib\\net\\ssh2::getexitstatus","phpseclib\\net\\ssh2::getwindowcolumns","phpseclib\\net\\ssh2::getwindowrows","phpseclib\\net\\ssh2::setwindowcolumns","phpseclib\\net\\ssh2::setwindowrows","phpseclib\\net\\ssh2::setwindowsize","phpseclib\\system\\ssh\\agent::__construct","phpseclib\\system\\ssh\\agent::requestidentities","phpseclib\\system\\ssh\\agent::startsshforwarding","phpseclib\\system\\ssh\\agent::_request_forwarding","phpseclib\\system\\ssh\\agent::_on_channel_open","phpseclib\\system\\ssh\\agent::_forward_data","phpseclib\\system\\ssh\\agent\\identity::__construct","phpseclib\\system\\ssh\\agent\\identity::setpublickey","phpseclib\\system\\ssh\\agent\\identity::setpublickeyblob","phpseclib\\system\\ssh\\agent\\identity::getpublickey","phpseclib\\system\\ssh\\agent\\identity::setsignaturemode","phpseclib\\system\\ssh\\agent\\identity::sethash","phpseclib\\system\\ssh\\agent\\identity::sign","phpseclib\\system\\ssh\\agent\\identity::_string_shift"],
        'info': [["","",".html","","",3],["phpseclib","","phpseclib.html","","",3],["phpseclib\\Crypt","","phpseclib\/Crypt.html","","",3],["phpseclib\\File","","phpseclib\/File.html","","",3],["phpseclib\\File\\ASN1","","phpseclib\/File\/ASN1.html","","",3],["phpseclib\\Math","","phpseclib\/Math.html","","",3],["phpseclib\\Net","","phpseclib\/Net.html","","",3],["phpseclib\\Net\\SFTP","","phpseclib\/Net\/SFTP.html","","",3],["phpseclib\\System","","phpseclib\/System.html","","",3],["phpseclib\\System\\SSH","","phpseclib\/System\/SSH.html","","",3],["phpseclib\\System\\SSH\\Agent","","phpseclib\/System\/SSH\/Agent.html","","",3],["Crypt_AES","","Crypt_AES.html"," < Crypt_Rijndael","Pure-PHP implementation of AES.",1],["Crypt_Base","","Crypt_Base.html","","Base Class for all Crypt_* cipher classes",1],["Crypt_Blowfish","","Crypt_Blowfish.html"," < Crypt_Base","Pure-PHP implementation of Blowfish.",1],["Crypt_DES","","Crypt_DES.html"," < Crypt_Base","Pure-PHP implementation of DES.",1],["Crypt_Hash","","Crypt_Hash.html","","Pure-PHP implementations of keyed-hash message authentication",1],["Crypt_RC2","","Crypt_RC2.html"," < Crypt_Base","Pure-PHP implementation of RC2.",1],["Crypt_RC4","","Crypt_RC4.html"," < Crypt_Base","Pure-PHP implementation of RC4.",1],["Crypt_RSA","","Crypt_RSA.html","","Pure-PHP PKCS#1 compliant implementation of RSA.",1],["Crypt_Rijndael","","Crypt_Rijndael.html"," < Crypt_Base","Pure-PHP implementation of Rijndael.",1],["Crypt_TripleDES","","Crypt_TripleDES.html"," < Crypt_DES","Pure-PHP implementation of Triple DES.",1],["Crypt_Twofish","","Crypt_Twofish.html"," < Crypt_Base","Pure-PHP implementation of Twofish.",1],["File_ANSI","","File_ANSI.html","","Pure-PHP ANSI Decoder",1],["File_ASN1","","File_ASN1.html","","Pure-PHP ASN.1 Parser",1],["File_ASN1_Element","","File_ASN1_Element.html","","ASN.1 Element",1],["File_X509","","File_X509.html","","Pure-PHP X.509 Parser",1],["Functional_Net_SCPSSH2UserStoryTest","","Functional_Net_SCPSSH2UserStoryTest.html"," < PhpseclibFunctionalTestCase","",1],["Functional_Net_SFTPLargeFileTest","","Functional_Net_SFTPLargeFileTest.html"," < Functional_Net_SFTPTestCase","",1],["Functional_Net_SFTPStreamTest","","Functional_Net_SFTPStreamTest.html"," < Functional_Net_SFTPTestCase","",1],["Functional_Net_SFTPTestCase","","Functional_Net_SFTPTestCase.html"," < PhpseclibFunctionalTestCase","This class provides each test method with a new and",1],["Functional_Net_SFTPUserStoryTest","","Functional_Net_SFTPUserStoryTest.html"," < PhpseclibFunctionalTestCase","",1],["Functional_Net_SSH2AgentTest","","Functional_Net_SSH2AgentTest.html"," < PhpseclibFunctionalTestCase","",1],["Functional_Net_SSH2Test","","Functional_Net_SSH2Test.html"," < PhpseclibFunctionalTestCase","",1],["Math_BigInteger","","Math_BigInteger.html","","Pure-PHP arbitrary precision integer arithmetic library.",1],["MyArrayStore","","MyArrayStore.html"," < ArrayStore","",1],["Net_SCP","","Net_SCP.html","","Pure-PHP implementations of SCP.",1],["Net_SFTP","","Net_SFTP.html"," < Net_SSH2","Pure-PHP implementations of SFTP.",1],["Net_SFTP_Stream","","Net_SFTP_Stream.html","","SFTP Stream Wrapper",1],["Net_SSH1","","Net_SSH1.html","","Pure-PHP implementation of SSHv1.",1],["Net_SSH2","","Net_SSH2.html","","Pure-PHP implementation of SSHv2.",1],["PhpseclibFunctionalTestCase","","PhpseclibFunctionalTestCase.html"," < PhpseclibTestCase","",1],["PhpseclibTestCase","","PhpseclibTestCase.html"," < TestCase","",1],["System_SSH_Agent","","System_SSH_Agent.html","","Pure-PHP ssh-agent client identity factory",1],["System_SSH_Agent_Identity","","System_SSH_Agent_Identity.html","","Pure-PHP ssh-agent client identity object",1],["Unit_Crypt_AES_InternalTest","","Unit_Crypt_AES_InternalTest.html"," < Unit_Crypt_AES_TestCase","",1],["Unit_Crypt_AES_McryptTest","","Unit_Crypt_AES_McryptTest.html"," < Unit_Crypt_AES_TestCase","",1],["Unit_Crypt_AES_OpenSSLTest","","Unit_Crypt_AES_OpenSSLTest.html"," < Unit_Crypt_AES_TestCase","",1],["Unit_Crypt_AES_TestCase","","Unit_Crypt_AES_TestCase.html"," < PhpseclibTestCase","",1],["Unit_Crypt_BlowfishTest","","Unit_Crypt_BlowfishTest.html"," < PhpseclibTestCase","",1],["Unit_Crypt_DESTest","","Unit_Crypt_DESTest.html"," < PhpseclibTestCase","",1],["Unit_Crypt_Hash_MD5Test","","Unit_Crypt_Hash_MD5Test.html"," < Unit_Crypt_Hash_TestCase","",1],["Unit_Crypt_Hash_SHA256Test","","Unit_Crypt_Hash_SHA256Test.html"," < Unit_Crypt_Hash_TestCase","",1],["Unit_Crypt_Hash_SHA256_96Test","","Unit_Crypt_Hash_SHA256_96Test.html"," < Unit_Crypt_Hash_SHA256Test","",1],["Unit_Crypt_Hash_SHA512Test","","Unit_Crypt_Hash_SHA512Test.html"," < Unit_Crypt_Hash_TestCase","",1],["Unit_Crypt_Hash_SHA512_96Test","","Unit_Crypt_Hash_SHA512_96Test.html"," < Unit_Crypt_Hash_SHA512Test","",1],["Unit_Crypt_Hash_TestCase","","Unit_Crypt_Hash_TestCase.html"," < PhpseclibTestCase","",1],["Unit_Crypt_RC2Test","","Unit_Crypt_RC2Test.html"," < PhpseclibTestCase","",1],["Unit_Crypt_RC4Test","","Unit_Crypt_RC4Test.html"," < PhpseclibTestCase","",1],["Unit_Crypt_RSA_LoadKeyTest","","Unit_Crypt_RSA_LoadKeyTest.html"," < PhpseclibTestCase","",1],["Unit_Crypt_RSA_ModeTest","","Unit_Crypt_RSA_ModeTest.html"," < PhpseclibTestCase","",1],["Unit_Crypt_RandomTest","","Unit_Crypt_RandomTest.html"," < PhpseclibTestCase","",1],["Unit_Crypt_TripleDESTest","","Unit_Crypt_TripleDESTest.html"," < PhpseclibTestCase","",1],["Unit_Crypt_TwofishTest","","Unit_Crypt_TwofishTest.html"," < PhpseclibTestCase","",1],["Unit_File_ANSITest","","Unit_File_ANSITest.html"," < PhpseclibTestCase","",1],["Unit_File_ASN1Test","","Unit_File_ASN1Test.html"," < PhpseclibTestCase","",1],["Unit_File_X509_CSRTest","","Unit_File_X509_CSRTest.html"," < PhpseclibTestCase","",1],["Unit_File_X509_SPKACTest","","Unit_File_X509_SPKACTest.html"," < PhpseclibTestCase","",1],["Unit_File_X509_X509Test","","Unit_File_X509_X509Test.html"," < PhpseclibTestCase","",1],["Unit_Math_BigInteger_BCMathTest","","Unit_Math_BigInteger_BCMathTest.html"," < Unit_Math_BigInteger_TestCase","",1],["Unit_Math_BigInteger_GMPTest","","Unit_Math_BigInteger_GMPTest.html"," < Unit_Math_BigInteger_TestCase","",1],["Unit_Math_BigInteger_InternalOpenSSLTest","","Unit_Math_BigInteger_InternalOpenSSLTest.html"," < Unit_Math_BigInteger_TestCase","",1],["Unit_Math_BigInteger_InternalTest","","Unit_Math_BigInteger_InternalTest.html"," < Unit_Math_BigInteger_TestCase","",1],["Unit_Math_BigInteger_TestCase","","Unit_Math_BigInteger_TestCase.html"," < PhpseclibTestCase","",1],["Unit_Net_SFTPStreamTest","","Unit_Net_SFTPStreamTest.html"," < PhpseclibTestCase","",1],["Unit_Net_SSH1Test","","Unit_Net_SSH1Test.html"," < PhpseclibTestCase","",1],["Unit_Net_SSH2Test","","Unit_Net_SSH2Test.html"," < PhpseclibTestCase","",1],["AES","phpseclib\\Crypt","phpseclib\/Crypt\/AES.html"," < Rijndael","Pure-PHP implementation of AES.",1],["Base","phpseclib\\Crypt","phpseclib\/Crypt\/Base.html","","Base Class for all \\phpseclib\\Crypt\\* cipher classes",1],["Blowfish","phpseclib\\Crypt","phpseclib\/Crypt\/Blowfish.html"," < Base","Pure-PHP implementation of Blowfish.",1],["DES","phpseclib\\Crypt","phpseclib\/Crypt\/DES.html"," < Base","Pure-PHP implementation of DES.",1],["Hash","phpseclib\\Crypt","phpseclib\/Crypt\/Hash.html","","Pure-PHP implementations of keyed-hash message authentication",1],["RC2","phpseclib\\Crypt","phpseclib\/Crypt\/RC2.html"," < Base","Pure-PHP implementation of RC2.",1],["RC4","phpseclib\\Crypt","phpseclib\/Crypt\/RC4.html"," < Base","Pure-PHP implementation of RC4.",1],["RSA","phpseclib\\Crypt","phpseclib\/Crypt\/RSA.html","","Pure-PHP PKCS#1 compliant implementation of RSA.",1],["Random","phpseclib\\Crypt","phpseclib\/Crypt\/Random.html","","Pure-PHP Random Number Generator",1],["Rijndael","phpseclib\\Crypt","phpseclib\/Crypt\/Rijndael.html"," < Base","Pure-PHP implementation of Rijndael.",1],["TripleDES","phpseclib\\Crypt","phpseclib\/Crypt\/TripleDES.html"," < DES","Pure-PHP implementation of Triple DES.",1],["Twofish","phpseclib\\Crypt","phpseclib\/Crypt\/Twofish.html"," < Base","Pure-PHP implementation of Twofish.",1],["ANSI","phpseclib\\File","phpseclib\/File\/ANSI.html","","Pure-PHP ANSI Decoder",1],["ASN1","phpseclib\\File","phpseclib\/File\/ASN1.html","","Pure-PHP ASN.1 Parser",1],["Element","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1\/Element.html","","ASN.1 Element",1],["X509","phpseclib\\File","phpseclib\/File\/X509.html","","Pure-PHP X.509 Parser",1],["BigInteger","phpseclib\\Math","phpseclib\/Math\/BigInteger.html","","Pure-PHP arbitrary precision integer arithmetic library.",1],["SCP","phpseclib\\Net","phpseclib\/Net\/SCP.html","","Pure-PHP implementations of SCP.",1],["SFTP","phpseclib\\Net","phpseclib\/Net\/SFTP.html"," < SSH2","Pure-PHP implementations of SFTP.",1],["Stream","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP\/Stream.html","","SFTP Stream Wrapper",1],["SSH1","phpseclib\\Net","phpseclib\/Net\/SSH1.html","","Pure-PHP implementation of SSHv1.",1],["SSH2","phpseclib\\Net","phpseclib\/Net\/SSH2.html","","Pure-PHP implementation of SSHv2.",1],["Agent","phpseclib\\System\\SSH","phpseclib\/System\/SSH\/Agent.html","","Pure-PHP ssh-agent client identity factory",1],["Identity","phpseclib\\System\\SSH\\Agent","phpseclib\/System\/SSH\/Agent\/Identity.html","","Pure-PHP ssh-agent client identity object",1],["Crypt_AES::setBlockLength","Crypt_AES","Crypt_AES.html#method_setBlockLength","(int $length)","Dummy function",2],["Crypt_AES::setKeyLength","Crypt_AES","Crypt_AES.html#method_setKeyLength","(int $length)","Sets the key length",2],["Crypt_AES::setKey","Crypt_AES","Crypt_AES.html#method_setKey","(string $key)","Sets the key.",2],["Crypt_Base::__construct","Crypt_Base","Crypt_Base.html#method___construct","(int $mode = CRYPT_MODE_CBC)","Default Constructor.",2],["Crypt_Base::Crypt_Base","Crypt_Base","Crypt_Base.html#method_Crypt_Base","(int $mode = CRYPT_MODE_CBC)","PHP4 compatible Default Constructor.",2],["Crypt_Base::setIV","Crypt_Base","Crypt_Base.html#method_setIV","(string $iv)","Sets the initialization vector.",2],["Crypt_Base::setKeyLength","Crypt_Base","Crypt_Base.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Crypt_Base::getKeyLength","Crypt_Base","Crypt_Base.html#method_getKeyLength","()","Returns the current key length in bits",2],["Crypt_Base::getBlockLength","Crypt_Base","Crypt_Base.html#method_getBlockLength","()","Returns the current block length in bits",2],["Crypt_Base::setKey","Crypt_Base","Crypt_Base.html#method_setKey","(string $key)","Sets the key.",2],["Crypt_Base::setPassword","Crypt_Base","Crypt_Base.html#method_setPassword","(string $password, string $method = &#039;pbkdf2&#039;)","Sets the password.",2],["Crypt_Base::encrypt","Crypt_Base","Crypt_Base.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["Crypt_Base::decrypt","Crypt_Base","Crypt_Base.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["Crypt_Base::_openssl_ctr_process","Crypt_Base","Crypt_Base.html#method__openssl_ctr_process","(string $plaintext, string $encryptIV, array $buffer)","OpenSSL CTR Processor",2],["Crypt_Base::_openssl_ofb_process","Crypt_Base","Crypt_Base.html#method__openssl_ofb_process","(string $plaintext, string $encryptIV, array $buffer)","OpenSSL OFB Processor",2],["Crypt_Base::_openssl_translate_mode","Crypt_Base","Crypt_Base.html#method__openssl_translate_mode","()","phpseclib  OpenSSL Mode Mapper",2],["Crypt_Base::enablePadding","Crypt_Base","Crypt_Base.html#method_enablePadding","()","Pad \"packets\".",2],["Crypt_Base::disablePadding","Crypt_Base","Crypt_Base.html#method_disablePadding","()","Do not pad packets.",2],["Crypt_Base::enableContinuousBuffer","Crypt_Base","Crypt_Base.html#method_enableContinuousBuffer","()","Treat consecutive \"packets\" as if they are a continuous",2],["Crypt_Base::disableContinuousBuffer","Crypt_Base","Crypt_Base.html#method_disableContinuousBuffer","()","Treat consecutive packets as if they are a discontinuous",2],["Crypt_Base::isValidEngine","Crypt_Base","Crypt_Base.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Crypt_Base::setPreferredEngine","Crypt_Base","Crypt_Base.html#method_setPreferredEngine","(int $engine)","Sets the preferred crypt engine",2],["Crypt_Base::getEngine","Crypt_Base","Crypt_Base.html#method_getEngine","()","Returns the engine currently being utilized",2],["Crypt_Base::_setEngine","Crypt_Base","Crypt_Base.html#method__setEngine","()","Sets the engine as appropriate",2],["Crypt_Base::_encryptBlock","Crypt_Base","Crypt_Base.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Crypt_Base::_decryptBlock","Crypt_Base","Crypt_Base.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Crypt_Base::_setupKey","Crypt_Base","Crypt_Base.html#method__setupKey","()","Setup the key (expansion)",2],["Crypt_Base::_setup","Crypt_Base","Crypt_Base.html#method__setup","()","Setup the CRYPT_ENGINE_INTERNAL $engine",2],["Crypt_Base::_setupMcrypt","Crypt_Base","Crypt_Base.html#method__setupMcrypt","()","Setup the CRYPT_ENGINE_MCRYPT $engine",2],["Crypt_Base::_pad","Crypt_Base","Crypt_Base.html#method__pad","(string $text)","Pads a string",2],["Crypt_Base::_unpad","Crypt_Base","Crypt_Base.html#method__unpad","(string $text)","Unpads a string.",2],["Crypt_Base::_clearBuffers","Crypt_Base","Crypt_Base.html#method__clearBuffers","()","Clears internal buffers",2],["Crypt_Base::_string_shift","Crypt_Base","Crypt_Base.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["Crypt_Base::_string_pop","Crypt_Base","Crypt_Base.html#method__string_pop","(string $string, int $index = 1)","String Pop",2],["Crypt_Base::_increment_str","Crypt_Base","Crypt_Base.html#method__increment_str","(string $var)","Increment the current string",2],["Crypt_Base::_setupInlineCrypt","Crypt_Base","Crypt_Base.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["Crypt_Base::_createInlineCryptFunction","Crypt_Base","Crypt_Base.html#method__createInlineCryptFunction","(array $cipher_code)","Creates the performance-optimized function for en\/decrypt()",2],["Crypt_Base::_getLambdaFunctions","Crypt_Base","Crypt_Base.html#method__getLambdaFunctions","()","Holds the lambda_functions table (classwide)",2],["Crypt_Base::_hashInlineCryptFunction","Crypt_Base","Crypt_Base.html#method__hashInlineCryptFunction","(<abbr title=\"$bytes\">$bytes<\/abbr> $bytes)","Generates a digest from $bytes",2],["Crypt_Base::safe_intval","Crypt_Base","Crypt_Base.html#method_safe_intval","(string $x)","Convert float to int",2],["Crypt_Base::safe_intval_inline","Crypt_Base","Crypt_Base.html#method_safe_intval_inline","()","eval()'able string for in-line float to int",2],["Crypt_Blowfish::setKeyLength","Crypt_Blowfish","Crypt_Blowfish.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Crypt_Blowfish::isValidEngine","Crypt_Blowfish","Crypt_Blowfish.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Crypt_Blowfish::_setupKey","Crypt_Blowfish","Crypt_Blowfish.html#method__setupKey","()","Setup the key (expansion)",2],["Crypt_Blowfish::_encryptBlock","Crypt_Blowfish","Crypt_Blowfish.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Crypt_Blowfish::_decryptBlock","Crypt_Blowfish","Crypt_Blowfish.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Crypt_Blowfish::_setupInlineCrypt","Crypt_Blowfish","Crypt_Blowfish.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["Crypt_DES::isValidEngine","Crypt_DES","Crypt_DES.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Crypt_DES::setKey","Crypt_DES","Crypt_DES.html#method_setKey","(string $key)","Sets the key.",2],["Crypt_DES::_encryptBlock","Crypt_DES","Crypt_DES.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Crypt_DES::_decryptBlock","Crypt_DES","Crypt_DES.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Crypt_DES::_processBlock","Crypt_DES","Crypt_DES.html#method__processBlock","(string $block, int $mode)","Encrypts or decrypts a 64-bit block",2],["Crypt_DES::_setupKey","Crypt_DES","Crypt_DES.html#method__setupKey","()","Creates the key schedule",2],["Crypt_DES::_setupInlineCrypt","Crypt_DES","Crypt_DES.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["Crypt_Hash::__construct","Crypt_Hash","Crypt_Hash.html#method___construct","(string $hash = &#039;sha1&#039;)","Default Constructor.",2],["Crypt_Hash::Crypt_Hash","Crypt_Hash","Crypt_Hash.html#method_Crypt_Hash","($hash = &#039;sha1&#039;)","PHP4 compatible Default Constructor.",2],["Crypt_Hash::setKey","Crypt_Hash","Crypt_Hash.html#method_setKey","(string $key = false)","Sets the key for HMACs",2],["Crypt_Hash::_computeKey","Crypt_Hash","Crypt_Hash.html#method__computeKey","()","Pre-compute the key used by the HMAC",2],["Crypt_Hash::getHash","Crypt_Hash","Crypt_Hash.html#method_getHash","()","Gets the hash function.",2],["Crypt_Hash::setHash","Crypt_Hash","Crypt_Hash.html#method_setHash","(string $hash)","Sets the hash function.",2],["Crypt_Hash::hash","Crypt_Hash","Crypt_Hash.html#method_hash","(string $text)","Compute the HMAC.",2],["Crypt_Hash::getLength","Crypt_Hash","Crypt_Hash.html#method_getLength","()","Returns the hash length (in bytes)",2],["Crypt_Hash::_md5","Crypt_Hash","Crypt_Hash.html#method__md5","(string $m)","Wrapper for MD5",2],["Crypt_Hash::_sha1","Crypt_Hash","Crypt_Hash.html#method__sha1","(string $m)","Wrapper for SHA1",2],["Crypt_Hash::_md2","Crypt_Hash","Crypt_Hash.html#method__md2","(string $m)","Pure-PHP implementation of MD2",2],["Crypt_Hash::_sha256","Crypt_Hash","Crypt_Hash.html#method__sha256","(string $m)","Pure-PHP implementation of SHA256",2],["Crypt_Hash::_sha512","Crypt_Hash","Crypt_Hash.html#method__sha512","(string $m)","Pure-PHP implementation of SHA384 and SHA512",2],["Crypt_Hash::_rightRotate","Crypt_Hash","Crypt_Hash.html#method__rightRotate","(int $int, int $amt)","Right Rotate",2],["Crypt_Hash::_rightShift","Crypt_Hash","Crypt_Hash.html#method__rightShift","(int $int, int $amt)","Right Shift",2],["Crypt_Hash::_not","Crypt_Hash","Crypt_Hash.html#method__not","(int $int)","Not",2],["Crypt_Hash::_add","Crypt_Hash","Crypt_Hash.html#method__add","()","Add",2],["Crypt_Hash::_string_shift","Crypt_Hash","Crypt_Hash.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["Crypt_RC2::isValidEngine","Crypt_RC2","Crypt_RC2.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Crypt_RC2::setKeyLength","Crypt_RC2","Crypt_RC2.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Crypt_RC2::getKeyLength","Crypt_RC2","Crypt_RC2.html#method_getKeyLength","()","Returns the current key length",2],["Crypt_RC2::setKey","Crypt_RC2","Crypt_RC2.html#method_setKey","(string $key, int $t1)","Sets the key.",2],["Crypt_RC2::encrypt","Crypt_RC2","Crypt_RC2.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["Crypt_RC2::decrypt","Crypt_RC2","Crypt_RC2.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["Crypt_RC2::_encryptBlock","Crypt_RC2","Crypt_RC2.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Crypt_RC2::_decryptBlock","Crypt_RC2","Crypt_RC2.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Crypt_RC2::_setupMcrypt","Crypt_RC2","Crypt_RC2.html#method__setupMcrypt","()","Setup the CRYPT_ENGINE_MCRYPT $engine",2],["Crypt_RC2::_setupKey","Crypt_RC2","Crypt_RC2.html#method__setupKey","()","Creates the key schedule",2],["Crypt_RC2::_setupInlineCrypt","Crypt_RC2","Crypt_RC2.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["Crypt_RC4::__construct","Crypt_RC4","Crypt_RC4.html#method___construct","()","Default Constructor.",2],["Crypt_RC4::Crypt_RC4","Crypt_RC4","Crypt_RC4.html#method_Crypt_RC4","()","PHP4 compatible Default Constructor.",2],["Crypt_RC4::isValidEngine","Crypt_RC4","Crypt_RC4.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Crypt_RC4::setIV","Crypt_RC4","Crypt_RC4.html#method_setIV","(string $iv)","Dummy function.",2],["Crypt_RC4::setKeyLength","Crypt_RC4","Crypt_RC4.html#method_setKeyLength","(int $length)","Sets the key length",2],["Crypt_RC4::encrypt","Crypt_RC4","Crypt_RC4.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["Crypt_RC4::decrypt","Crypt_RC4","Crypt_RC4.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["Crypt_RC4::_setupKey","Crypt_RC4","Crypt_RC4.html#method__setupKey","()","Setup the key (expansion)",2],["Crypt_RC4::_crypt","Crypt_RC4","Crypt_RC4.html#method__crypt","(string $text, int $mode)","Encrypts or decrypts a message.",2],["Crypt_RSA::__construct","Crypt_RSA","Crypt_RSA.html#method___construct","()","The constructor",2],["Crypt_RSA::Crypt_RSA","Crypt_RSA","Crypt_RSA.html#method_Crypt_RSA","()","PHP4 compatible Default Constructor.",2],["Crypt_RSA::createKey","Crypt_RSA","Crypt_RSA.html#method_createKey","($bits = 1024, $timeout = false, $partial = array())","Create public \/ private key pair",2],["Crypt_RSA::_convertPrivateKey","Crypt_RSA","Crypt_RSA.html#method__convertPrivateKey","($n, $e, $d, $primes, $exponents, $coefficients)","Convert a private key to the appropriate format.",2],["Crypt_RSA::_convertPublicKey","Crypt_RSA","Crypt_RSA.html#method__convertPublicKey","($n, $e)","Convert a public key to the appropriate format",2],["Crypt_RSA::_parseKey","Crypt_RSA","Crypt_RSA.html#method__parseKey","(string $key, int $type)","Break a public or private key down into its constituant",2],["Crypt_RSA::getSize","Crypt_RSA","Crypt_RSA.html#method_getSize","()","Returns the key size",2],["Crypt_RSA::_start_element_handler","Crypt_RSA","Crypt_RSA.html#method__start_element_handler","(resource $parser, string $name, array $attribs)","Start Element Handler",2],["Crypt_RSA::_stop_element_handler","Crypt_RSA","Crypt_RSA.html#method__stop_element_handler","(resource $parser, string $name)","Stop Element Handler",2],["Crypt_RSA::_data_handler","Crypt_RSA","Crypt_RSA.html#method__data_handler","(resource $parser, string $data)","Data Handler",2],["Crypt_RSA::loadKey","Crypt_RSA","Crypt_RSA.html#method_loadKey","(string $key, int $type = false)","Loads a public or private key",2],["Crypt_RSA::setPassword","Crypt_RSA","Crypt_RSA.html#method_setPassword","(string $password = false)","Sets the password",2],["Crypt_RSA::setPublicKey","Crypt_RSA","Crypt_RSA.html#method_setPublicKey","(string $key = false, int $type = false)","Defines the public key",2],["Crypt_RSA::setPrivateKey","Crypt_RSA","Crypt_RSA.html#method_setPrivateKey","(string $key = false, int $type = false)","Defines the private key",2],["Crypt_RSA::getPublicKey","Crypt_RSA","Crypt_RSA.html#method_getPublicKey","($type = CRYPT_RSA_PUBLIC_FORMAT_PKCS8)","Returns the public key",2],["Crypt_RSA::getPublicKeyFingerprint","Crypt_RSA","Crypt_RSA.html#method_getPublicKeyFingerprint","(string $algorithm = &#039;md5&#039;)","Returns the public key's fingerprint",2],["Crypt_RSA::getPrivateKey","Crypt_RSA","Crypt_RSA.html#method_getPrivateKey","($type = CRYPT_RSA_PUBLIC_FORMAT_PKCS1)","Returns the private key",2],["Crypt_RSA::_getPrivatePublicKey","Crypt_RSA","Crypt_RSA.html#method__getPrivatePublicKey","($mode = CRYPT_RSA_PUBLIC_FORMAT_PKCS8)","Returns a minimalistic private key",2],["Crypt_RSA::__toString","Crypt_RSA","Crypt_RSA.html#method___toString","()","__toString() magic method",2],["Crypt_RSA::__clone","Crypt_RSA","Crypt_RSA.html#method___clone","()","__clone() magic method",2],["Crypt_RSA::_generateMinMax","Crypt_RSA","Crypt_RSA.html#method__generateMinMax","(int $bits)","Generates the smallest and largest numbers requiring",2],["Crypt_RSA::_decodeLength","Crypt_RSA","Crypt_RSA.html#method__decodeLength","(string $string)","DER-decode the length",2],["Crypt_RSA::_encodeLength","Crypt_RSA","Crypt_RSA.html#method__encodeLength","(int $length)","DER-encode the length",2],["Crypt_RSA::_string_shift","Crypt_RSA","Crypt_RSA.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["Crypt_RSA::setPrivateKeyFormat","Crypt_RSA","Crypt_RSA.html#method_setPrivateKeyFormat","(int $format)","Determines the private key format",2],["Crypt_RSA::setPublicKeyFormat","Crypt_RSA","Crypt_RSA.html#method_setPublicKeyFormat","(int $format)","Determines the public key format",2],["Crypt_RSA::setHash","Crypt_RSA","Crypt_RSA.html#method_setHash","(string $hash)","Determines which hashing function should be used",2],["Crypt_RSA::setMGFHash","Crypt_RSA","Crypt_RSA.html#method_setMGFHash","(string $hash)","Determines which hashing function should be used for",2],["Crypt_RSA::setSaltLength","Crypt_RSA","Crypt_RSA.html#method_setSaltLength","($sLen)","Determines the salt length",2],["Crypt_RSA::_i2osp","Crypt_RSA","Crypt_RSA.html#method__i2osp","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x, int $xLen)","Integer-to-Octet-String primitive",2],["Crypt_RSA::_os2ip","Crypt_RSA","Crypt_RSA.html#method__os2ip","(string $x)","Octet-String-to-Integer primitive",2],["Crypt_RSA::_exponentiate","Crypt_RSA","Crypt_RSA.html#method__exponentiate","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x)","Exponentiate with or without Chinese Remainder Theorem",2],["Crypt_RSA::_blind","Crypt_RSA","Crypt_RSA.html#method__blind","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x, <a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $r, int $i)","Performs RSA Blinding",2],["Crypt_RSA::_equals","Crypt_RSA","Crypt_RSA.html#method__equals","(string $x, string $y)","Performs blinded RSA equality testing",2],["Crypt_RSA::_rsaep","Crypt_RSA","Crypt_RSA.html#method__rsaep","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $m)","RSAEP",2],["Crypt_RSA::_rsadp","Crypt_RSA","Crypt_RSA.html#method__rsadp","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $c)","RSADP",2],["Crypt_RSA::_rsasp1","Crypt_RSA","Crypt_RSA.html#method__rsasp1","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $m)","RSASP1",2],["Crypt_RSA::_rsavp1","Crypt_RSA","Crypt_RSA.html#method__rsavp1","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $s)","RSAVP1",2],["Crypt_RSA::_mgf1","Crypt_RSA","Crypt_RSA.html#method__mgf1","($mgfSeed, $maskLen)","MGF1",2],["Crypt_RSA::_rsaes_oaep_encrypt","Crypt_RSA","Crypt_RSA.html#method__rsaes_oaep_encrypt","(string $m, string $l = &#039;&#039;)","RSAES-OAEP-ENCRYPT",2],["Crypt_RSA::_rsaes_oaep_decrypt","Crypt_RSA","Crypt_RSA.html#method__rsaes_oaep_decrypt","(string $c, string $l = &#039;&#039;)","RSAES-OAEP-DECRYPT",2],["Crypt_RSA::_raw_encrypt","Crypt_RSA","Crypt_RSA.html#method__raw_encrypt","(string $m)","Raw Encryption \/ Decryption",2],["Crypt_RSA::_rsaes_pkcs1_v1_5_encrypt","Crypt_RSA","Crypt_RSA.html#method__rsaes_pkcs1_v1_5_encrypt","(string $m)","RSAES-PKCS1-V1_5-ENCRYPT",2],["Crypt_RSA::_rsaes_pkcs1_v1_5_decrypt","Crypt_RSA","Crypt_RSA.html#method__rsaes_pkcs1_v1_5_decrypt","(string $c)","RSAES-PKCS1-V1_5-DECRYPT",2],["Crypt_RSA::_emsa_pss_encode","Crypt_RSA","Crypt_RSA.html#method__emsa_pss_encode","(string $m, int $emBits)","EMSA-PSS-ENCODE",2],["Crypt_RSA::_emsa_pss_verify","Crypt_RSA","Crypt_RSA.html#method__emsa_pss_verify","(string $m, string $em, int $emBits)","EMSA-PSS-VERIFY",2],["Crypt_RSA::_rsassa_pss_sign","Crypt_RSA","Crypt_RSA.html#method__rsassa_pss_sign","(string $m)","RSASSA-PSS-SIGN",2],["Crypt_RSA::_rsassa_pss_verify","Crypt_RSA","Crypt_RSA.html#method__rsassa_pss_verify","(string $m, string $s)","RSASSA-PSS-VERIFY",2],["Crypt_RSA::_emsa_pkcs1_v1_5_encode","Crypt_RSA","Crypt_RSA.html#method__emsa_pkcs1_v1_5_encode","(string $m, int $emLen)","EMSA-PKCS1-V1_5-ENCODE",2],["Crypt_RSA::_rsassa_pkcs1_v1_5_sign","Crypt_RSA","Crypt_RSA.html#method__rsassa_pkcs1_v1_5_sign","(string $m)","RSASSA-PKCS1-V1_5-SIGN",2],["Crypt_RSA::_rsassa_pkcs1_v1_5_verify","Crypt_RSA","Crypt_RSA.html#method__rsassa_pkcs1_v1_5_verify","($m, $s)","RSASSA-PKCS1-V1_5-VERIFY",2],["Crypt_RSA::setEncryptionMode","Crypt_RSA","Crypt_RSA.html#method_setEncryptionMode","(int $mode)","Set Encryption Mode",2],["Crypt_RSA::setSignatureMode","Crypt_RSA","Crypt_RSA.html#method_setSignatureMode","(int $mode)","Set Signature Mode",2],["Crypt_RSA::setComment","Crypt_RSA","Crypt_RSA.html#method_setComment","(string $comment)","Set public key comment.",2],["Crypt_RSA::getComment","Crypt_RSA","Crypt_RSA.html#method_getComment","()","Get public key comment.",2],["Crypt_RSA::encrypt","Crypt_RSA","Crypt_RSA.html#method_encrypt","(string $plaintext)","Encryption",2],["Crypt_RSA::decrypt","Crypt_RSA","Crypt_RSA.html#method_decrypt","($ciphertext)","Decryption",2],["Crypt_RSA::sign","Crypt_RSA","Crypt_RSA.html#method_sign","(string $message)","Create a signature",2],["Crypt_RSA::verify","Crypt_RSA","Crypt_RSA.html#method_verify","(string $message, string $signature)","Verifies a signature",2],["Crypt_RSA::_extractBER","Crypt_RSA","Crypt_RSA.html#method__extractBER","(string $str)","Extract raw BER from Base64 encoding",2],["Crypt_Rijndael::setKey","Crypt_Rijndael","Crypt_Rijndael.html#method_setKey","(string $key)","Sets the key.",2],["Crypt_Rijndael::setKeyLength","Crypt_Rijndael","Crypt_Rijndael.html#method_setKeyLength","(int $length)","Sets the key length",2],["Crypt_Rijndael::setBlockLength","Crypt_Rijndael","Crypt_Rijndael.html#method_setBlockLength","(int $length)","Sets the block length",2],["Crypt_Rijndael::isValidEngine","Crypt_Rijndael","Crypt_Rijndael.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Crypt_Rijndael::_encryptBlock","Crypt_Rijndael","Crypt_Rijndael.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Crypt_Rijndael::_decryptBlock","Crypt_Rijndael","Crypt_Rijndael.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Crypt_Rijndael::_setupKey","Crypt_Rijndael","Crypt_Rijndael.html#method__setupKey","()","Setup the key (expansion)",2],["Crypt_Rijndael::_subWord","Crypt_Rijndael","Crypt_Rijndael.html#method__subWord","(int $word)","Performs S-Box substitutions",2],["Crypt_Rijndael::_getTables","Crypt_Rijndael","Crypt_Rijndael.html#method__getTables","()","Provides the mixColumns and sboxes tables",2],["Crypt_Rijndael::_getInvTables","Crypt_Rijndael","Crypt_Rijndael.html#method__getInvTables","()","Provides the inverse mixColumns and inverse sboxes",2],["Crypt_Rijndael::_setupInlineCrypt","Crypt_Rijndael","Crypt_Rijndael.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["Crypt_TripleDES::__construct","Crypt_TripleDES","Crypt_TripleDES.html#method___construct","(int $mode = CRYPT_MODE_CBC)","Default Constructor.",2],["Crypt_TripleDES::Crypt_TripleDES","Crypt_TripleDES","Crypt_TripleDES.html#method_Crypt_TripleDES","(int $mode = CRYPT_MODE_CBC)","PHP4 compatible Default Constructor.",2],["Crypt_TripleDES::isValidEngine","Crypt_TripleDES","Crypt_TripleDES.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Crypt_TripleDES::setIV","Crypt_TripleDES","Crypt_TripleDES.html#method_setIV","(string $iv)","Sets the initialization vector.",2],["Crypt_TripleDES::setKeyLength","Crypt_TripleDES","Crypt_TripleDES.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Crypt_TripleDES::setKey","Crypt_TripleDES","Crypt_TripleDES.html#method_setKey","(string $key)","Sets the key.",2],["Crypt_TripleDES::encrypt","Crypt_TripleDES","Crypt_TripleDES.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["Crypt_TripleDES::decrypt","Crypt_TripleDES","Crypt_TripleDES.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["Crypt_TripleDES::enableContinuousBuffer","Crypt_TripleDES","Crypt_TripleDES.html#method_enableContinuousBuffer","()","Treat consecutive \"packets\" as if they are a continuous",2],["Crypt_TripleDES::disableContinuousBuffer","Crypt_TripleDES","Crypt_TripleDES.html#method_disableContinuousBuffer","()","Treat consecutive packets as if they are a discontinuous",2],["Crypt_TripleDES::_setupKey","Crypt_TripleDES","Crypt_TripleDES.html#method__setupKey","()","Creates the key schedule",2],["Crypt_TripleDES::setPreferredEngine","Crypt_TripleDES","Crypt_TripleDES.html#method_setPreferredEngine","(int $engine)","Sets the internal crypt engine",2],["Crypt_Twofish::setKeyLength","Crypt_Twofish","Crypt_Twofish.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Crypt_Twofish::_setupKey","Crypt_Twofish","Crypt_Twofish.html#method__setupKey","()","Setup the key (expansion)",2],["Crypt_Twofish::_mdsrem","Crypt_Twofish","Crypt_Twofish.html#method__mdsrem","(string $A, string $B)","_mdsrem function using by the twofish cipher algorithm",2],["Crypt_Twofish::_encryptBlock","Crypt_Twofish","Crypt_Twofish.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Crypt_Twofish::_decryptBlock","Crypt_Twofish","Crypt_Twofish.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Crypt_Twofish::_setupInlineCrypt","Crypt_Twofish","Crypt_Twofish.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["File_ANSI::__construct","File_ANSI","File_ANSI.html#method___construct","()","Default Constructor.",2],["File_ANSI::File_ANSI","File_ANSI","File_ANSI.html#method_File_ANSI","()","PHP4 compatible Default Constructor.",2],["File_ANSI::setDimensions","File_ANSI","File_ANSI.html#method_setDimensions","(int $x, int $y)","Set terminal width and height",2],["File_ANSI::setHistory","File_ANSI","File_ANSI.html#method_setHistory","($history)","Set the number of lines that should be logged past",2],["File_ANSI::loadString","File_ANSI","File_ANSI.html#method_loadString","(string $source)","Load a string",2],["File_ANSI::appendString","File_ANSI","File_ANSI.html#method_appendString","(string $source)","Appdend a string",2],["File_ANSI::_newLine","File_ANSI","File_ANSI.html#method__newLine","()","Add a new line",2],["File_ANSI::_processCoordinate","File_ANSI","File_ANSI.html#method__processCoordinate","($last_attr, $cur_attr, $char)","Returns the current coordinate without preformating",2],["File_ANSI::_getScreen","File_ANSI","File_ANSI.html#method__getScreen","()","Returns the current screen without preformating",2],["File_ANSI::getScreen","File_ANSI","File_ANSI.html#method_getScreen","()","Returns the current screen",2],["File_ANSI::getHistory","File_ANSI","File_ANSI.html#method_getHistory","()","Returns the current screen and the x previous lines",2],["File_ASN1::__construct","File_ASN1","File_ASN1.html#method___construct","()","Default Constructor.",2],["File_ASN1::File_ASN1","File_ASN1","File_ASN1.html#method_File_ASN1","()","PHP4 compatible Default Constructor.",2],["File_ASN1::decodeBER","File_ASN1","File_ASN1.html#method_decodeBER","(string $encoded)","Parse BER-encoding",2],["File_ASN1::_decode_ber","File_ASN1","File_ASN1.html#method__decode_ber","(string $encoded, int $start, int $encoded_pos)","Parse BER-encoding (Helper function)",2],["File_ASN1::asn1map","File_ASN1","File_ASN1.html#method_asn1map","(array $decoded, array $mapping, array $special = array())","ASN.1 Map",2],["File_ASN1::encodeDER","File_ASN1","File_ASN1.html#method_encodeDER","($source, $mapping, $special = array())","ASN.1 Encode",2],["File_ASN1::_encode_der","File_ASN1","File_ASN1.html#method__encode_der","($source, $mapping, $idx = null, $special = array())","ASN.1 Encode (Helper function)",2],["File_ASN1::_encodeLength","File_ASN1","File_ASN1.html#method__encodeLength","(int $length)","DER-encode the length",2],["File_ASN1::_decodeOID","File_ASN1","File_ASN1.html#method__decodeOID","(string $content)","BER-decode the OID",2],["File_ASN1::_encodeOID","File_ASN1","File_ASN1.html#method__encodeOID","($source)","DER-encode the OID",2],["File_ASN1::_decodeUnixTime","File_ASN1","File_ASN1.html#method__decodeUnixTime","(string $content, int $tag)","BER-decode the time (using UNIX time)",2],["File_ASN1::_decodeDateTime","File_ASN1","File_ASN1.html#method__decodeDateTime","(string $content, int $tag)","BER-decode the time (using DateTime)",2],["File_ASN1::setTimeFormat","File_ASN1","File_ASN1.html#method_setTimeFormat","(string $format)","Set the time format",2],["File_ASN1::loadOIDs","File_ASN1","File_ASN1.html#method_loadOIDs","(array $oids)","Load OIDs",2],["File_ASN1::loadFilters","File_ASN1","File_ASN1.html#method_loadFilters","(array $filters)","Load filters",2],["File_ASN1::_string_shift","File_ASN1","File_ASN1.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["File_ASN1::convert","File_ASN1","File_ASN1.html#method_convert","(string $in, int $from = FILE_ASN1_TYPE_UTF8_STRING, int $to = FILE_ASN1_TYPE_UTF8_STRING)","String type conversion",2],["File_ASN1_Element::__construct","File_ASN1_Element","File_ASN1_Element.html#method___construct","(string $encoded)","Constructor",2],["File_ASN1_Element::File_ASN1_Element","File_ASN1_Element","File_ASN1_Element.html#method_File_ASN1_Element","($encoded)","PHP4 compatible Default Constructor.",2],["File_X509::__construct","File_X509","File_X509.html#method___construct","()","Default Constructor.",2],["File_X509::File_X509","File_X509","File_X509.html#method_File_X509","()","PHP4 compatible Default Constructor.",2],["File_X509::loadX509","File_X509","File_X509.html#method_loadX509","(string $cert, int $mode = FILE_X509_FORMAT_AUTO_DETECT)","Load X.509 certificate",2],["File_X509::saveX509","File_X509","File_X509.html#method_saveX509","(array $cert, int $format = FILE_X509_FORMAT_PEM)","Save X.509 certificate",2],["File_X509::_mapInExtensions","File_X509","File_X509.html#method__mapInExtensions","(array $root, string $path, object $asn1)","Map extension values from octet string to extension-specific",2],["File_X509::_mapOutExtensions","File_X509","File_X509.html#method__mapOutExtensions","(array $root, string $path, object $asn1)","Map extension values from extension-specific internal",2],["File_X509::_mapInAttributes","File_X509","File_X509.html#method__mapInAttributes","(array $root, string $path, object $asn1)","Map attribute values from ANY type to attribute-specific",2],["File_X509::_mapOutAttributes","File_X509","File_X509.html#method__mapOutAttributes","(array $root, string $path, object $asn1)","Map attribute values from attribute-specific internal",2],["File_X509::_mapInDNs","File_X509","File_X509.html#method__mapInDNs","(array $root, string $path, object $asn1)","Map DN values from ANY type to DN-specific internal",2],["File_X509::_mapOutDNs","File_X509","File_X509.html#method__mapOutDNs","(array $root, string $path, object $asn1)","Map DN values from DN-specific internal format to ",2],["File_X509::_getMapping","File_X509","File_X509.html#method__getMapping","(string $extnId)","Associate an extension ID to an extension mapping",2],["File_X509::loadCA","File_X509","File_X509.html#method_loadCA","(string $cert)","Load an X.509 certificate as a certificate authority",2],["File_X509::validateURL","File_X509","File_X509.html#method_validateURL","(string $url)","Validate an X.509 certificate against a URL",2],["File_X509::validateDate","File_X509","File_X509.html#method_validateDate","(<a href=\"http:\/\/php.net\/DateTime\"><abbr title=\"DateTime\">DateTime<\/abbr><\/a>|int|string $date = null)","Validate a date",2],["File_X509::_fetchURL","File_X509","File_X509.html#method__fetchURL","(string $url)","Fetches a URL",2],["File_X509::_testForIntermediate","File_X509","File_X509.html#method__testForIntermediate","(bool $caonly, int $count)","Validates an intermediate cert as identified via authority",2],["File_X509::validateSignature","File_X509","File_X509.html#method_validateSignature","(bool $caonly = true)","Validate a signature",2],["File_X509::_validateSignatureCountable","File_X509","File_X509.html#method__validateSignatureCountable","(bool $caonly, int $count)","Validate a signature",2],["File_X509::_validateSignature","File_X509","File_X509.html#method__validateSignature","(string $publicKeyAlgorithm, string $publicKey, string $signatureAlgorithm, string $signature, string $signatureSubject)","Validates a signature",2],["File_X509::setRecurLimit","File_X509","File_X509.html#method_setRecurLimit","(int $count)","Sets the recursion limit",2],["File_X509::disableURLFetch","File_X509","File_X509.html#method_disableURLFetch","()","Prevents URIs from being automatically retrieved",2],["File_X509::enableURLFetch","File_X509","File_X509.html#method_enableURLFetch","()","Allows URIs to be automatically retrieved",2],["File_X509::_reformatKey","File_X509","File_X509.html#method__reformatKey","(string $algorithm, string $key)","Reformat public keys",2],["File_X509::_decodeIP","File_X509","File_X509.html#method__decodeIP","(string $ip)","Decodes an IP address",2],["File_X509::_decodeNameConstraintIP","File_X509","File_X509.html#method__decodeNameConstraintIP","(string $ip)","Decodes an IP address in a name constraints extension",2],["File_X509::_encodeIP","File_X509","File_X509.html#method__encodeIP","(string|array $ip)","Encodes an IP address",2],["File_X509::_translateDNProp","File_X509","File_X509.html#method__translateDNProp","(string $propName)","\"Normalizes\" a Distinguished Name property",2],["File_X509::setDNProp","File_X509","File_X509.html#method_setDNProp","(string $propName, mixed $propValue, string $type = &#039;utf8String&#039;)","Set a Distinguished Name property",2],["File_X509::removeDNProp","File_X509","File_X509.html#method_removeDNProp","(string $propName)","Remove Distinguished Name properties",2],["File_X509::getDNProp","File_X509","File_X509.html#method_getDNProp","(string $propName, array $dn = null, bool $withType = false)","Get Distinguished Name properties",2],["File_X509::setDN","File_X509","File_X509.html#method_setDN","(mixed $dn, bool $merge = false, string $type = &#039;utf8String&#039;)","Set a Distinguished Name",2],["File_X509::getDN","File_X509","File_X509.html#method_getDN","(mixed $format = FILE_X509_DN_ARRAY, array $dn = null)","Get the Distinguished Name for a certificates subject",2],["File_X509::getIssuerDN","File_X509","File_X509.html#method_getIssuerDN","(int $format = FILE_X509_DN_ARRAY)","Get the Distinguished Name for a certificate\/crl issuer",2],["File_X509::getSubjectDN","File_X509","File_X509.html#method_getSubjectDN","(int $format = FILE_X509_DN_ARRAY)","Get the Distinguished Name for a certificate\/csr subject",2],["File_X509::getIssuerDNProp","File_X509","File_X509.html#method_getIssuerDNProp","(string $propName, bool $withType = false)","Get an individual Distinguished Name property for a",2],["File_X509::getSubjectDNProp","File_X509","File_X509.html#method_getSubjectDNProp","(string $propName, bool $withType = false)","Get an individual Distinguished Name property for a",2],["File_X509::getChain","File_X509","File_X509.html#method_getChain","()","Get the certificate chain for the current cert",2],["File_X509::setPublicKey","File_X509","File_X509.html#method_setPublicKey","(object $key)","Set public key",2],["File_X509::setPrivateKey","File_X509","File_X509.html#method_setPrivateKey","(object $key)","Set private key",2],["File_X509::setChallenge","File_X509","File_X509.html#method_setChallenge","(string $challenge)","Set challenge",2],["File_X509::getPublicKey","File_X509","File_X509.html#method_getPublicKey","()","Gets the public key",2],["File_X509::loadCSR","File_X509","File_X509.html#method_loadCSR","($csr, $mode = FILE_X509_FORMAT_AUTO_DETECT)","Load a Certificate Signing Request",2],["File_X509::saveCSR","File_X509","File_X509.html#method_saveCSR","(array $csr, int $format = FILE_X509_FORMAT_PEM)","Save CSR request",2],["File_X509::loadSPKAC","File_X509","File_X509.html#method_loadSPKAC","($spkac)","Load a SPKAC CSR",2],["File_X509::saveSPKAC","File_X509","File_X509.html#method_saveSPKAC","($spkac, $format = FILE_X509_FORMAT_PEM)","Save a SPKAC CSR request",2],["File_X509::loadCRL","File_X509","File_X509.html#method_loadCRL","($crl, $mode = FILE_X509_FORMAT_AUTO_DETECT)","Load a Certificate Revocation List",2],["File_X509::saveCRL","File_X509","File_X509.html#method_saveCRL","(array $crl, int $format = FILE_X509_FORMAT_PEM)","Save Certificate Revocation List.",2],["File_X509::_timeField","File_X509","File_X509.html#method__timeField","(string $date)","Helper function to build a time field according to",2],["File_X509::sign","File_X509","File_X509.html#method_sign","(<a href=\"File_X509.html\"><abbr title=\"File_X509\">File_X509<\/abbr><\/a> $issuer, <a href=\"File_X509.html\"><abbr title=\"File_X509\">File_X509<\/abbr><\/a> $subject, string $signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign an X.509 certificate",2],["File_X509::signCSR","File_X509","File_X509.html#method_signCSR","($signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign a CSR",2],["File_X509::signSPKAC","File_X509","File_X509.html#method_signSPKAC","($signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign a SPKAC",2],["File_X509::signCRL","File_X509","File_X509.html#method_signCRL","(<a href=\"File_X509.html\"><abbr title=\"File_X509\">File_X509<\/abbr><\/a> $issuer, <a href=\"File_X509.html\"><abbr title=\"File_X509\">File_X509<\/abbr><\/a> $crl, string $signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign a CRL",2],["File_X509::_sign","File_X509","File_X509.html#method__sign","($key, $signatureAlgorithm)","X.509 certificate signing helper function.",2],["File_X509::setStartDate","File_X509","File_X509.html#method_setStartDate","(string $date)","Set certificate start date",2],["File_X509::setEndDate","File_X509","File_X509.html#method_setEndDate","(string $date)","Set certificate end date",2],["File_X509::setSerialNumber","File_X509","File_X509.html#method_setSerialNumber","(string $serial, <abbr title=\"$base\">$base<\/abbr> $base = -256)","Set Serial Number",2],["File_X509::makeCA","File_X509","File_X509.html#method_makeCA","()","Turns the certificate into a certificate authority",2],["File_X509::_isSubArrayValid","File_X509","File_X509.html#method__isSubArrayValid","(array $root, string $path)","Check for validity of subarray",2],["File_X509::_subArrayUnchecked","File_X509","File_X509.html#method__subArrayUnchecked","(array $root, string $path, bool $create = false)","Get a reference to a subarray",2],["File_X509::_subArray","File_X509","File_X509.html#method__subArray","(array $root, string $path, bool $create = false)","Get a reference to a subarray",2],["File_X509::_extensions","File_X509","File_X509.html#method__extensions","(array $root, string $path = null, bool $create = false)","Get a reference to an extension subarray",2],["File_X509::_removeExtension","File_X509","File_X509.html#method__removeExtension","(string $id, string $path = null)","Remove an Extension",2],["File_X509::_getExtension","File_X509","File_X509.html#method__getExtension","(string $id, array $cert = null, string $path = null)","Get an Extension",2],["File_X509::_getExtensions","File_X509","File_X509.html#method__getExtensions","(array $cert = null, string $path = null)","Returns a list of all extensions in use",2],["File_X509::_setExtension","File_X509","File_X509.html#method__setExtension","(string $id, mixed $value, bool $critical = false, bool $replace = true, string $path = null)","Set an Extension",2],["File_X509::removeExtension","File_X509","File_X509.html#method_removeExtension","(string $id)","Remove a certificate, CSR or CRL Extension",2],["File_X509::getExtension","File_X509","File_X509.html#method_getExtension","(string $id, array $cert = null)","Get a certificate, CSR or CRL Extension",2],["File_X509::getExtensions","File_X509","File_X509.html#method_getExtensions","(array $cert = null)","Returns a list of all extensions in use in certificate,",2],["File_X509::setExtension","File_X509","File_X509.html#method_setExtension","(string $id, mixed $value, bool $critical = false, bool $replace = true)","Set a certificate, CSR or CRL Extension",2],["File_X509::removeAttribute","File_X509","File_X509.html#method_removeAttribute","(string $id, int $disposition = FILE_X509_ATTR_ALL)","Remove a CSR attribute.",2],["File_X509::getAttribute","File_X509","File_X509.html#method_getAttribute","(string $id, int $disposition = FILE_X509_ATTR_ALL, array $csr = null)","Get a CSR attribute",2],["File_X509::getAttributes","File_X509","File_X509.html#method_getAttributes","(array $csr = null)","Returns a list of all CSR attributes in use",2],["File_X509::setAttribute","File_X509","File_X509.html#method_setAttribute","(string $id, mixed $value, bool $disposition = FILE_X509_ATTR_ALL)","Set a CSR attribute",2],["File_X509::setKeyIdentifier","File_X509","File_X509.html#method_setKeyIdentifier","(string $value)","Sets the subject key identifier",2],["File_X509::computeKeyIdentifier","File_X509","File_X509.html#method_computeKeyIdentifier","(mixed $key = null, int $method = 1)","Compute a public key identifier.",2],["File_X509::_formatSubjectPublicKey","File_X509","File_X509.html#method__formatSubjectPublicKey","()","Format a public key as appropriate",2],["File_X509::setDomain","File_X509","File_X509.html#method_setDomain","()","Set the domain name's which the cert is to be valid",2],["File_X509::setIPAddress","File_X509","File_X509.html#method_setIPAddress","()","Set the IP Addresses's which the cert is to be valid",2],["File_X509::_dnsName","File_X509","File_X509.html#method__dnsName","(string $domain)","Helper function to build domain array",2],["File_X509::_iPAddress","File_X509","File_X509.html#method__iPAddress","(string $address)","Helper function to build IP Address array",2],["File_X509::_revokedCertificate","File_X509","File_X509.html#method__revokedCertificate","(array $rclist, string $serial, bool $create = false)","Get the index of a revoked certificate.",2],["File_X509::revoke","File_X509","File_X509.html#method_revoke","(string $serial, string $date = null)","Revoke a certificate.",2],["File_X509::unrevoke","File_X509","File_X509.html#method_unrevoke","(string $serial)","Unrevoke a certificate.",2],["File_X509::getRevoked","File_X509","File_X509.html#method_getRevoked","(string $serial)","Get a revoked certificate.",2],["File_X509::listRevoked","File_X509","File_X509.html#method_listRevoked","(array $crl = null)","List revoked certificates",2],["File_X509::removeRevokedCertificateExtension","File_X509","File_X509.html#method_removeRevokedCertificateExtension","(string $serial, string $id)","Remove a Revoked Certificate Extension",2],["File_X509::getRevokedCertificateExtension","File_X509","File_X509.html#method_getRevokedCertificateExtension","(string $serial, string $id, array $crl = null)","Get a Revoked Certificate Extension",2],["File_X509::getRevokedCertificateExtensions","File_X509","File_X509.html#method_getRevokedCertificateExtensions","(string $serial, array $crl = null)","Returns a list of all extensions in use for a given",2],["File_X509::setRevokedCertificateExtension","File_X509","File_X509.html#method_setRevokedCertificateExtension","(string $serial, string $id, mixed $value, bool $critical = false, bool $replace = true)","Set a Revoked Certificate Extension",2],["File_X509::_extractBER","File_X509","File_X509.html#method__extractBER","(string $str)","Extract raw BER from Base64 encoding",2],["File_X509::getOID","File_X509","File_X509.html#method_getOID","($name)","Returns the OID corresponding to a name",2],["Functional_Net_SCPSSH2UserStoryTest::setUpBeforeClass","Functional_Net_SCPSSH2UserStoryTest","Functional_Net_SCPSSH2UserStoryTest.html#method_setUpBeforeClass","()","",2],["Functional_Net_SCPSSH2UserStoryTest::testConstructSSH2","Functional_Net_SCPSSH2UserStoryTest","Functional_Net_SCPSSH2UserStoryTest.html#method_testConstructSSH2","()","",2],["Functional_Net_SCPSSH2UserStoryTest::testConstructor","Functional_Net_SCPSSH2UserStoryTest","Functional_Net_SCPSSH2UserStoryTest.html#method_testConstructor","(<a href=\"phpseclib\/Net\/SSH2.html\"><abbr title=\"phpseclib\\Net\\SSH2\">SSH2<\/abbr><\/a> $ssh)","",2],["Functional_Net_SCPSSH2UserStoryTest::testPutGetString","Functional_Net_SCPSSH2UserStoryTest","Functional_Net_SCPSSH2UserStoryTest.html#method_testPutGetString","(<a href=\"phpseclib\/Net\/SCP.html\"><abbr title=\"phpseclib\\Net\\SCP\">SCP<\/abbr><\/a> $scp)","",2],["Functional_Net_SCPSSH2UserStoryTest::testGetFile","Functional_Net_SCPSSH2UserStoryTest","Functional_Net_SCPSSH2UserStoryTest.html#method_testGetFile","(<a href=\"phpseclib\/Net\/SCP.html\"><abbr title=\"phpseclib\\Net\\SCP\">SCP<\/abbr><\/a> $scp)","",2],["Functional_Net_SFTPLargeFileTest::setUpBeforeClass","Functional_Net_SFTPLargeFileTest","Functional_Net_SFTPLargeFileTest.html#method_setUpBeforeClass","()","",2],["Functional_Net_SFTPLargeFileTest::testPutSizeLocalFile","Functional_Net_SFTPLargeFileTest","Functional_Net_SFTPLargeFileTest.html#method_testPutSizeLocalFile","()","",2],["Functional_Net_SFTPStreamTest::setUpBeforeClass","Functional_Net_SFTPStreamTest","Functional_Net_SFTPStreamTest.html#method_setUpBeforeClass","()","",2],["Functional_Net_SFTPStreamTest::testFopenFcloseCreatesFile","Functional_Net_SFTPStreamTest","Functional_Net_SFTPStreamTest.html#method_testFopenFcloseCreatesFile","()","",2],["Functional_Net_SFTPStreamTest::testFilenameWithHash","Functional_Net_SFTPStreamTest","Functional_Net_SFTPStreamTest.html#method_testFilenameWithHash","()","",2],["Functional_Net_SFTPTestCase::setUp","Functional_Net_SFTPTestCase","Functional_Net_SFTPTestCase.html#method_setUp","()","",2],["Functional_Net_SFTPTestCase::tearDown","Functional_Net_SFTPTestCase","Functional_Net_SFTPTestCase.html#method_tearDown","()","",2],["Functional_Net_SFTPUserStoryTest::setUpBeforeClass","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_setUpBeforeClass","()","",2],["Functional_Net_SFTPUserStoryTest::testConstructor","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testConstructor","()","",2],["Functional_Net_SFTPUserStoryTest::testPasswordLogin","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testPasswordLogin","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testPwdHome","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testPwdHome","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testMkDirScratch","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testMkDirScratch","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testChDirScratch","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testChDirScratch","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testStatOnDir","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testStatOnDir","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testPutSizeGetFile","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testPutSizeGetFile","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testPutSizeGetFileCallback","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testPutSizeGetFileCallback","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testTouch","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testTouch","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testTruncate","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testTruncate","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testChModOnFile","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testChModOnFile","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testChDirOnFile","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testChDirOnFile","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testFileExistsIsFileIsDirFile","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testFileExistsIsFileIsDirFile","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testFileExistsIsFileIsDirFileNonexistent","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testFileExistsIsFileIsDirFileNonexistent","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testSortOrder","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testSortOrder","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testResourceXfer","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testResourceXfer","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testSymlink","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testSymlink","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testStatLstatCache","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testStatLstatCache","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testLinkFile","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testLinkFile","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testReadlink","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testReadlink","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testStatOnCWD","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testStatOnCWD","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testStatcacheFix","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testStatcacheFix","($sftp)","on older versions this would result in a fatal error",2],["Functional_Net_SFTPUserStoryTest::testChDirUpHome","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testChDirUpHome","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testFileExistsIsFileIsDirDir","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testFileExistsIsFileIsDirDir","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testTruncateLargeFile","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testTruncateLargeFile","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testRmDirScratch","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testRmDirScratch","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testDeleteRecursiveScratch","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testDeleteRecursiveScratch","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testRmDirScratchNonexistent","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testRmDirScratchNonexistent","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testDeleteEmptyDir","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testDeleteEmptyDir","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testStatVsLstat","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testStatVsLstat","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testUploadOffsets","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testUploadOffsets","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testReadableWritable","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testReadableWritable","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testExecNlist","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testExecNlist","($sftp)","",2],["Functional_Net_SFTPUserStoryTest::testRawlistDisabledStatCache","Functional_Net_SFTPUserStoryTest","Functional_Net_SFTPUserStoryTest.html#method_testRawlistDisabledStatCache","($sftp)","",2],["Functional_Net_SSH2AgentTest::setUpBeforeClass","Functional_Net_SSH2AgentTest","Functional_Net_SSH2AgentTest.html#method_setUpBeforeClass","()","",2],["Functional_Net_SSH2AgentTest::testAgentLogin","Functional_Net_SSH2AgentTest","Functional_Net_SSH2AgentTest.html#method_testAgentLogin","()","",2],["Functional_Net_SSH2AgentTest::testAgentForward","Functional_Net_SSH2AgentTest","Functional_Net_SSH2AgentTest.html#method_testAgentForward","($args)","",2],["Functional_Net_SSH2Test::testConstructor","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testConstructor","()","",2],["Functional_Net_SSH2Test::testPreLogin","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testPreLogin","($ssh)","",2],["Functional_Net_SSH2Test::testBadPassword","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testBadPassword","($ssh)","",2],["Functional_Net_SSH2Test::testPasswordLogin","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testPasswordLogin","($ssh)","",2],["Functional_Net_SSH2Test::testExecWithMethodCallback","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testExecWithMethodCallback","($ssh)","",2],["Functional_Net_SSH2Test::testGetServerPublicHostKey","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testGetServerPublicHostKey","()","",2],["Functional_Net_SSH2Test::testOpenSocketConnect","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testOpenSocketConnect","()","",2],["Functional_Net_SSH2Test::testDisablePTY","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testDisablePTY","($ssh)","",2],["Functional_Net_SSH2Test::testChannelDataAfterOpen","Functional_Net_SSH2Test","Functional_Net_SSH2Test.html#method_testChannelDataAfterOpen","($ssh)","",2],["Math_BigInteger::__construct","Math_BigInteger","Math_BigInteger.html#method___construct","(<abbr title=\"$x\">$x<\/abbr> $x, int $base = 10)","Converts base-2, base-10, base-16, and binary strings",2],["Math_BigInteger::Math_BigInteger","Math_BigInteger","Math_BigInteger.html#method_Math_BigInteger","(<abbr title=\"$x\">$x<\/abbr> $x, int $base = 10)","PHP4 compatible Default Constructor.",2],["Math_BigInteger::toBytes","Math_BigInteger","Math_BigInteger.html#method_toBytes","(bool $twos_compliment = false)","Converts a BigInteger to a byte string (eg.",2],["Math_BigInteger::toHex","Math_BigInteger","Math_BigInteger.html#method_toHex","(bool $twos_compliment = false)","Converts a BigInteger to a hex string (eg.",2],["Math_BigInteger::toBits","Math_BigInteger","Math_BigInteger.html#method_toBits","(bool $twos_compliment = false)","Converts a BigInteger to a bit string (eg.",2],["Math_BigInteger::toString","Math_BigInteger","Math_BigInteger.html#method_toString","()","Converts a BigInteger to a base-10 number.",2],["Math_BigInteger::copy","Math_BigInteger","Math_BigInteger.html#method_copy","()","Copy an object",2],["Math_BigInteger::__toString","Math_BigInteger","Math_BigInteger.html#method___toString","()","__toString() magic method",2],["Math_BigInteger::__clone","Math_BigInteger","Math_BigInteger.html#method___clone","()","__clone() magic method",2],["Math_BigInteger::__sleep","Math_BigInteger","Math_BigInteger.html#method___sleep","()","__sleep() magic method",2],["Math_BigInteger::__wakeup","Math_BigInteger","Math_BigInteger.html#method___wakeup","()","__wakeup() magic method",2],["Math_BigInteger::__debugInfo","Math_BigInteger","Math_BigInteger.html#method___debugInfo","()","__debugInfo() magic method",2],["Math_BigInteger::add","Math_BigInteger","Math_BigInteger.html#method_add","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $y)","Adds two BigIntegers.",2],["Math_BigInteger::_add","Math_BigInteger","Math_BigInteger.html#method__add","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Performs addition.",2],["Math_BigInteger::subtract","Math_BigInteger","Math_BigInteger.html#method_subtract","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $y)","Subtracts two BigIntegers.",2],["Math_BigInteger::_subtract","Math_BigInteger","Math_BigInteger.html#method__subtract","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Performs subtraction.",2],["Math_BigInteger::multiply","Math_BigInteger","Math_BigInteger.html#method_multiply","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x)","Multiplies two BigIntegers",2],["Math_BigInteger::_multiply","Math_BigInteger","Math_BigInteger.html#method__multiply","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Performs multiplication.",2],["Math_BigInteger::_regularMultiply","Math_BigInteger","Math_BigInteger.html#method__regularMultiply","(array $x_value, array $y_value)","Performs long multiplication on two BigIntegers",2],["Math_BigInteger::_karatsuba","Math_BigInteger","Math_BigInteger.html#method__karatsuba","(array $x_value, array $y_value)","Performs Karatsuba multiplication on two BigIntegers",2],["Math_BigInteger::_square","Math_BigInteger","Math_BigInteger.html#method__square","(array $x = false)","Performs squaring",2],["Math_BigInteger::_baseSquare","Math_BigInteger","Math_BigInteger.html#method__baseSquare","(array $value)","Performs traditional squaring on two BigIntegers",2],["Math_BigInteger::_karatsubaSquare","Math_BigInteger","Math_BigInteger.html#method__karatsubaSquare","(array $value)","Performs Karatsuba \"squaring\" on two BigIntegers",2],["Math_BigInteger::divide","Math_BigInteger","Math_BigInteger.html#method_divide","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $y)","Divides two BigIntegers.",2],["Math_BigInteger::_divide_digit","Math_BigInteger","Math_BigInteger.html#method__divide_digit","(array $dividend, array $divisor)","Divides a BigInteger by a regular integer",2],["Math_BigInteger::modPow","Math_BigInteger","Math_BigInteger.html#method_modPow","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $e, <a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $n)","Performs modular exponentiation.",2],["Math_BigInteger::powMod","Math_BigInteger","Math_BigInteger.html#method_powMod","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $e, <a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $n)","Performs modular exponentiation.",2],["Math_BigInteger::_slidingWindow","Math_BigInteger","Math_BigInteger.html#method__slidingWindow","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $e, <a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $n, int $mode)","Sliding Window k-ary Modular Exponentiation",2],["Math_BigInteger::_reduce","Math_BigInteger","Math_BigInteger.html#method__reduce","(array $x, array $n, int $mode)","Modular reduction",2],["Math_BigInteger::_prepareReduce","Math_BigInteger","Math_BigInteger.html#method__prepareReduce","(array $x, array $n, int $mode)","Modular reduction preperation",2],["Math_BigInteger::_multiplyReduce","Math_BigInteger","Math_BigInteger.html#method__multiplyReduce","(array $x, array $y, array $n, int $mode)","Modular multiply",2],["Math_BigInteger::_squareReduce","Math_BigInteger","Math_BigInteger.html#method__squareReduce","(array $x, array $n, int $mode)","Modular square",2],["Math_BigInteger::_mod2","Math_BigInteger","Math_BigInteger.html#method__mod2","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $n)","Modulos for Powers of Two",2],["Math_BigInteger::_barrett","Math_BigInteger","Math_BigInteger.html#method__barrett","(array $n, array $m)","Barrett Modular Reduction",2],["Math_BigInteger::_regularBarrett","Math_BigInteger","Math_BigInteger.html#method__regularBarrett","(array $x, array $n)","(Regular) Barrett Modular Reduction",2],["Math_BigInteger::_multiplyLower","Math_BigInteger","Math_BigInteger.html#method__multiplyLower","(array $x_value, bool $x_negative, array $y_value, bool $y_negative, int $stop)","Performs long multiplication up to $stop digits",2],["Math_BigInteger::_montgomery","Math_BigInteger","Math_BigInteger.html#method__montgomery","(array $x, array $n)","Montgomery Modular Reduction",2],["Math_BigInteger::_montgomeryMultiply","Math_BigInteger","Math_BigInteger.html#method__montgomeryMultiply","(array $x, array $y, array $m)","Montgomery Multiply",2],["Math_BigInteger::_prepMontgomery","Math_BigInteger","Math_BigInteger.html#method__prepMontgomery","(array $x, array $n)","Prepare a number for use in Montgomery Modular Reductions",2],["Math_BigInteger::_modInverse67108864","Math_BigInteger","Math_BigInteger.html#method__modInverse67108864","(array $x)","Modular Inverse of a number mod 2**26 (eg.",2],["Math_BigInteger::modInverse","Math_BigInteger","Math_BigInteger.html#method_modInverse","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $n)","Calculates modular inverses.",2],["Math_BigInteger::extendedGCD","Math_BigInteger","Math_BigInteger.html#method_extendedGCD","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $n)","Calculates the greatest common divisor and Bezout's",2],["Math_BigInteger::gcd","Math_BigInteger","Math_BigInteger.html#method_gcd","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $n)","Calculates the greatest common divisor",2],["Math_BigInteger::abs","Math_BigInteger","Math_BigInteger.html#method_abs","()","Absolute value.",2],["Math_BigInteger::compare","Math_BigInteger","Math_BigInteger.html#method_compare","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $y)","Compares two numbers.",2],["Math_BigInteger::_compare","Math_BigInteger","Math_BigInteger.html#method__compare","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Compares two numbers.",2],["Math_BigInteger::equals","Math_BigInteger","Math_BigInteger.html#method_equals","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x)","Tests the equality of two numbers.",2],["Math_BigInteger::setPrecision","Math_BigInteger","Math_BigInteger.html#method_setPrecision","(int $bits)","Set Precision",2],["Math_BigInteger::bitwise_and","Math_BigInteger","Math_BigInteger.html#method_bitwise_and","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x)","Logical And",2],["Math_BigInteger::bitwise_or","Math_BigInteger","Math_BigInteger.html#method_bitwise_or","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x)","Logical Or",2],["Math_BigInteger::bitwise_xor","Math_BigInteger","Math_BigInteger.html#method_bitwise_xor","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $x)","Logical Exclusive-Or",2],["Math_BigInteger::bitwise_not","Math_BigInteger","Math_BigInteger.html#method_bitwise_not","()","Logical Not",2],["Math_BigInteger::bitwise_rightShift","Math_BigInteger","Math_BigInteger.html#method_bitwise_rightShift","(int $shift)","Logical Right Shift",2],["Math_BigInteger::bitwise_leftShift","Math_BigInteger","Math_BigInteger.html#method_bitwise_leftShift","(int $shift)","Logical Left Shift",2],["Math_BigInteger::bitwise_leftRotate","Math_BigInteger","Math_BigInteger.html#method_bitwise_leftRotate","(int $shift)","Logical Left Rotate",2],["Math_BigInteger::bitwise_rightRotate","Math_BigInteger","Math_BigInteger.html#method_bitwise_rightRotate","(int $shift)","Logical Right Rotate",2],["Math_BigInteger::setRandomGenerator","Math_BigInteger","Math_BigInteger.html#method_setRandomGenerator","(string $generator)","Set random number generator function",2],["Math_BigInteger::_random_number_helper","Math_BigInteger","Math_BigInteger.html#method__random_number_helper","($size)","Generates a random BigInteger",2],["Math_BigInteger::random","Math_BigInteger","Math_BigInteger.html#method_random","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $arg1, <a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $arg2 = false)","Generate a random number",2],["Math_BigInteger::randomPrime","Math_BigInteger","Math_BigInteger.html#method_randomPrime","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $arg1, <a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $arg2 = false, int $timeout = false)","Generate a random prime number.",2],["Math_BigInteger::_make_odd","Math_BigInteger","Math_BigInteger.html#method__make_odd","()","Make the current number odd",2],["Math_BigInteger::isPrime","Math_BigInteger","Math_BigInteger.html#method_isPrime","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $t = false)","Checks a numer to see if it's prime",2],["Math_BigInteger::_lshift","Math_BigInteger","Math_BigInteger.html#method__lshift","(int $shift)","Logical Left Shift",2],["Math_BigInteger::_rshift","Math_BigInteger","Math_BigInteger.html#method__rshift","(int $shift)","Logical Right Shift",2],["Math_BigInteger::_normalize","Math_BigInteger","Math_BigInteger.html#method__normalize","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $result)","Normalize",2],["Math_BigInteger::_trim","Math_BigInteger","Math_BigInteger.html#method__trim","(array $value)","Trim",2],["Math_BigInteger::_array_repeat","Math_BigInteger","Math_BigInteger.html#method__array_repeat","(<abbr title=\"$input\">$input<\/abbr> $input, <abbr title=\"$multiplier\">$multiplier<\/abbr> $multiplier)","Array Repeat",2],["Math_BigInteger::_base256_lshift","Math_BigInteger","Math_BigInteger.html#method__base256_lshift","(<abbr title=\"$x\">$x<\/abbr> $x, <abbr title=\"$shift\">$shift<\/abbr> $shift)","Logical Left Shift",2],["Math_BigInteger::_base256_rshift","Math_BigInteger","Math_BigInteger.html#method__base256_rshift","(<abbr title=\"$x\">$x<\/abbr> $x, <abbr title=\"$shift\">$shift<\/abbr> $shift)","Logical Right Shift",2],["Math_BigInteger::_int2bytes","Math_BigInteger","Math_BigInteger.html#method__int2bytes","(int $x)","Converts 32-bit integers to bytes.",2],["Math_BigInteger::_bytes2int","Math_BigInteger","Math_BigInteger.html#method__bytes2int","(string $x)","Converts bytes to 32-bit integers",2],["Math_BigInteger::_encodeASN1Length","Math_BigInteger","Math_BigInteger.html#method__encodeASN1Length","(int $length)","DER-encode an integer",2],["Math_BigInteger::_safe_divide","Math_BigInteger","Math_BigInteger.html#method__safe_divide","(int $x, int $y)","Single digit division",2],["MyArrayStore::removeClass","MyArrayStore","MyArrayStore.html#method_removeClass","(<abbr title=\"Sami\\Project\">Project<\/abbr> $project, $name)","",2],["Net_SCP::__construct","Net_SCP","Net_SCP.html#method___construct","(<a href=\"Net_SSH1.html\"><abbr title=\"Net_SSH1\">Net_SSH1<\/abbr><\/a>|<a href=\"Net_SSH2.html\"><abbr title=\"Net_SSH2\">Net_SSH2<\/abbr><\/a> $ssh)","Default Constructor.",2],["Net_SCP::Net_SCP","Net_SCP","Net_SCP.html#method_Net_SCP","(<a href=\"Net_SSH1.html\"><abbr title=\"Net_SSH1\">Net_SSH1<\/abbr><\/a>|<a href=\"Net_SSH2.html\"><abbr title=\"Net_SSH2\">Net_SSH2<\/abbr><\/a> $ssh)","PHP4 compatible Default Constructor.",2],["Net_SCP::put","Net_SCP","Net_SCP.html#method_put","(string $remote_file, string $data, int $mode = NET_SCP_STRING, callable $callback = null)","Uploads a file to the SCP server.",2],["Net_SCP::get","Net_SCP","Net_SCP.html#method_get","(string $remote_file, string $local_file = false)","Downloads a file from the SCP server.",2],["Net_SCP::_send","Net_SCP","Net_SCP.html#method__send","(string $data)","Sends a packet to an SSH server",2],["Net_SCP::_receive","Net_SCP","Net_SCP.html#method__receive","()","Receives a packet from an SSH server",2],["Net_SCP::_close","Net_SCP","Net_SCP.html#method__close","()","Closes the connection to an SSH server",2],["Net_SFTP::__construct","Net_SFTP","Net_SFTP.html#method___construct","(string $host, int $port = 22, int $timeout = 10)","Default Constructor.",2],["Net_SFTP::Net_SFTP","Net_SFTP","Net_SFTP.html#method_Net_SFTP","(string $host, int $port = 22, int $timeout = 10)","PHP4 compatible Default Constructor.",2],["Net_SFTP::login","Net_SFTP","Net_SFTP.html#method_login","($username)","Login",2],["Net_SFTP::disableStatCache","Net_SFTP","Net_SFTP.html#method_disableStatCache","()","Disable the stat cache",2],["Net_SFTP::enableStatCache","Net_SFTP","Net_SFTP.html#method_enableStatCache","()","Enable the stat cache",2],["Net_SFTP::clearStatCache","Net_SFTP","Net_SFTP.html#method_clearStatCache","()","Clear the stat cache",2],["Net_SFTP::enablePathCanonicalization","Net_SFTP","Net_SFTP.html#method_enablePathCanonicalization","()","Enable path canonicalization",2],["Net_SFTP::disablePathCanonicalization","Net_SFTP","Net_SFTP.html#method_disablePathCanonicalization","()","Enable path canonicalization",2],["Net_SFTP::pwd","Net_SFTP","Net_SFTP.html#method_pwd","()","Returns the current directory name",2],["Net_SFTP::_logError","Net_SFTP","Net_SFTP.html#method__logError","(string $response, int $status = -1)","Logs errors",2],["Net_SFTP::realpath","Net_SFTP","Net_SFTP.html#method_realpath","(string $path)","Returns canonicalized absolute pathname",2],["Net_SFTP::_realpath","Net_SFTP","Net_SFTP.html#method__realpath","(string $path)","Canonicalize the Server-Side Path Name",2],["Net_SFTP::chdir","Net_SFTP","Net_SFTP.html#method_chdir","(string $dir)","Changes the current directory",2],["Net_SFTP::nlist","Net_SFTP","Net_SFTP.html#method_nlist","(string $dir = &#039;.&#039;, bool $recursive = false)","Returns a list of files in the given directory",2],["Net_SFTP::_nlist_helper","Net_SFTP","Net_SFTP.html#method__nlist_helper","(string $dir, bool $recursive, string $relativeDir)","Helper method for nlist",2],["Net_SFTP::rawlist","Net_SFTP","Net_SFTP.html#method_rawlist","(string $dir = &#039;.&#039;, bool $recursive = false)","Returns a detailed list of files in the given directory",2],["Net_SFTP::_list","Net_SFTP","Net_SFTP.html#method__list","(string $dir, bool $raw = true)","Reads a list, be it detailed or not, of files in the",2],["Net_SFTP::_comparator","Net_SFTP","Net_SFTP.html#method__comparator","(array $a, array $b)","Compares two rawlist entries using parameters set by",2],["Net_SFTP::setListOrder","Net_SFTP","Net_SFTP.html#method_setListOrder","()","Defines how nlist() and rawlist() will be sorted -",2],["Net_SFTP::size","Net_SFTP","Net_SFTP.html#method_size","(string $filename)","Returns the file size, in bytes, or false, on failure",2],["Net_SFTP::_update_stat_cache","Net_SFTP","Net_SFTP.html#method__update_stat_cache","(string $path, mixed $value)","Save files \/ directories to cache",2],["Net_SFTP::_remove_from_stat_cache","Net_SFTP","Net_SFTP.html#method__remove_from_stat_cache","(string $path)","Remove files \/ directories from cache",2],["Net_SFTP::_query_stat_cache","Net_SFTP","Net_SFTP.html#method__query_stat_cache","($path)","Checks cache for path",2],["Net_SFTP::stat","Net_SFTP","Net_SFTP.html#method_stat","(string $filename)","Returns general information about a file.",2],["Net_SFTP::lstat","Net_SFTP","Net_SFTP.html#method_lstat","(string $filename)","Returns general information about a file or symbolic",2],["Net_SFTP::_stat","Net_SFTP","Net_SFTP.html#method__stat","(string $filename, int $type)","Returns general information about a file or symbolic",2],["Net_SFTP::truncate","Net_SFTP","Net_SFTP.html#method_truncate","(string $filename, int $new_size)","Truncates a file to a given length",2],["Net_SFTP::touch","Net_SFTP","Net_SFTP.html#method_touch","(string $filename, int $time = null, int $atime = null)","Sets access and modification time of file.",2],["Net_SFTP::chown","Net_SFTP","Net_SFTP.html#method_chown","(string $filename, int $uid, bool $recursive = false)","Changes file or directory owner",2],["Net_SFTP::chgrp","Net_SFTP","Net_SFTP.html#method_chgrp","(string $filename, int $gid, bool $recursive = false)","Changes file or directory group",2],["Net_SFTP::chmod","Net_SFTP","Net_SFTP.html#method_chmod","(int $mode, string $filename, bool $recursive = false)","Set permissions on a file.",2],["Net_SFTP::_setstat","Net_SFTP","Net_SFTP.html#method__setstat","(string $filename, string $attr, bool $recursive)","Sets information about a file",2],["Net_SFTP::_setstat_recursive","Net_SFTP","Net_SFTP.html#method__setstat_recursive","(string $path, string $attr, int $i)","Recursively sets information on directories on the",2],["Net_SFTP::readlink","Net_SFTP","Net_SFTP.html#method_readlink","(string $link)","Return the target of a symbolic link",2],["Net_SFTP::symlink","Net_SFTP","Net_SFTP.html#method_symlink","(string $target, string $link)","Create a symlink",2],["Net_SFTP::mkdir","Net_SFTP","Net_SFTP.html#method_mkdir","($dir, $mode = -1, $recursive = false)","Creates a directory.",2],["Net_SFTP::_mkdir_helper","Net_SFTP","Net_SFTP.html#method__mkdir_helper","($dir, $attr)","Helper function for directory creation",2],["Net_SFTP::rmdir","Net_SFTP","Net_SFTP.html#method_rmdir","(string $dir)","Removes a directory.",2],["Net_SFTP::put","Net_SFTP","Net_SFTP.html#method_put","(string $remote_file, string|resource $data, int $mode = NET_SFTP_STRING, int $start = -1, int $local_start = -1, callable|null $progressCallback = null)","Uploads a file to the SFTP server.",2],["Net_SFTP::_read_put_responses","Net_SFTP","Net_SFTP.html#method__read_put_responses","(int $i)","Reads multiple successive SSH_FXP_WRITE responses",2],["Net_SFTP::_close_handle","Net_SFTP","Net_SFTP.html#method__close_handle","(string $handle)","Close handle",2],["Net_SFTP::get","Net_SFTP","Net_SFTP.html#method_get","(string $remote_file, string $local_file = false, int $offset, int $length = -1, callable|null $progressCallback = null)","Downloads a file from the SFTP server.",2],["Net_SFTP::delete","Net_SFTP","Net_SFTP.html#method_delete","(string $path, bool $recursive = true)","Deletes a file on the SFTP server.",2],["Net_SFTP::_delete_recursive","Net_SFTP","Net_SFTP.html#method__delete_recursive","(string $path, int $i)","Recursively deletes directories on the SFTP server",2],["Net_SFTP::file_exists","Net_SFTP","Net_SFTP.html#method_file_exists","(string $path)","Checks whether a file or directory exists",2],["Net_SFTP::is_dir","Net_SFTP","Net_SFTP.html#method_is_dir","(string $path)","Tells whether the filename is a directory",2],["Net_SFTP::is_file","Net_SFTP","Net_SFTP.html#method_is_file","(string $path)","Tells whether the filename is a regular file",2],["Net_SFTP::is_link","Net_SFTP","Net_SFTP.html#method_is_link","(string $path)","Tells whether the filename is a symbolic link",2],["Net_SFTP::is_readable","Net_SFTP","Net_SFTP.html#method_is_readable","(string $path)","Tells whether a file exists and is readable",2],["Net_SFTP::is_writable","Net_SFTP","Net_SFTP.html#method_is_writable","(string $path)","Tells whether the filename is writable",2],["Net_SFTP::is_writeable","Net_SFTP","Net_SFTP.html#method_is_writeable","(string $path)","Tells whether the filename is writeable",2],["Net_SFTP::fileatime","Net_SFTP","Net_SFTP.html#method_fileatime","(string $path)","Gets last access time of file",2],["Net_SFTP::filemtime","Net_SFTP","Net_SFTP.html#method_filemtime","(string $path)","Gets file modification time",2],["Net_SFTP::fileperms","Net_SFTP","Net_SFTP.html#method_fileperms","(string $path)","Gets file permissions",2],["Net_SFTP::fileowner","Net_SFTP","Net_SFTP.html#method_fileowner","(string $path)","Gets file owner",2],["Net_SFTP::filegroup","Net_SFTP","Net_SFTP.html#method_filegroup","(string $path)","Gets file group",2],["Net_SFTP::filesize","Net_SFTP","Net_SFTP.html#method_filesize","(string $path)","Gets file size",2],["Net_SFTP::filetype","Net_SFTP","Net_SFTP.html#method_filetype","(string $path)","Gets file type",2],["Net_SFTP::_get_stat_cache_prop","Net_SFTP","Net_SFTP.html#method__get_stat_cache_prop","(string $path, string $prop)","Return a stat properity",2],["Net_SFTP::_get_lstat_cache_prop","Net_SFTP","Net_SFTP.html#method__get_lstat_cache_prop","(string $path, string $prop)","Return an lstat properity",2],["Net_SFTP::_get_xstat_cache_prop","Net_SFTP","Net_SFTP.html#method__get_xstat_cache_prop","($path, $prop, $type)","Return a stat or lstat properity",2],["Net_SFTP::rename","Net_SFTP","Net_SFTP.html#method_rename","(string $oldname, string $newname)","Renames a file or a directory on the SFTP server",2],["Net_SFTP::_parseAttributes","Net_SFTP","Net_SFTP.html#method__parseAttributes","(string $response)","Parse Attributes",2],["Net_SFTP::_parseMode","Net_SFTP","Net_SFTP.html#method__parseMode","(int $mode)","Attempt to identify the file type",2],["Net_SFTP::_parseLongname","Net_SFTP","Net_SFTP.html#method__parseLongname","(string $longname)","Parse Longname",2],["Net_SFTP::_send_sftp_packet","Net_SFTP","Net_SFTP.html#method__send_sftp_packet","($type, $data, $request_id = 1)","Sends SFTP Packets",2],["Net_SFTP::_get_sftp_packet","Net_SFTP","Net_SFTP.html#method__get_sftp_packet","($request_id = null)","Receives SFTP Packets",2],["Net_SFTP::getSFTPLog","Net_SFTP","Net_SFTP.html#method_getSFTPLog","()","Returns a log of the packets that have been sent and",2],["Net_SFTP::getSFTPErrors","Net_SFTP","Net_SFTP.html#method_getSFTPErrors","()","Returns all errors",2],["Net_SFTP::getLastSFTPError","Net_SFTP","Net_SFTP.html#method_getLastSFTPError","()","Returns the last error",2],["Net_SFTP::getSupportedVersions","Net_SFTP","Net_SFTP.html#method_getSupportedVersions","()","Get supported SFTP versions",2],["Net_SFTP::_disconnect","Net_SFTP","Net_SFTP.html#method__disconnect","(int $reason)","Disconnect",2],["Net_SFTP_Stream::__construct","Net_SFTP_Stream","Net_SFTP_Stream.html#method___construct","()","The Constructor",2],["Net_SFTP_Stream::_parse_path","Net_SFTP_Stream","Net_SFTP_Stream.html#method__parse_path","(string $path)","Path Parser",2],["Net_SFTP_Stream::_stream_open","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_open","(string $path, string $mode, int $options, string $opened_path)","Opens file or URL",2],["Net_SFTP_Stream::_stream_read","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_read","(int $count)","Read from stream",2],["Net_SFTP_Stream::_stream_write","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_write","(string $data)","Write to stream",2],["Net_SFTP_Stream::_stream_tell","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_tell","()","Retrieve the current position of a stream",2],["Net_SFTP_Stream::_stream_eof","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_eof","()","Tests for end-of-file on a file pointer",2],["Net_SFTP_Stream::_stream_seek","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_seek","(int $offset, int $whence)","Seeks to specific location in a stream",2],["Net_SFTP_Stream::_stream_metadata","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_metadata","(string $path, int $option, mixed $var)","Change stream options",2],["Net_SFTP_Stream::_stream_cast","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_cast","(int $cast_as)","Retrieve the underlaying resource",2],["Net_SFTP_Stream::_stream_lock","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_lock","(int $operation)","Advisory file locking",2],["Net_SFTP_Stream::_rename","Net_SFTP_Stream","Net_SFTP_Stream.html#method__rename","(string $path_from, string $path_to)","Renames a file or directory",2],["Net_SFTP_Stream::_dir_opendir","Net_SFTP_Stream","Net_SFTP_Stream.html#method__dir_opendir","(string $path, int $options)","Open directory handle",2],["Net_SFTP_Stream::_dir_readdir","Net_SFTP_Stream","Net_SFTP_Stream.html#method__dir_readdir","()","Read entry from directory handle",2],["Net_SFTP_Stream::_dir_rewinddir","Net_SFTP_Stream","Net_SFTP_Stream.html#method__dir_rewinddir","()","Rewind directory handle",2],["Net_SFTP_Stream::_dir_closedir","Net_SFTP_Stream","Net_SFTP_Stream.html#method__dir_closedir","()","Close directory handle",2],["Net_SFTP_Stream::_mkdir","Net_SFTP_Stream","Net_SFTP_Stream.html#method__mkdir","(string $path, int $mode, int $options)","Create a directory",2],["Net_SFTP_Stream::_rmdir","Net_SFTP_Stream","Net_SFTP_Stream.html#method__rmdir","($path, $options)","Removes a directory",2],["Net_SFTP_Stream::_stream_flush","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_flush","()","Flushes the output",2],["Net_SFTP_Stream::_stream_stat","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_stat","()","Retrieve information about a file resource",2],["Net_SFTP_Stream::_unlink","Net_SFTP_Stream","Net_SFTP_Stream.html#method__unlink","(string $path)","Delete a file",2],["Net_SFTP_Stream::_url_stat","Net_SFTP_Stream","Net_SFTP_Stream.html#method__url_stat","(string $path, int $flags)","Retrieve information about a file",2],["Net_SFTP_Stream::_stream_truncate","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_truncate","(int $new_size)","Truncate stream",2],["Net_SFTP_Stream::_stream_set_option","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_set_option","(int $option, int $arg1, int $arg2)","Change stream options",2],["Net_SFTP_Stream::_stream_close","Net_SFTP_Stream","Net_SFTP_Stream.html#method__stream_close","()","Close an resource",2],["Net_SFTP_Stream::__call","Net_SFTP_Stream","Net_SFTP_Stream.html#method___call","(string $name, array $arguments)","__call Magic Method",2],["Net_SSH1::__construct","Net_SSH1","Net_SSH1.html#method___construct","(string $host, int $port = 22, int $timeout = 10, int $cipher = NET_SSH1_CIPHER_3DES)","Default Constructor.",2],["Net_SSH1::Net_SSH1","Net_SSH1","Net_SSH1.html#method_Net_SSH1","(string $host, int $port = 22, int $timeout = 10, int $cipher = NET_SSH1_CIPHER_3DES)","PHP4 compatible Default Constructor.",2],["Net_SSH1::_connect","Net_SSH1","Net_SSH1.html#method__connect","()","Connect to an SSHv1 server",2],["Net_SSH1::login","Net_SSH1","Net_SSH1.html#method_login","(string $username, string $password = &#039;&#039;)","Login",2],["Net_SSH1::setTimeout","Net_SSH1","Net_SSH1.html#method_setTimeout","(mixed $timeout)","Set Timeout",2],["Net_SSH1::exec","Net_SSH1","Net_SSH1.html#method_exec","($cmd, $block = true)","Executes a command on a non-interactive shell, returns",2],["Net_SSH1::_initShell","Net_SSH1","Net_SSH1.html#method__initShell","()","Creates an interactive shell",2],["Net_SSH1::write","Net_SSH1","Net_SSH1.html#method_write","(string $cmd)","Inputs a command into an interactive shell.",2],["Net_SSH1::read","Net_SSH1","Net_SSH1.html#method_read","(string $expect, int $mode = NET_SSH1_READ_SIMPLE)","Returns the output of an interactive shell when there's",2],["Net_SSH1::interactiveWrite","Net_SSH1","Net_SSH1.html#method_interactiveWrite","(string $cmd)","Inputs a command into an interactive shell.",2],["Net_SSH1::interactiveRead","Net_SSH1","Net_SSH1.html#method_interactiveRead","()","Returns the output of an interactive shell when no",2],["Net_SSH1::disconnect","Net_SSH1","Net_SSH1.html#method_disconnect","()","Disconnect",2],["Net_SSH1::__destruct","Net_SSH1","Net_SSH1.html#method___destruct","()","Destructor.",2],["Net_SSH1::_disconnect","Net_SSH1","Net_SSH1.html#method__disconnect","(string $msg = &#039;Client Quit&#039;)","Disconnect",2],["Net_SSH1::_get_binary_packet","Net_SSH1","Net_SSH1.html#method__get_binary_packet","()","Gets Binary Packets",2],["Net_SSH1::_send_binary_packet","Net_SSH1","Net_SSH1.html#method__send_binary_packet","(string $data)","Sends Binary Packets",2],["Net_SSH1::_crc","Net_SSH1","Net_SSH1.html#method__crc","(string $data)","Cyclic Redundancy Check (CRC)",2],["Net_SSH1::_string_shift","Net_SSH1","Net_SSH1.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["Net_SSH1::_rsa_crypt","Net_SSH1","Net_SSH1.html#method__rsa_crypt","(<a href=\"Math_BigInteger.html\"><abbr title=\"Math_BigInteger\">Math_BigInteger<\/abbr><\/a> $m, array $key)","RSA Encrypt",2],["Net_SSH1::_define_array","Net_SSH1","Net_SSH1.html#method__define_array","()","Define Array",2],["Net_SSH1::getLog","Net_SSH1","Net_SSH1.html#method_getLog","()","Returns a log of the packets that have been sent and",2],["Net_SSH1::_format_log","Net_SSH1","Net_SSH1.html#method__format_log","(array $message_log, array $message_number_log)","Formats a log for printing",2],["Net_SSH1::_format_log_helper","Net_SSH1","Net_SSH1.html#method__format_log_helper","(array $matches)","Helper function for _format_log",2],["Net_SSH1::getServerKeyPublicExponent","Net_SSH1","Net_SSH1.html#method_getServerKeyPublicExponent","(bool $raw_output = false)","Return the server key public exponent",2],["Net_SSH1::getServerKeyPublicModulus","Net_SSH1","Net_SSH1.html#method_getServerKeyPublicModulus","(bool $raw_output = false)","Return the server key public modulus",2],["Net_SSH1::getHostKeyPublicExponent","Net_SSH1","Net_SSH1.html#method_getHostKeyPublicExponent","(bool $raw_output = false)","Return the host key public exponent",2],["Net_SSH1::getHostKeyPublicModulus","Net_SSH1","Net_SSH1.html#method_getHostKeyPublicModulus","(bool $raw_output = false)","Return the host key public modulus",2],["Net_SSH1::getSupportedCiphers","Net_SSH1","Net_SSH1.html#method_getSupportedCiphers","(bool $raw_output = false)","Return a list of ciphers supported by SSH1 server.",2],["Net_SSH1::getSupportedAuthentications","Net_SSH1","Net_SSH1.html#method_getSupportedAuthentications","(bool $raw_output = false)","Return a list of authentications supported by SSH1",2],["Net_SSH1::getServerIdentification","Net_SSH1","Net_SSH1.html#method_getServerIdentification","()","Return the server identification.",2],["Net_SSH1::_append_log","Net_SSH1","Net_SSH1.html#method__append_log","($protocol_flags, $message)","Logs data packets",2],["Net_SSH2::__construct","Net_SSH2","Net_SSH2.html#method___construct","(mixed $host, int $port = 22, int $timeout = 10)","Default Constructor.",2],["Net_SSH2::Net_SSH2","Net_SSH2","Net_SSH2.html#method_Net_SSH2","(mixed $host, int $port = 22, int $timeout = 10)","PHP4 compatible Default Constructor.",2],["Net_SSH2::setCryptoEngine","Net_SSH2","Net_SSH2.html#method_setCryptoEngine","(int $engine)","Set Crypto Engine Mode",2],["Net_SSH2::sendIdentificationStringFirst","Net_SSH2","Net_SSH2.html#method_sendIdentificationStringFirst","()","Send Identification String First",2],["Net_SSH2::sendIdentificationStringLast","Net_SSH2","Net_SSH2.html#method_sendIdentificationStringLast","()","Send Identification String Last",2],["Net_SSH2::sendKEXINITFirst","Net_SSH2","Net_SSH2.html#method_sendKEXINITFirst","()","Send SSH_MSG_KEXINIT First",2],["Net_SSH2::sendKEXINITLast","Net_SSH2","Net_SSH2.html#method_sendKEXINITLast","()","Send SSH_MSG_KEXINIT Last",2],["Net_SSH2::_connect","Net_SSH2","Net_SSH2.html#method__connect","()","Connect to an SSHv2 server",2],["Net_SSH2::_generate_identifier","Net_SSH2","Net_SSH2.html#method__generate_identifier","()","Generates the SSH identifier",2],["Net_SSH2::_key_exchange","Net_SSH2","Net_SSH2.html#method__key_exchange","(string $kexinit_payload_server = false)","Key Exchange",2],["Net_SSH2::_encryption_algorithm_to_key_size","Net_SSH2","Net_SSH2.html#method__encryption_algorithm_to_key_size","(string $algorithm)","Maps an encryption algorithm name to the number of",2],["Net_SSH2::_bad_algorithm_candidate","Net_SSH2","Net_SSH2.html#method__bad_algorithm_candidate","(string $algorithm)","Tests whether or not proposed algorithm has a potential",2],["Net_SSH2::login","Net_SSH2","Net_SSH2.html#method_login","($username)","Login",2],["Net_SSH2::_login","Net_SSH2","Net_SSH2.html#method__login","($username)","Login Helper",2],["Net_SSH2::_login_helper","Net_SSH2","Net_SSH2.html#method__login_helper","(string $username, string $password = null)","Login Helper",2],["Net_SSH2::_keyboard_interactive_login","Net_SSH2","Net_SSH2.html#method__keyboard_interactive_login","(string $username, string $password)","Login via keyboard-interactive authentication",2],["Net_SSH2::_keyboard_interactive_process","Net_SSH2","Net_SSH2.html#method__keyboard_interactive_process","()","Handle the keyboard-interactive requests \/ responses.",2],["Net_SSH2::_ssh_agent_login","Net_SSH2","Net_SSH2.html#method__ssh_agent_login","(string $username, <a href=\"System_SSH_Agent.html\"><abbr title=\"System_SSH_Agent\">System_SSH_Agent<\/abbr><\/a> $agent)","Login with an ssh-agent provided key",2],["Net_SSH2::_privatekey_login","Net_SSH2","Net_SSH2.html#method__privatekey_login","($username, $privatekey)","Login with an RSA private key",2],["Net_SSH2::setTimeout","Net_SSH2","Net_SSH2.html#method_setTimeout","(mixed $timeout)","Set Timeout",2],["Net_SSH2::getStdError","Net_SSH2","Net_SSH2.html#method_getStdError","()","Get the output from stdError",2],["Net_SSH2::exec","Net_SSH2","Net_SSH2.html#method_exec","(string $command, <abbr title=\"Callback\">Callback<\/abbr> $callback = null)","Execute Command",2],["Net_SSH2::_initShell","Net_SSH2","Net_SSH2.html#method__initShell","()","Creates an interactive shell",2],["Net_SSH2::_get_interactive_channel","Net_SSH2","Net_SSH2.html#method__get_interactive_channel","()","Return the channel to be used with read() \/ write()",2],["Net_SSH2::_get_open_channel","Net_SSH2","Net_SSH2.html#method__get_open_channel","()","Return an available open channel",2],["Net_SSH2::read","Net_SSH2","Net_SSH2.html#method_read","(string $expect = &#039;&#039;, int $mode = NET_SSH2_READ_SIMPLE)","Returns the output of an interactive shell",2],["Net_SSH2::write","Net_SSH2","Net_SSH2.html#method_write","(string $cmd)","Inputs a command into an interactive shell.",2],["Net_SSH2::startSubsystem","Net_SSH2","Net_SSH2.html#method_startSubsystem","(string $subsystem)","Start a subsystem.",2],["Net_SSH2::stopSubsystem","Net_SSH2","Net_SSH2.html#method_stopSubsystem","()","Stops a subsystem.",2],["Net_SSH2::reset","Net_SSH2","Net_SSH2.html#method_reset","()","Closes a channel",2],["Net_SSH2::isTimeout","Net_SSH2","Net_SSH2.html#method_isTimeout","()","Is timeout?",2],["Net_SSH2::disconnect","Net_SSH2","Net_SSH2.html#method_disconnect","()","Disconnect",2],["Net_SSH2::__destruct","Net_SSH2","Net_SSH2.html#method___destruct","()","Destructor.",2],["Net_SSH2::isConnected","Net_SSH2","Net_SSH2.html#method_isConnected","()","Is the connection still active?",2],["Net_SSH2::isAuthenticated","Net_SSH2","Net_SSH2.html#method_isAuthenticated","()","Have you successfully been logged in?",2],["Net_SSH2::ping","Net_SSH2","Net_SSH2.html#method_ping","()","Pings a server connection, or tries to reconnect if",2],["Net_SSH2::_reconnect","Net_SSH2","Net_SSH2.html#method__reconnect","()","In situ reconnect method",2],["Net_SSH2::_reset_connection","Net_SSH2","Net_SSH2.html#method__reset_connection","(int $reason)","Resets a connection for re-use",2],["Net_SSH2::_get_binary_packet","Net_SSH2","Net_SSH2.html#method__get_binary_packet","($skip_channel_filter = false)","Gets Binary Packets",2],["Net_SSH2::_filter","Net_SSH2","Net_SSH2.html#method__filter","($payload, $skip_channel_filter)","Filter Binary Packets",2],["Net_SSH2::enableQuietMode","Net_SSH2","Net_SSH2.html#method_enableQuietMode","()","Enable Quiet Mode",2],["Net_SSH2::disableQuietMode","Net_SSH2","Net_SSH2.html#method_disableQuietMode","()","Disable Quiet Mode",2],["Net_SSH2::isQuietModeEnabled","Net_SSH2","Net_SSH2.html#method_isQuietModeEnabled","()","Returns whether Quiet Mode is enabled or not",2],["Net_SSH2::enablePTY","Net_SSH2","Net_SSH2.html#method_enablePTY","()","Enable request-pty when using exec()",2],["Net_SSH2::disablePTY","Net_SSH2","Net_SSH2.html#method_disablePTY","()","Disable request-pty when using exec()",2],["Net_SSH2::isPTYEnabled","Net_SSH2","Net_SSH2.html#method_isPTYEnabled","()","Returns whether request-pty is enabled or not",2],["Net_SSH2::_get_channel_packet","Net_SSH2","Net_SSH2.html#method__get_channel_packet","($client_channel, $skip_extended = false)","Gets channel data",2],["Net_SSH2::_send_binary_packet","Net_SSH2","Net_SSH2.html#method__send_binary_packet","(string $data, string $logged = null)","Sends Binary Packets",2],["Net_SSH2::_append_log","Net_SSH2","Net_SSH2.html#method__append_log","($message_number, $message)","Logs data packets",2],["Net_SSH2::_send_channel_packet","Net_SSH2","Net_SSH2.html#method__send_channel_packet","(int $client_channel, string $data)","Sends channel data",2],["Net_SSH2::_close_channel","Net_SSH2","Net_SSH2.html#method__close_channel","(int $client_channel, bool $want_reply = false)","Closes and flushes a channel",2],["Net_SSH2::_disconnect","Net_SSH2","Net_SSH2.html#method__disconnect","(int $reason)","Disconnect",2],["Net_SSH2::_string_shift","Net_SSH2","Net_SSH2.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["Net_SSH2::_define_array","Net_SSH2","Net_SSH2.html#method__define_array","()","Define Array",2],["Net_SSH2::getLog","Net_SSH2","Net_SSH2.html#method_getLog","()","Returns a log of the packets that have been sent and",2],["Net_SSH2::_format_log","Net_SSH2","Net_SSH2.html#method__format_log","(array $message_log, array $message_number_log)","Formats a log for printing",2],["Net_SSH2::_format_log_helper","Net_SSH2","Net_SSH2.html#method__format_log_helper","(array $matches)","Helper function for _format_log",2],["Net_SSH2::_on_channel_open","Net_SSH2","Net_SSH2.html#method__on_channel_open","()","Helper function for agent->_on_channel_open()",2],["Net_SSH2::_array_intersect_first","Net_SSH2","Net_SSH2.html#method__array_intersect_first","(array $array1, array $array2)","Returns the first value of the intersection of two",2],["Net_SSH2::getErrors","Net_SSH2","Net_SSH2.html#method_getErrors","()","Returns all errors",2],["Net_SSH2::getLastError","Net_SSH2","Net_SSH2.html#method_getLastError","()","Returns the last error",2],["Net_SSH2::getServerIdentification","Net_SSH2","Net_SSH2.html#method_getServerIdentification","()","Return the server identification.",2],["Net_SSH2::getKexAlgorithms","Net_SSH2","Net_SSH2.html#method_getKexAlgorithms","()","Return a list of the key exchange algorithms the server",2],["Net_SSH2::getServerHostKeyAlgorithms","Net_SSH2","Net_SSH2.html#method_getServerHostKeyAlgorithms","()","Return a list of the host key (public key) algorithms",2],["Net_SSH2::getEncryptionAlgorithmsClient2Server","Net_SSH2","Net_SSH2.html#method_getEncryptionAlgorithmsClient2Server","()","Return a list of the (symmetric key) encryption algorithms",2],["Net_SSH2::getEncryptionAlgorithmsServer2Client","Net_SSH2","Net_SSH2.html#method_getEncryptionAlgorithmsServer2Client","()","Return a list of the (symmetric key) encryption algorithms",2],["Net_SSH2::getMACAlgorithmsClient2Server","Net_SSH2","Net_SSH2.html#method_getMACAlgorithmsClient2Server","()","Return a list of the MAC algorithms the server supports,",2],["Net_SSH2::getMACAlgorithmsServer2Client","Net_SSH2","Net_SSH2.html#method_getMACAlgorithmsServer2Client","()","Return a list of the MAC algorithms the server supports,",2],["Net_SSH2::getCompressionAlgorithmsClient2Server","Net_SSH2","Net_SSH2.html#method_getCompressionAlgorithmsClient2Server","()","Return a list of the compression algorithms the server",2],["Net_SSH2::getCompressionAlgorithmsServer2Client","Net_SSH2","Net_SSH2.html#method_getCompressionAlgorithmsServer2Client","()","Return a list of the compression algorithms the server",2],["Net_SSH2::getLanguagesServer2Client","Net_SSH2","Net_SSH2.html#method_getLanguagesServer2Client","()","Return a list of the languages the server supports,",2],["Net_SSH2::getLanguagesClient2Server","Net_SSH2","Net_SSH2.html#method_getLanguagesClient2Server","()","Return a list of the languages the server supports,",2],["Net_SSH2::getBannerMessage","Net_SSH2","Net_SSH2.html#method_getBannerMessage","()","Returns the banner message.",2],["Net_SSH2::getServerPublicHostKey","Net_SSH2","Net_SSH2.html#method_getServerPublicHostKey","()","Returns the server public host key.",2],["Net_SSH2::getExitStatus","Net_SSH2","Net_SSH2.html#method_getExitStatus","()","Returns the exit status of an SSH command or false.",2],["Net_SSH2::getWindowColumns","Net_SSH2","Net_SSH2.html#method_getWindowColumns","()","Returns the number of columns for the terminal window",2],["Net_SSH2::getWindowRows","Net_SSH2","Net_SSH2.html#method_getWindowRows","()","Returns the number of rows for the terminal window",2],["Net_SSH2::setWindowColumns","Net_SSH2","Net_SSH2.html#method_setWindowColumns","(int $value)","Sets the number of columns for the terminal window",2],["Net_SSH2::setWindowRows","Net_SSH2","Net_SSH2.html#method_setWindowRows","(int $value)","Sets the number of rows for the terminal window size.",2],["Net_SSH2::setWindowSize","Net_SSH2","Net_SSH2.html#method_setWindowSize","(int $columns = 80, int $rows = 24)","Sets the number of columns and rows for the terminal",2],["PhpseclibFunctionalTestCase::setUpBeforeClass","PhpseclibFunctionalTestCase","PhpseclibFunctionalTestCase.html#method_setUpBeforeClass","()","",2],["PhpseclibTestCase::tearDown","PhpseclibTestCase","PhpseclibTestCase.html#method_tearDown","()","",2],["System_SSH_Agent::__construct","System_SSH_Agent","System_SSH_Agent.html#method___construct","($address = null)","Default Constructor",2],["System_SSH_Agent::System_SSH_Agent","System_SSH_Agent","System_SSH_Agent.html#method_System_SSH_Agent","($address = null)","PHP4 compatible Default Constructor.",2],["System_SSH_Agent::requestIdentities","System_SSH_Agent","System_SSH_Agent.html#method_requestIdentities","()","Request Identities",2],["System_SSH_Agent::startSSHForwarding","System_SSH_Agent","System_SSH_Agent.html#method_startSSHForwarding","(<a href=\"Net_SSH2.html\"><abbr title=\"Net_SSH2\">Net_SSH2<\/abbr><\/a> $ssh)","Signal that agent forwarding should be requested when",2],["System_SSH_Agent::_request_forwarding","System_SSH_Agent","System_SSH_Agent.html#method__request_forwarding","(<a href=\"Net_SSH2.html\"><abbr title=\"Net_SSH2\">Net_SSH2<\/abbr><\/a> $ssh)","Request agent forwarding of remote server",2],["System_SSH_Agent::_on_channel_open","System_SSH_Agent","System_SSH_Agent.html#method__on_channel_open","(<a href=\"Net_SSH2.html\"><abbr title=\"Net_SSH2\">Net_SSH2<\/abbr><\/a> $ssh)","On successful channel open",2],["System_SSH_Agent::_forward_data","System_SSH_Agent","System_SSH_Agent.html#method__forward_data","(string $data)","Forward data to SSH Agent and return data reply",2],["System_SSH_Agent_Identity::__construct","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method___construct","(resource $fsock)","Default Constructor.",2],["System_SSH_Agent_Identity::System_SSH_Agent_Identity","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method_System_SSH_Agent_Identity","(resource $fsock)","PHP4 compatible Default Constructor.",2],["System_SSH_Agent_Identity::setPublicKey","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method_setPublicKey","(<a href=\"Crypt_RSA.html\"><abbr title=\"Crypt_RSA\">Crypt_RSA<\/abbr><\/a> $key)","Set Public Key",2],["System_SSH_Agent_Identity::setPublicKeyBlob","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method_setPublicKeyBlob","(string $key_blob)","Set Public Key",2],["System_SSH_Agent_Identity::getPublicKey","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method_getPublicKey","(int $format = null)","Get Public Key",2],["System_SSH_Agent_Identity::setSignatureMode","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method_setSignatureMode","(int $mode)","Set Signature Mode",2],["System_SSH_Agent_Identity::setHash","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method_setHash","(string $hash)","Set Hash",2],["System_SSH_Agent_Identity::sign","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method_sign","(string $message)","Create a signature",2],["System_SSH_Agent_Identity::_string_shift","System_SSH_Agent_Identity","System_SSH_Agent_Identity.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["Unit_Crypt_AES_TestCase::continuousBufferCombos","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_continuousBufferCombos","()","Produces all combinations of test values.",2],["Unit_Crypt_AES_TestCase::testEncryptDecryptWithContinuousBuffer","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testEncryptDecryptWithContinuousBuffer","($mode, $plaintext, $iv, $key)","",2],["Unit_Crypt_AES_TestCase::testKeyPaddingRijndael","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testKeyPaddingRijndael","()","",2],["Unit_Crypt_AES_TestCase::testKeyPaddingAES","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testKeyPaddingAES","()","",2],["Unit_Crypt_AES_TestCase::continuousBufferBatteryCombos","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_continuousBufferBatteryCombos","()","Produces all combinations of test values.",2],["Unit_Crypt_AES_TestCase::testContinuousBufferBattery","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testContinuousBufferBattery","($op, $mode, $test)","",2],["Unit_Crypt_AES_TestCase::testNonContinuousBufferBattery","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testNonContinuousBufferBattery","($op, $mode, $test)","Pretty much the same as testContinuousBufferBattery",2],["Unit_Crypt_AES_TestCase::testGFSBox128","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testGFSBox128","()","",2],["Unit_Crypt_AES_TestCase::testGFSBox192","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testGFSBox192","()","",2],["Unit_Crypt_AES_TestCase::testGFSBox256","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testGFSBox256","()","",2],["Unit_Crypt_AES_TestCase::testGetKeyLengthDefault","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testGetKeyLengthDefault","()","",2],["Unit_Crypt_AES_TestCase::testGetKeyLengthWith192BitKey","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testGetKeyLengthWith192BitKey","()","",2],["Unit_Crypt_AES_TestCase::testSetKeyLengthWithLargerKey","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testSetKeyLengthWithLargerKey","()","",2],["Unit_Crypt_AES_TestCase::testSetKeyLengthWithSmallerKey","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testSetKeyLengthWithSmallerKey","()","",2],["Unit_Crypt_AES_TestCase::testContinuousBuffer","Unit_Crypt_AES_TestCase","Unit_Crypt_AES_TestCase.html#method_testContinuousBuffer","()","",2],["Unit_Crypt_BlowfishTest::engineVectors","Unit_Crypt_BlowfishTest","Unit_Crypt_BlowfishTest.html#method_engineVectors","()","",2],["Unit_Crypt_BlowfishTest::testVectors","Unit_Crypt_BlowfishTest","Unit_Crypt_BlowfishTest.html#method_testVectors","($engine, $engineName, $key, $plaintext, $expected)","",2],["Unit_Crypt_BlowfishTest::testKeySizes","Unit_Crypt_BlowfishTest","Unit_Crypt_BlowfishTest.html#method_testKeySizes","()","",2],["Unit_Crypt_DESTest::testEncryptPadding","Unit_Crypt_DESTest","Unit_Crypt_DESTest.html#method_testEncryptPadding","()","",2],["Unit_Crypt_DESTest::testDecryptPadding","Unit_Crypt_DESTest","Unit_Crypt_DESTest.html#method_testDecryptPadding","()","",2],["Unit_Crypt_Hash_MD5Test::getInstance","Unit_Crypt_Hash_MD5Test","Unit_Crypt_Hash_MD5Test.html#method_getInstance","()","",2],["Unit_Crypt_Hash_MD5Test::testHash","Unit_Crypt_Hash_MD5Test","Unit_Crypt_Hash_MD5Test.html#method_testHash","($message, $result)","",2],["Unit_Crypt_Hash_MD5Test::hashData","Unit_Crypt_Hash_MD5Test","Unit_Crypt_Hash_MD5Test.html#method_hashData","()","",2],["Unit_Crypt_Hash_MD5Test::testHMAC","Unit_Crypt_Hash_MD5Test","Unit_Crypt_Hash_MD5Test.html#method_testHMAC","($key, $message, $result)","",2],["Unit_Crypt_Hash_MD5Test::hmacData","Unit_Crypt_Hash_MD5Test","Unit_Crypt_Hash_MD5Test.html#method_hmacData","()","",2],["Unit_Crypt_Hash_SHA256Test::getInstance","Unit_Crypt_Hash_SHA256Test","Unit_Crypt_Hash_SHA256Test.html#method_getInstance","()","",2],["Unit_Crypt_Hash_SHA256Test::testHash","Unit_Crypt_Hash_SHA256Test","Unit_Crypt_Hash_SHA256Test.html#method_testHash","($message, $result)","",2],["Unit_Crypt_Hash_SHA256Test::hashData","Unit_Crypt_Hash_SHA256Test","Unit_Crypt_Hash_SHA256Test.html#method_hashData","()","",2],["Unit_Crypt_Hash_SHA256Test::testHMAC","Unit_Crypt_Hash_SHA256Test","Unit_Crypt_Hash_SHA256Test.html#method_testHMAC","($key, $message, $result)","",2],["Unit_Crypt_Hash_SHA256Test::hmacData","Unit_Crypt_Hash_SHA256Test","Unit_Crypt_Hash_SHA256Test.html#method_hmacData","()","",2],["Unit_Crypt_Hash_SHA256_96Test::getInstance","Unit_Crypt_Hash_SHA256_96Test","Unit_Crypt_Hash_SHA256_96Test.html#method_getInstance","()","",2],["Unit_Crypt_Hash_SHA256_96Test::testHash","Unit_Crypt_Hash_SHA256_96Test","Unit_Crypt_Hash_SHA256_96Test.html#method_testHash","($message, $longResult)","",2],["Unit_Crypt_Hash_SHA256_96Test::testHMAC","Unit_Crypt_Hash_SHA256_96Test","Unit_Crypt_Hash_SHA256_96Test.html#method_testHMAC","($key, $message, $longResult)","",2],["Unit_Crypt_Hash_SHA512Test::getInstance","Unit_Crypt_Hash_SHA512Test","Unit_Crypt_Hash_SHA512Test.html#method_getInstance","()","",2],["Unit_Crypt_Hash_SHA512Test::testHash","Unit_Crypt_Hash_SHA512Test","Unit_Crypt_Hash_SHA512Test.html#method_testHash","($message, $result)","",2],["Unit_Crypt_Hash_SHA512Test::hashData","Unit_Crypt_Hash_SHA512Test","Unit_Crypt_Hash_SHA512Test.html#method_hashData","()","",2],["Unit_Crypt_Hash_SHA512Test::testHMAC","Unit_Crypt_Hash_SHA512Test","Unit_Crypt_Hash_SHA512Test.html#method_testHMAC","($key, $message, $result)","",2],["Unit_Crypt_Hash_SHA512Test::hmacData","Unit_Crypt_Hash_SHA512Test","Unit_Crypt_Hash_SHA512Test.html#method_hmacData","()","",2],["Unit_Crypt_Hash_SHA512_96Test::getInstance","Unit_Crypt_Hash_SHA512_96Test","Unit_Crypt_Hash_SHA512_96Test.html#method_getInstance","()","",2],["Unit_Crypt_Hash_SHA512_96Test::testHash","Unit_Crypt_Hash_SHA512_96Test","Unit_Crypt_Hash_SHA512_96Test.html#method_testHash","($message, $longResult)","",2],["Unit_Crypt_Hash_SHA512_96Test::testHMAC","Unit_Crypt_Hash_SHA512_96Test","Unit_Crypt_Hash_SHA512_96Test.html#method_testHMAC","($key, $message, $longResult)","",2],["Unit_Crypt_Hash_TestCase::setUpBeforeClass","Unit_Crypt_Hash_TestCase","Unit_Crypt_Hash_TestCase.html#method_setUpBeforeClass","()","",2],["Unit_Crypt_Hash_TestCase::setUp","Unit_Crypt_Hash_TestCase","Unit_Crypt_Hash_TestCase.html#method_setUp","()","",2],["Unit_Crypt_RC2Test::engineVectors","Unit_Crypt_RC2Test","Unit_Crypt_RC2Test.html#method_engineVectors","()","",2],["Unit_Crypt_RC2Test::testEncryptPadding","Unit_Crypt_RC2Test","Unit_Crypt_RC2Test.html#method_testEncryptPadding","()","",2],["Unit_Crypt_RC2Test::testVectors","Unit_Crypt_RC2Test","Unit_Crypt_RC2Test.html#method_testVectors","($engine, $engineName, $key, $keyLen, $plaintext, $ciphertext)","",2],["Unit_Crypt_RC4Test::engineVectors","Unit_Crypt_RC4Test","Unit_Crypt_RC4Test.html#method_engineVectors","()","",2],["Unit_Crypt_RC4Test::testVectors","Unit_Crypt_RC4Test","Unit_Crypt_RC4Test.html#method_testVectors","($engine, $engineName, $key, $offset, $expected)","",2],["Unit_Crypt_RC4Test::testKeySizes","Unit_Crypt_RC4Test","Unit_Crypt_RC4Test.html#method_testKeySizes","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testBadKey","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testBadKey","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testPKCS1Key","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testPKCS1Key","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testPKCS1SpacesKey","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testPKCS1SpacesKey","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testPKCS1NoHeaderKey","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testPKCS1NoHeaderKey","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testPKCS1NoWhitespaceNoHeaderKey","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testPKCS1NoWhitespaceNoHeaderKey","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testRawPKCS1Key","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testRawPKCS1Key","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testLoadPKCS8PrivateKey","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testLoadPKCS8PrivateKey","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testSavePKCS8PrivateKey","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testSavePKCS8PrivateKey","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testPubKey1","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testPubKey1","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testPubKey2","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testPubKey2","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testSSHPubKey","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testSSHPubKey","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testSSHPubKeyFingerprint","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testSSHPubKeyFingerprint","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testSetPrivate","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testSetPrivate","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testUnsignedXML","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testUnsignedXML","()","make phpseclib generated XML keys be unsigned.",2],["Unit_Crypt_RSA_LoadKeyTest::testSignedPKCS1","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testSignedPKCS1","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testPKCS8Only","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testPKCS8Only","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testSetLoad","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testSetLoad","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testZeroComponents","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testZeroComponents","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testGoodBad","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testGoodBad","()","",2],["Unit_Crypt_RSA_LoadKeyTest::testOpenSSHPrivate","Unit_Crypt_RSA_LoadKeyTest","Unit_Crypt_RSA_LoadKeyTest.html#method_testOpenSSHPrivate","()","",2],["Unit_Crypt_RSA_ModeTest::testEncryptionModeNone","Unit_Crypt_RSA_ModeTest","Unit_Crypt_RSA_ModeTest.html#method_testEncryptionModeNone","()","",2],["Unit_Crypt_RSA_ModeTest::testPSSSigs","Unit_Crypt_RSA_ModeTest","Unit_Crypt_RSA_ModeTest.html#method_testPSSSigs","()","",2],["Unit_Crypt_RSA_ModeTest::testZeroLengthSalt","Unit_Crypt_RSA_ModeTest","Unit_Crypt_RSA_ModeTest.html#method_testZeroLengthSalt","()","",2],["Unit_Crypt_RandomTest::stringLengthData","Unit_Crypt_RandomTest","Unit_Crypt_RandomTest.html#method_stringLengthData","()","",2],["Unit_Crypt_RandomTest::testStringLength","Unit_Crypt_RandomTest","Unit_Crypt_RandomTest.html#method_testStringLength","($length)","",2],["Unit_Crypt_RandomTest::testStringUniqueness","Unit_Crypt_RandomTest","Unit_Crypt_RandomTest.html#method_testStringUniqueness","()","Takes a set of random values of length 128 bits and",2],["Unit_Crypt_TripleDESTest::engineVectors","Unit_Crypt_TripleDESTest","Unit_Crypt_TripleDESTest.html#method_engineVectors","()","",2],["Unit_Crypt_TripleDESTest::testVectors","Unit_Crypt_TripleDESTest","Unit_Crypt_TripleDESTest.html#method_testVectors","($engine, $engineName, $key, $plaintext, $expected)","",2],["Unit_Crypt_TripleDESTest::engineIVVectors","Unit_Crypt_TripleDESTest","Unit_Crypt_TripleDESTest.html#method_engineIVVectors","()","",2],["Unit_Crypt_TripleDESTest::testVectorsWithIV","Unit_Crypt_TripleDESTest","Unit_Crypt_TripleDESTest.html#method_testVectorsWithIV","($engine, $engineName, $key, $iv, $plaintext, $expected)","",2],["Unit_Crypt_TripleDESTest::testInnerChaining","Unit_Crypt_TripleDESTest","Unit_Crypt_TripleDESTest.html#method_testInnerChaining","()","",2],["Unit_Crypt_TripleDESTest::testCorrectSelfUseInLambda","Unit_Crypt_TripleDESTest","Unit_Crypt_TripleDESTest.html#method_testCorrectSelfUseInLambda","()","",2],["Unit_Crypt_TwofishTest::testVectors","Unit_Crypt_TwofishTest","Unit_Crypt_TwofishTest.html#method_testVectors","()","",2],["Unit_File_ANSITest::testCase1","Unit_File_ANSITest","Unit_File_ANSITest.html#method_testCase1","()","",2],["Unit_File_ANSITest::testLineOverflow","Unit_File_ANSITest","Unit_File_ANSITest.html#method_testLineOverflow","()","",2],["Unit_File_ASN1Test::testAnyString","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testAnyString","()","on older versions of \\phpseclib\\File\\ASN1 this would",2],["Unit_File_ASN1Test::testIncorrectString","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testIncorrectString","()","on older versions of \\phpseclib\\File\\ASN1 this would",2],["Unit_File_ASN1Test::testIndefiniteLength","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testIndefiniteLength","()","older versions of ASN1 didn't handle indefinite length",2],["Unit_File_ASN1Test::testDefiniteLength","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testDefiniteLength","()","",2],["Unit_File_ASN1Test::testContextSpecificNonConstructed","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testContextSpecificNonConstructed","()","",2],["Unit_File_ASN1Test::testEmptyContextTag","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testEmptyContextTag","()","",2],["Unit_File_ASN1Test::testInfiniteLoop","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testInfiniteLoop","()","",2],["Unit_File_ASN1Test::testApplicationTag","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testApplicationTag","()","",2],["Unit_File_ASN1Test::testInvalidCertificate","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testInvalidCertificate","()","",2],["Unit_File_ASN1Test::testOIDs","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testOIDs","()","",2],["Unit_File_ASN1Test::testExplicitImplicitDate","Unit_File_ASN1Test","Unit_File_ASN1Test.html#method_testExplicitImplicitDate","()","",2],["Unit_File_X509_CSRTest::testLoadCSR","Unit_File_X509_CSRTest","Unit_File_X509_CSRTest.html#method_testLoadCSR","()","",2],["Unit_File_X509_CSRTest::testCSRWithAttributes","Unit_File_X509_CSRTest","Unit_File_X509_CSRTest.html#method_testCSRWithAttributes","()","",2],["Unit_File_X509_CSRTest::testCSRDER","Unit_File_X509_CSRTest","Unit_File_X509_CSRTest.html#method_testCSRDER","()","",2],["Unit_File_X509_CSRTest::testNewCSR","Unit_File_X509_CSRTest","Unit_File_X509_CSRTest.html#method_testNewCSR","()","",2],["Unit_File_X509_SPKACTest::testLoadSPKAC","Unit_File_X509_SPKACTest","Unit_File_X509_SPKACTest.html#method_testLoadSPKAC","()","",2],["Unit_File_X509_SPKACTest::testSaveSPKAC","Unit_File_X509_SPKACTest","Unit_File_X509_SPKACTest.html#method_testSaveSPKAC","()","",2],["Unit_File_X509_SPKACTest::testBadSignatureSPKAC","Unit_File_X509_SPKACTest","Unit_File_X509_SPKACTest.html#method_testBadSignatureSPKAC","()","",2],["Unit_File_X509_X509Test::testExtensionMapping","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testExtensionMapping","()","",2],["Unit_File_X509_X509Test::testLoadUnsupportedExtension","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testLoadUnsupportedExtension","()","",2],["Unit_File_X509_X509Test::testSaveUnsupportedExtension","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testSaveUnsupportedExtension","()","",2],["Unit_File_X509_X509Test::testSaveNullRSAParam","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testSaveNullRSAParam","()","",2],["Unit_File_X509_X509Test::testGetOID","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testGetOID","()","",2],["Unit_File_X509_X509Test::testIPAddressSubjectAltNamesDecoding","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testIPAddressSubjectAltNamesDecoding","()","",2],["Unit_File_X509_X509Test::testPostalAddress","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testPostalAddress","()","",2],["Unit_File_X509_X509Test::testStrictComparison","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testStrictComparison","()","",2],["Unit_File_X509_X509Test::testMultipleDomainNames","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testMultipleDomainNames","()","",2],["Unit_File_X509_X509Test::testUtcTimeWithoutSeconds","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testUtcTimeWithoutSeconds","()","",2],["Unit_File_X509_X509Test::testValidateURL","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testValidateURL","()","",2],["Unit_File_X509_X509Test::testValidateSignatureWithoutKeyIdentifier","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testValidateSignatureWithoutKeyIdentifier","()","",2],["Unit_File_X509_X509Test::testValidateSignatureSelfSignedWithoutKeyIdentifier","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testValidateSignatureSelfSignedWithoutKeyIdentifier","()","",2],["Unit_File_X509_X509Test::testExtensionRemoval","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testExtensionRemoval","()","",2],["Unit_File_X509_X509Test::testAuthorityInfoAccess","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testAuthorityInfoAccess","()","",2],["Unit_File_X509_X509Test::testValidateDate","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testValidateDate","()","",2],["Unit_File_X509_X509Test::testLongTagOnBadCert","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testLongTagOnBadCert","()","",2],["Unit_File_X509_X509Test::testNameConstraintIP","Unit_File_X509_X509Test","Unit_File_X509_X509Test.html#method_testNameConstraintIP","()","",2],["Unit_Math_BigInteger_BCMathTest::setUpBeforeClass","Unit_Math_BigInteger_BCMathTest","Unit_Math_BigInteger_BCMathTest.html#method_setUpBeforeClass","()","",2],["Unit_Math_BigInteger_GMPTest::setUpBeforeClass","Unit_Math_BigInteger_GMPTest","Unit_Math_BigInteger_GMPTest.html#method_setUpBeforeClass","()","",2],["Unit_Math_BigInteger_InternalOpenSSLTest::setUpBeforeClass","Unit_Math_BigInteger_InternalOpenSSLTest","Unit_Math_BigInteger_InternalOpenSSLTest.html#method_setUpBeforeClass","()","",2],["Unit_Math_BigInteger_InternalTest::setUpBeforeClass","Unit_Math_BigInteger_InternalTest","Unit_Math_BigInteger_InternalTest.html#method_setUpBeforeClass","()","",2],["Unit_Math_BigInteger_InternalTest::testInternalRepresentation","Unit_Math_BigInteger_InternalTest","Unit_Math_BigInteger_InternalTest.html#method_testInternalRepresentation","()","",2],["Unit_Math_BigInteger_TestCase::setUpBeforeClass","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_setUpBeforeClass","()","",2],["Unit_Math_BigInteger_TestCase::getInstance","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_getInstance","($x, $base = 10)","",2],["Unit_Math_BigInteger_TestCase::testConstructorBase2","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testConstructorBase2","()","",2],["Unit_Math_BigInteger_TestCase::testConstructorBase10","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testConstructorBase10","()","",2],["Unit_Math_BigInteger_TestCase::testConstructorBase16","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testConstructorBase16","()","",2],["Unit_Math_BigInteger_TestCase::testToBytes","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testToBytes","()","",2],["Unit_Math_BigInteger_TestCase::testToBytesTwosCompliment","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testToBytesTwosCompliment","()","",2],["Unit_Math_BigInteger_TestCase::testToHex","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testToHex","()","",2],["Unit_Math_BigInteger_TestCase::testToBits","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testToBits","()","",2],["Unit_Math_BigInteger_TestCase::testAdd","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testAdd","()","",2],["Unit_Math_BigInteger_TestCase::testSubtract","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testSubtract","()","",2],["Unit_Math_BigInteger_TestCase::testMultiply","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testMultiply","()","",2],["Unit_Math_BigInteger_TestCase::testDivide","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testDivide","()","",2],["Unit_Math_BigInteger_TestCase::testModPow","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testModPow","()","",2],["Unit_Math_BigInteger_TestCase::testModInverse","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testModInverse","()","",2],["Unit_Math_BigInteger_TestCase::testExtendedGCD","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testExtendedGCD","()","",2],["Unit_Math_BigInteger_TestCase::testGCD","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testGCD","()","",2],["Unit_Math_BigInteger_TestCase::testAbs","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testAbs","()","",2],["Unit_Math_BigInteger_TestCase::testEquals","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testEquals","()","",2],["Unit_Math_BigInteger_TestCase::testCompare","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testCompare","()","",2],["Unit_Math_BigInteger_TestCase::testBitwiseAND","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testBitwiseAND","()","",2],["Unit_Math_BigInteger_TestCase::testBitwiseOR","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testBitwiseOR","()","",2],["Unit_Math_BigInteger_TestCase::testBitwiseXOR","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testBitwiseXOR","()","",2],["Unit_Math_BigInteger_TestCase::testBitwiseNOT","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testBitwiseNOT","()","",2],["Unit_Math_BigInteger_TestCase::testBitwiseLeftShift","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testBitwiseLeftShift","()","",2],["Unit_Math_BigInteger_TestCase::testBitwiseRightShift","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testBitwiseRightShift","()","",2],["Unit_Math_BigInteger_TestCase::testSerializable","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testSerializable","()","",2],["Unit_Math_BigInteger_TestCase::testClone","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testClone","()","",2],["Unit_Math_BigInteger_TestCase::testRandomTwoArgument","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testRandomTwoArgument","()","",2],["Unit_Math_BigInteger_TestCase::testRandomOneArgument","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testRandomOneArgument","()","",2],["Unit_Math_BigInteger_TestCase::testDiffieHellmanKeyAgreement","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testDiffieHellmanKeyAgreement","()","",2],["Unit_Math_BigInteger_TestCase::testDebugInfo","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testDebugInfo","()","",2],["Unit_Math_BigInteger_TestCase::testSlidingWindow","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testSlidingWindow","()","",2],["Unit_Math_BigInteger_TestCase::test48ToHex","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_test48ToHex","()","",2],["Unit_Math_BigInteger_TestCase::testZeroBase10","Unit_Math_BigInteger_TestCase","Unit_Math_BigInteger_TestCase.html#method_testZeroBase10","()","",2],["Unit_Net_SFTPStreamTest::testRegisterWithoutArgument","Unit_Net_SFTPStreamTest","Unit_Net_SFTPStreamTest.html#method_testRegisterWithoutArgument","()","",2],["Unit_Net_SFTPStreamTest::testRegisterWithArgument","Unit_Net_SFTPStreamTest","Unit_Net_SFTPStreamTest.html#method_testRegisterWithArgument","()","",2],["Unit_Net_SSH1Test::formatLogDataProvider","Unit_Net_SSH1Test","Unit_Net_SSH1Test.html#method_formatLogDataProvider","()","",2],["Unit_Net_SSH1Test::testFormatLog","Unit_Net_SSH1Test","Unit_Net_SSH1Test.html#method_testFormatLog","(array $message_log, array $message_number_log, $expected)","",2],["Unit_Net_SSH2Test::formatLogDataProvider","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_formatLogDataProvider","()","",2],["Unit_Net_SSH2Test::testFormatLog","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_testFormatLog","(array $message_log, array $message_number_log, $expected)","",2],["Unit_Net_SSH2Test::testGenerateIdentifier","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_testGenerateIdentifier","()","",2],["Unit_Net_SSH2Test::testGetExitStatusIfNotConnected","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_testGetExitStatusIfNotConnected","()","",2],["Unit_Net_SSH2Test::testPTYIDefaultValue","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_testPTYIDefaultValue","()","",2],["Unit_Net_SSH2Test::testEnablePTY","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_testEnablePTY","()","",2],["Unit_Net_SSH2Test::testQuietModeDefaultValue","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_testQuietModeDefaultValue","()","",2],["Unit_Net_SSH2Test::testEnableQuietMode","Unit_Net_SSH2Test","Unit_Net_SSH2Test.html#method_testEnableQuietMode","()","",2],["AES::setBlockLength","phpseclib\\Crypt\\AES","phpseclib\/Crypt\/AES.html#method_setBlockLength","(int $length)","Dummy function",2],["AES::setKeyLength","phpseclib\\Crypt\\AES","phpseclib\/Crypt\/AES.html#method_setKeyLength","(int $length)","Sets the key length",2],["AES::setKey","phpseclib\\Crypt\\AES","phpseclib\/Crypt\/AES.html#method_setKey","(string $key)","Sets the key.",2],["Base::__construct","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method___construct","(int $mode = self::MODE_CBC)","Default Constructor.",2],["Base::setIV","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_setIV","(string $iv)","Sets the initialization vector.",2],["Base::setKeyLength","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Base::getKeyLength","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_getKeyLength","()","Returns the current key length in bits",2],["Base::getBlockLength","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_getBlockLength","()","Returns the current block length in bits",2],["Base::setKey","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_setKey","(string $key)","Sets the key.",2],["Base::setPassword","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_setPassword","(string $password, string $method = &#039;pbkdf2&#039;)","Sets the password.",2],["Base::encrypt","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["Base::decrypt","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["Base::_openssl_ctr_process","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__openssl_ctr_process","(string $plaintext, string $encryptIV, array $buffer)","OpenSSL CTR Processor",2],["Base::_openssl_ofb_process","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__openssl_ofb_process","(string $plaintext, string $encryptIV, array $buffer)","OpenSSL OFB Processor",2],["Base::_openssl_translate_mode","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__openssl_translate_mode","()","phpseclib  OpenSSL Mode Mapper",2],["Base::enablePadding","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_enablePadding","()","Pad \"packets\".",2],["Base::disablePadding","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_disablePadding","()","Do not pad packets.",2],["Base::enableContinuousBuffer","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_enableContinuousBuffer","()","Treat consecutive \"packets\" as if they are a continuous",2],["Base::disableContinuousBuffer","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_disableContinuousBuffer","()","Treat consecutive packets as if they are a discontinuous",2],["Base::isValidEngine","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Base::setPreferredEngine","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_setPreferredEngine","(int $engine)","Sets the preferred crypt engine",2],["Base::getEngine","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_getEngine","()","Returns the engine currently being utilized",2],["Base::_setEngine","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__setEngine","()","Sets the engine as appropriate",2],["Base::_setup","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__setup","()","Setup the self::ENGINE_INTERNAL $engine",2],["Base::_setupMcrypt","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__setupMcrypt","()","Setup the self::ENGINE_MCRYPT $engine",2],["Base::_pad","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__pad","(string $text)","Pads a string",2],["Base::_unpad","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__unpad","(string $text)","Unpads a string.",2],["Base::_clearBuffers","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__clearBuffers","()","Clears internal buffers",2],["Base::_string_shift","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["Base::_string_pop","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__string_pop","(string $string, int $index = 1)","String Pop",2],["Base::_increment_str","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__increment_str","(string $var)","Increment the current string",2],["Base::_setupInlineCrypt","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["Base::_createInlineCryptFunction","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__createInlineCryptFunction","(array $cipher_code)","Creates the performance-optimized function for en\/decrypt()",2],["Base::_getLambdaFunctions","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__getLambdaFunctions","()","Holds the lambda_functions table (classwide)",2],["Base::_hashInlineCryptFunction","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method__hashInlineCryptFunction","(<abbr title=\"phpseclib\\Crypt\\$bytes\">$bytes<\/abbr> $bytes)","Generates a digest from $bytes",2],["Base::safe_intval","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_safe_intval","(string $x)","Convert float to int",2],["Base::safe_intval_inline","phpseclib\\Crypt\\Base","phpseclib\/Crypt\/Base.html#method_safe_intval_inline","()","eval()'able string for in-line float to int",2],["Blowfish::setKeyLength","phpseclib\\Crypt\\Blowfish","phpseclib\/Crypt\/Blowfish.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Blowfish::isValidEngine","phpseclib\\Crypt\\Blowfish","phpseclib\/Crypt\/Blowfish.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Blowfish::_setupKey","phpseclib\\Crypt\\Blowfish","phpseclib\/Crypt\/Blowfish.html#method__setupKey","()","Setup the key (expansion)",2],["Blowfish::_encryptBlock","phpseclib\\Crypt\\Blowfish","phpseclib\/Crypt\/Blowfish.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Blowfish::_decryptBlock","phpseclib\\Crypt\\Blowfish","phpseclib\/Crypt\/Blowfish.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Blowfish::_setupInlineCrypt","phpseclib\\Crypt\\Blowfish","phpseclib\/Crypt\/Blowfish.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["DES::isValidEngine","phpseclib\\Crypt\\DES","phpseclib\/Crypt\/DES.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["DES::setKey","phpseclib\\Crypt\\DES","phpseclib\/Crypt\/DES.html#method_setKey","(string $key)","Sets the key.",2],["DES::_encryptBlock","phpseclib\\Crypt\\DES","phpseclib\/Crypt\/DES.html#method__encryptBlock","(string $in)","Encrypts a block",2],["DES::_decryptBlock","phpseclib\\Crypt\\DES","phpseclib\/Crypt\/DES.html#method__decryptBlock","(string $in)","Decrypts a block",2],["DES::_processBlock","phpseclib\\Crypt\\DES","phpseclib\/Crypt\/DES.html#method__processBlock","(string $block, int $mode)","Encrypts or decrypts a 64-bit block",2],["DES::_setupKey","phpseclib\\Crypt\\DES","phpseclib\/Crypt\/DES.html#method__setupKey","()","Creates the key schedule",2],["DES::_setupInlineCrypt","phpseclib\\Crypt\\DES","phpseclib\/Crypt\/DES.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["Hash::__construct","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method___construct","(string $hash = &#039;sha1&#039;)","Default Constructor.",2],["Hash::setKey","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method_setKey","(string $key = false)","Sets the key for HMACs",2],["Hash::_computeKey","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__computeKey","()","Pre-compute the key used by the HMAC",2],["Hash::getHash","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method_getHash","()","Gets the hash function.",2],["Hash::setHash","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method_setHash","(string $hash)","Sets the hash function.",2],["Hash::hash","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method_hash","(string $text)","Compute the HMAC.",2],["Hash::getLength","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method_getLength","()","Returns the hash length (in bytes)",2],["Hash::_md5","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__md5","(string $m)","Wrapper for MD5",2],["Hash::_sha1","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__sha1","(string $m)","Wrapper for SHA1",2],["Hash::_md2","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__md2","(string $m)","Pure-PHP implementation of MD2",2],["Hash::_sha256","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__sha256","(string $m)","Pure-PHP implementation of SHA256",2],["Hash::_sha512","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__sha512","(string $m)","Pure-PHP implementation of SHA384 and SHA512",2],["Hash::_rightRotate","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__rightRotate","(int $int, int $amt)","Right Rotate",2],["Hash::_rightShift","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__rightShift","(int $int, int $amt)","Right Shift",2],["Hash::_not","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__not","(int $int)","Not",2],["Hash::_add","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__add","()","Add",2],["Hash::_string_shift","phpseclib\\Crypt\\Hash","phpseclib\/Crypt\/Hash.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["RC2::isValidEngine","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["RC2::setKeyLength","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method_setKeyLength","(int $length)","Sets the key length.",2],["RC2::getKeyLength","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method_getKeyLength","()","Returns the current key length",2],["RC2::setKey","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method_setKey","(string $key, int $t1)","Sets the key.",2],["RC2::encrypt","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["RC2::decrypt","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["RC2::_encryptBlock","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method__encryptBlock","(string $in)","Encrypts a block",2],["RC2::_decryptBlock","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method__decryptBlock","(string $in)","Decrypts a block",2],["RC2::_setupMcrypt","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method__setupMcrypt","()","Setup the \\phpseclib\\Crypt\\Base::ENGINE_MCRYPT $engine",2],["RC2::_setupKey","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method__setupKey","()","Creates the key schedule",2],["RC2::_setupInlineCrypt","phpseclib\\Crypt\\RC2","phpseclib\/Crypt\/RC2.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["RC4::__construct","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method___construct","()","Default Constructor.",2],["RC4::isValidEngine","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["RC4::setIV","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method_setIV","(string $iv)","Dummy function.",2],["RC4::setKeyLength","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method_setKeyLength","(int $length)","Sets the key length",2],["RC4::encrypt","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["RC4::decrypt","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["RC4::_encryptBlock","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method__encryptBlock","(string $in)","Encrypts a block",2],["RC4::_decryptBlock","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method__decryptBlock","(string $in)","Decrypts a block",2],["RC4::_setupKey","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method__setupKey","()","Setup the key (expansion)",2],["RC4::_crypt","phpseclib\\Crypt\\RC4","phpseclib\/Crypt\/RC4.html#method__crypt","(string $text, int $mode)","Encrypts or decrypts a message.",2],["RSA::__construct","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method___construct","()","The constructor",2],["RSA::createKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_createKey","($bits = 1024, $timeout = false, $partial = array())","Create public \/ private key pair",2],["RSA::_convertPrivateKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__convertPrivateKey","($n, $e, $d, $primes, $exponents, $coefficients)","Convert a private key to the appropriate format.",2],["RSA::_convertPublicKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__convertPublicKey","($n, $e)","Convert a public key to the appropriate format",2],["RSA::_parseKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__parseKey","(string|array $key, int $type)","Break a public or private key down into its constituant",2],["RSA::getSize","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_getSize","()","Returns the key size",2],["RSA::_start_element_handler","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__start_element_handler","(resource $parser, string $name, array $attribs)","Start Element Handler",2],["RSA::_stop_element_handler","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__stop_element_handler","(resource $parser, string $name)","Stop Element Handler",2],["RSA::_data_handler","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__data_handler","(resource $parser, string $data)","Data Handler",2],["RSA::loadKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_loadKey","(string|<a href=\"phpseclib\/Crypt\/RSA.html\"><abbr title=\"phpseclib\\Crypt\\RSA\">RSA<\/abbr><\/a>|array $key, bool|int $type = false)","Loads a public or private key",2],["RSA::setPassword","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setPassword","(string $password = false)","Sets the password",2],["RSA::setPublicKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setPublicKey","(string $key = false, int $type = false)","Defines the public key",2],["RSA::setPrivateKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setPrivateKey","(string $key = false, int $type = false)","Defines the private key",2],["RSA::getPublicKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_getPublicKey","($type = self::PUBLIC_FORMAT_PKCS8)","Returns the public key",2],["RSA::getPublicKeyFingerprint","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_getPublicKeyFingerprint","(string $algorithm = &#039;md5&#039;)","Returns the public key's fingerprint",2],["RSA::getPrivateKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_getPrivateKey","($type = self::PUBLIC_FORMAT_PKCS1)","Returns the private key",2],["RSA::_getPrivatePublicKey","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__getPrivatePublicKey","($mode = self::PUBLIC_FORMAT_PKCS8)","Returns a minimalistic private key",2],["RSA::__toString","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method___toString","()","__toString() magic method",2],["RSA::__clone","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method___clone","()","__clone() magic method",2],["RSA::_generateMinMax","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__generateMinMax","(int $bits)","Generates the smallest and largest numbers requiring",2],["RSA::_decodeLength","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__decodeLength","(string $string)","DER-decode the length",2],["RSA::_encodeLength","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__encodeLength","(int $length)","DER-encode the length",2],["RSA::_string_shift","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["RSA::setPrivateKeyFormat","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setPrivateKeyFormat","(int $format)","Determines the private key format",2],["RSA::setPublicKeyFormat","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setPublicKeyFormat","(int $format)","Determines the public key format",2],["RSA::setHash","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setHash","(string $hash)","Determines which hashing function should be used",2],["RSA::setMGFHash","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setMGFHash","(string $hash)","Determines which hashing function should be used for",2],["RSA::setSaltLength","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setSaltLength","($sLen)","Determines the salt length",2],["RSA::_i2osp","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__i2osp","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x, int $xLen)","Integer-to-Octet-String primitive",2],["RSA::_os2ip","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__os2ip","(string $x)","Octet-String-to-Integer primitive",2],["RSA::_exponentiate","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__exponentiate","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x)","Exponentiate with or without Chinese Remainder Theorem",2],["RSA::_blind","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__blind","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x, <a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $r, int $i)","Performs RSA Blinding",2],["RSA::_equals","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__equals","(string $x, string $y)","Performs blinded RSA equality testing",2],["RSA::_rsaep","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsaep","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $m)","RSAEP",2],["RSA::_rsadp","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsadp","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $c)","RSADP",2],["RSA::_rsasp1","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsasp1","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $m)","RSASP1",2],["RSA::_rsavp1","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsavp1","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $s)","RSAVP1",2],["RSA::_mgf1","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__mgf1","($mgfSeed, $maskLen)","MGF1",2],["RSA::_rsaes_oaep_encrypt","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsaes_oaep_encrypt","(string $m, string $l = &#039;&#039;)","RSAES-OAEP-ENCRYPT",2],["RSA::_rsaes_oaep_decrypt","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsaes_oaep_decrypt","(string $c, string $l = &#039;&#039;)","RSAES-OAEP-DECRYPT",2],["RSA::_raw_encrypt","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__raw_encrypt","(string $m)","Raw Encryption \/ Decryption",2],["RSA::_rsaes_pkcs1_v1_5_encrypt","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsaes_pkcs1_v1_5_encrypt","(string $m)","RSAES-PKCS1-V1_5-ENCRYPT",2],["RSA::_rsaes_pkcs1_v1_5_decrypt","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsaes_pkcs1_v1_5_decrypt","(string $c)","RSAES-PKCS1-V1_5-DECRYPT",2],["RSA::_emsa_pss_encode","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__emsa_pss_encode","(string $m, int $emBits)","EMSA-PSS-ENCODE",2],["RSA::_emsa_pss_verify","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__emsa_pss_verify","(string $m, string $em, int $emBits)","EMSA-PSS-VERIFY",2],["RSA::_rsassa_pss_sign","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsassa_pss_sign","(string $m)","RSASSA-PSS-SIGN",2],["RSA::_rsassa_pss_verify","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsassa_pss_verify","(string $m, string $s)","RSASSA-PSS-VERIFY",2],["RSA::_emsa_pkcs1_v1_5_encode","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__emsa_pkcs1_v1_5_encode","(string $m, int $emLen)","EMSA-PKCS1-V1_5-ENCODE",2],["RSA::_rsassa_pkcs1_v1_5_sign","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsassa_pkcs1_v1_5_sign","(string $m)","RSASSA-PKCS1-V1_5-SIGN",2],["RSA::_rsassa_pkcs1_v1_5_verify","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__rsassa_pkcs1_v1_5_verify","($m, $s)","RSASSA-PKCS1-V1_5-VERIFY",2],["RSA::setEncryptionMode","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setEncryptionMode","(int $mode)","Set Encryption Mode",2],["RSA::setSignatureMode","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setSignatureMode","(int $mode)","Set Signature Mode",2],["RSA::setComment","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_setComment","(string $comment)","Set public key comment.",2],["RSA::getComment","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_getComment","()","Get public key comment.",2],["RSA::encrypt","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_encrypt","(string $plaintext)","Encryption",2],["RSA::decrypt","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_decrypt","($ciphertext)","Decryption",2],["RSA::sign","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_sign","(string $message)","Create a signature",2],["RSA::verify","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method_verify","(string $message, string $signature)","Verifies a signature",2],["RSA::_extractBER","phpseclib\\Crypt\\RSA","phpseclib\/Crypt\/RSA.html#method__extractBER","(string $str)","Extract raw BER from Base64 encoding",2],["Rijndael::setKeyLength","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Rijndael::setBlockLength","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method_setBlockLength","(int $length)","Sets the block length",2],["Rijndael::isValidEngine","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["Rijndael::_encryptBlock","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Rijndael::_decryptBlock","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Rijndael::_setupKey","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method__setupKey","()","Setup the key (expansion)",2],["Rijndael::_subWord","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method__subWord","(int $word)","Performs S-Box substitutions",2],["Rijndael::_getTables","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method__getTables","()","Provides the mixColumns and sboxes tables",2],["Rijndael::_getInvTables","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method__getInvTables","()","Provides the inverse mixColumns and inverse sboxes",2],["Rijndael::_setupInlineCrypt","phpseclib\\Crypt\\Rijndael","phpseclib\/Crypt\/Rijndael.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["TripleDES::__construct","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method___construct","(int $mode = Base::MODE_CBC)","Default Constructor.",2],["TripleDES::isValidEngine","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_isValidEngine","(int $engine)","Test for engine validity",2],["TripleDES::setIV","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_setIV","(string $iv)","Sets the initialization vector.",2],["TripleDES::setKeyLength","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_setKeyLength","(int $length)","Sets the key length.",2],["TripleDES::setKey","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_setKey","(string $key)","Sets the key.",2],["TripleDES::encrypt","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_encrypt","(string $plaintext)","Encrypts a message.",2],["TripleDES::decrypt","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_decrypt","(string $ciphertext)","Decrypts a message.",2],["TripleDES::enableContinuousBuffer","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_enableContinuousBuffer","()","Treat consecutive \"packets\" as if they are a continuous",2],["TripleDES::disableContinuousBuffer","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_disableContinuousBuffer","()","Treat consecutive packets as if they are a discontinuous",2],["TripleDES::_setupKey","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method__setupKey","()","Creates the key schedule",2],["TripleDES::setPreferredEngine","phpseclib\\Crypt\\TripleDES","phpseclib\/Crypt\/TripleDES.html#method_setPreferredEngine","(int $engine)","Sets the internal crypt engine",2],["Twofish::setKeyLength","phpseclib\\Crypt\\Twofish","phpseclib\/Crypt\/Twofish.html#method_setKeyLength","(int $length)","Sets the key length.",2],["Twofish::_setupKey","phpseclib\\Crypt\\Twofish","phpseclib\/Crypt\/Twofish.html#method__setupKey","()","Setup the key (expansion)",2],["Twofish::_mdsrem","phpseclib\\Crypt\\Twofish","phpseclib\/Crypt\/Twofish.html#method__mdsrem","(string $A, string $B)","_mdsrem function using by the twofish cipher algorithm",2],["Twofish::_encryptBlock","phpseclib\\Crypt\\Twofish","phpseclib\/Crypt\/Twofish.html#method__encryptBlock","(string $in)","Encrypts a block",2],["Twofish::_decryptBlock","phpseclib\\Crypt\\Twofish","phpseclib\/Crypt\/Twofish.html#method__decryptBlock","(string $in)","Decrypts a block",2],["Twofish::_setupInlineCrypt","phpseclib\\Crypt\\Twofish","phpseclib\/Crypt\/Twofish.html#method__setupInlineCrypt","()","Setup the performance-optimized function for de\/encrypt()",2],["ANSI::__construct","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method___construct","()","Default Constructor.",2],["ANSI::setDimensions","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method_setDimensions","(int $x, int $y)","Set terminal width and height",2],["ANSI::setHistory","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method_setHistory","($history)","Set the number of lines that should be logged past",2],["ANSI::loadString","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method_loadString","(string $source)","Load a string",2],["ANSI::appendString","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method_appendString","(string $source)","Appdend a string",2],["ANSI::_newLine","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method__newLine","()","Add a new line",2],["ANSI::_processCoordinate","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method__processCoordinate","($last_attr, $cur_attr, $char)","Returns the current coordinate without preformating",2],["ANSI::_getScreen","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method__getScreen","()","Returns the current screen without preformating",2],["ANSI::getScreen","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method_getScreen","()","Returns the current screen",2],["ANSI::getHistory","phpseclib\\File\\ANSI","phpseclib\/File\/ANSI.html#method_getHistory","()","Returns the current screen and the x previous lines",2],["ASN1::decodeBER","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method_decodeBER","(string $encoded)","Parse BER-encoding",2],["ASN1::_decode_ber","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method__decode_ber","(string $encoded, int $start, int $encoded_pos)","Parse BER-encoding (Helper function)",2],["ASN1::asn1map","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method_asn1map","(array $decoded, array $mapping, array $special = array())","ASN.1 Map",2],["ASN1::encodeDER","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method_encodeDER","($source, $mapping, $special = array())","ASN.1 Encode",2],["ASN1::_encode_der","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method__encode_der","($source, $mapping, $idx = null, $special = array())","ASN.1 Encode (Helper function)",2],["ASN1::_encodeLength","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method__encodeLength","(int $length)","DER-encode the length",2],["ASN1::_decodeOID","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method__decodeOID","(string $content)","BER-decode the OID",2],["ASN1::_encodeOID","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method__encodeOID","($source)","DER-encode the OID",2],["ASN1::_decodeTime","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method__decodeTime","(string $content, int $tag)","BER-decode the time",2],["ASN1::setTimeFormat","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method_setTimeFormat","(string $format)","Set the time format",2],["ASN1::loadOIDs","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method_loadOIDs","(array $oids)","Load OIDs",2],["ASN1::loadFilters","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method_loadFilters","(array $filters)","Load filters",2],["ASN1::_string_shift","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["ASN1::convert","phpseclib\\File\\ASN1","phpseclib\/File\/ASN1.html#method_convert","(string $in, int $from = self::TYPE_UTF8_STRING, int $to = self::TYPE_UTF8_STRING)","String type conversion",2],["Element::__construct","phpseclib\\File\\ASN1\\Element","phpseclib\/File\/ASN1\/Element.html#method___construct","(string $encoded)","Constructor",2],["X509::__construct","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method___construct","()","Default Constructor.",2],["X509::loadX509","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_loadX509","(string $cert, int $mode = self::FORMAT_AUTO_DETECT)","Load X.509 certificate",2],["X509::saveX509","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_saveX509","(array $cert, int $format = self::FORMAT_PEM)","Save X.509 certificate",2],["X509::_mapInExtensions","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__mapInExtensions","(array $root, string $path, object $asn1)","Map extension values from octet string to extension-specific",2],["X509::_mapOutExtensions","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__mapOutExtensions","(array $root, string $path, object $asn1)","Map extension values from extension-specific internal",2],["X509::_mapInAttributes","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__mapInAttributes","(array $root, string $path, object $asn1)","Map attribute values from ANY type to attribute-specific",2],["X509::_mapOutAttributes","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__mapOutAttributes","(array $root, string $path, object $asn1)","Map attribute values from attribute-specific internal",2],["X509::_mapInDNs","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__mapInDNs","(array $root, string $path, object $asn1)","Map DN values from ANY type to DN-specific internal",2],["X509::_mapOutDNs","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__mapOutDNs","(array $root, string $path, object $asn1)","Map DN values from DN-specific internal format to ",2],["X509::_getMapping","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__getMapping","(string $extnId)","Associate an extension ID to an extension mapping",2],["X509::loadCA","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_loadCA","(string $cert)","Load an X.509 certificate as a certificate authority",2],["X509::validateURL","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_validateURL","(string $url)","Validate an X.509 certificate against a URL",2],["X509::validateDate","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_validateDate","(<a href=\"http:\/\/php.net\/DateTime\"><abbr title=\"DateTime\">DateTime<\/abbr><\/a>|string $date = null)","Validate a date",2],["X509::_testForIntermediate","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__testForIntermediate","(bool $caonly, int $count)","Validates an intermediate cert as identified via authority",2],["X509::validateSignature","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_validateSignature","(bool $caonly = true)","Validate a signature",2],["X509::_validateSignatureCountable","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__validateSignatureCountable","(bool $caonly, int $count)","Validate a signature",2],["X509::_validateSignature","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__validateSignature","(string $publicKeyAlgorithm, string $publicKey, string $signatureAlgorithm, string $signature, string $signatureSubject)","Validates a signature",2],["X509::_reformatKey","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__reformatKey","(string $algorithm, string $key)","Reformat public keys",2],["X509::_decodeIP","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__decodeIP","(string $ip)","Decodes an IP address",2],["X509::_decodeNameConstraintIP","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__decodeNameConstraintIP","(string $ip)","Decodes an IP address in a name constraints extension",2],["X509::_encodeIP","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__encodeIP","(string|array $ip)","Encodes an IP address",2],["X509::_translateDNProp","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__translateDNProp","(string $propName)","\"Normalizes\" a Distinguished Name property",2],["X509::setDNProp","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setDNProp","(string $propName, mixed $propValue, string $type = &#039;utf8String&#039;)","Set a Distinguished Name property",2],["X509::removeDNProp","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_removeDNProp","(string $propName)","Remove Distinguished Name properties",2],["X509::getDNProp","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getDNProp","(string $propName, array $dn = null, bool $withType = false)","Get Distinguished Name properties",2],["X509::setDN","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setDN","(mixed $dn, bool $merge = false, string $type = &#039;utf8String&#039;)","Set a Distinguished Name",2],["X509::getDN","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getDN","(mixed $format = self::DN_ARRAY, array $dn = null)","Get the Distinguished Name for a certificates subject",2],["X509::getIssuerDN","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getIssuerDN","(int $format = self::DN_ARRAY)","Get the Distinguished Name for a certificate\/crl issuer",2],["X509::getSubjectDN","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getSubjectDN","(int $format = self::DN_ARRAY)","Get the Distinguished Name for a certificate\/csr subject",2],["X509::getIssuerDNProp","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getIssuerDNProp","(string $propName, bool $withType = false)","Get an individual Distinguished Name property for a",2],["X509::getSubjectDNProp","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getSubjectDNProp","(string $propName, bool $withType = false)","Get an individual Distinguished Name property for a",2],["X509::getChain","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getChain","()","Get the certificate chain for the current cert",2],["X509::setPublicKey","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setPublicKey","(object $key)","Set public key",2],["X509::setPrivateKey","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setPrivateKey","(object $key)","Set private key",2],["X509::setChallenge","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setChallenge","(string $challenge)","Set challenge",2],["X509::getPublicKey","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getPublicKey","()","Gets the public key",2],["X509::loadCSR","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_loadCSR","($csr, $mode = self::FORMAT_AUTO_DETECT)","Load a Certificate Signing Request",2],["X509::saveCSR","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_saveCSR","(array $csr, int $format = self::FORMAT_PEM)","Save CSR request",2],["X509::loadSPKAC","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_loadSPKAC","($spkac)","Load a SPKAC CSR",2],["X509::saveSPKAC","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_saveSPKAC","($spkac, $format = self::FORMAT_PEM)","Save a SPKAC CSR request",2],["X509::loadCRL","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_loadCRL","($crl, $mode = self::FORMAT_AUTO_DETECT)","Load a Certificate Revocation List",2],["X509::saveCRL","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_saveCRL","(array $crl, int $format = self::FORMAT_PEM)","Save Certificate Revocation List.",2],["X509::_timeField","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__timeField","(string $date)","Helper function to build a time field according to",2],["X509::sign","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_sign","(<a href=\"phpseclib\/File\/X509.html\"><abbr title=\"phpseclib\\File\\X509\">X509<\/abbr><\/a> $issuer, <a href=\"phpseclib\/File\/X509.html\"><abbr title=\"phpseclib\\File\\X509\">X509<\/abbr><\/a> $subject, string $signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign an X.509 certificate",2],["X509::signCSR","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_signCSR","($signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign a CSR",2],["X509::signSPKAC","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_signSPKAC","($signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign a SPKAC",2],["X509::signCRL","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_signCRL","(<a href=\"phpseclib\/File\/X509.html\"><abbr title=\"phpseclib\\File\\X509\">X509<\/abbr><\/a> $issuer, <a href=\"phpseclib\/File\/X509.html\"><abbr title=\"phpseclib\\File\\X509\">X509<\/abbr><\/a> $crl, string $signatureAlgorithm = &#039;sha1WithRSAEncryption&#039;)","Sign a CRL",2],["X509::_sign","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__sign","($key, $signatureAlgorithm)","X.509 certificate signing helper function.",2],["X509::setStartDate","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setStartDate","(string $date)","Set certificate start date",2],["X509::setEndDate","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setEndDate","(string $date)","Set certificate end date",2],["X509::setSerialNumber","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setSerialNumber","(string $serial, <abbr title=\"phpseclib\\File\\$base\">$base<\/abbr> $base = -256)","Set Serial Number",2],["X509::makeCA","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_makeCA","()","Turns the certificate into a certificate authority",2],["X509::_isSubArrayValid","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__isSubArrayValid","(array $root, string $path)","Check for validity of subarray",2],["X509::_subArrayUnchecked","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__subArrayUnchecked","(array $root, string $path, bool $create = false)","Get a reference to a subarray",2],["X509::_subArray","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__subArray","(array $root, string $path, bool $create = false)","Get a reference to a subarray",2],["X509::_extensions","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__extensions","(array $root, string $path = null, bool $create = false)","Get a reference to an extension subarray",2],["X509::_removeExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__removeExtension","(string $id, string $path = null)","Remove an Extension",2],["X509::_getExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__getExtension","(string $id, array $cert = null, string $path = null)","Get an Extension",2],["X509::_getExtensions","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__getExtensions","(array $cert = null, string $path = null)","Returns a list of all extensions in use",2],["X509::_setExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__setExtension","(string $id, mixed $value, bool $critical = false, bool $replace = true, string $path = null)","Set an Extension",2],["X509::removeExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_removeExtension","(string $id)","Remove a certificate, CSR or CRL Extension",2],["X509::getExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getExtension","(string $id, array $cert = null)","Get a certificate, CSR or CRL Extension",2],["X509::getExtensions","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getExtensions","(array $cert = null)","Returns a list of all extensions in use in certificate,",2],["X509::setExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setExtension","(string $id, mixed $value, bool $critical = false, bool $replace = true)","Set a certificate, CSR or CRL Extension",2],["X509::removeAttribute","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_removeAttribute","(string $id, int $disposition = self::ATTR_ALL)","Remove a CSR attribute.",2],["X509::getAttribute","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getAttribute","(string $id, int $disposition = self::ATTR_ALL, array $csr = null)","Get a CSR attribute",2],["X509::getAttributes","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getAttributes","(array $csr = null)","Returns a list of all CSR attributes in use",2],["X509::setAttribute","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setAttribute","(string $id, mixed $value, bool $disposition = self::ATTR_ALL)","Set a CSR attribute",2],["X509::setKeyIdentifier","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setKeyIdentifier","(string $value)","Sets the subject key identifier",2],["X509::computeKeyIdentifier","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_computeKeyIdentifier","(mixed $key = null, int $method = 1)","Compute a public key identifier.",2],["X509::_formatSubjectPublicKey","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__formatSubjectPublicKey","()","Format a public key as appropriate",2],["X509::setDomain","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setDomain","()","Set the domain name's which the cert is to be valid",2],["X509::setIPAddress","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setIPAddress","()","Set the IP Addresses's which the cert is to be valid",2],["X509::_dnsName","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__dnsName","(string $domain)","Helper function to build domain array",2],["X509::_iPAddress","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__iPAddress","(string $address)","Helper function to build IP Address array",2],["X509::_revokedCertificate","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__revokedCertificate","(array $rclist, string $serial, bool $create = false)","Get the index of a revoked certificate.",2],["X509::revoke","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_revoke","(string $serial, string $date = null)","Revoke a certificate.",2],["X509::unrevoke","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_unrevoke","(string $serial)","Unrevoke a certificate.",2],["X509::getRevoked","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getRevoked","(string $serial)","Get a revoked certificate.",2],["X509::listRevoked","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_listRevoked","(array $crl = null)","List revoked certificates",2],["X509::removeRevokedCertificateExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_removeRevokedCertificateExtension","(string $serial, string $id)","Remove a Revoked Certificate Extension",2],["X509::getRevokedCertificateExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getRevokedCertificateExtension","(string $serial, string $id, array $crl = null)","Get a Revoked Certificate Extension",2],["X509::getRevokedCertificateExtensions","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getRevokedCertificateExtensions","(string $serial, array $crl = null)","Returns a list of all extensions in use for a given",2],["X509::setRevokedCertificateExtension","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_setRevokedCertificateExtension","(string $serial, string $id, mixed $value, bool $critical = false, bool $replace = true)","Set a Revoked Certificate Extension",2],["X509::_extractBER","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method__extractBER","(string $str)","Extract raw BER from Base64 encoding",2],["X509::getOID","phpseclib\\File\\X509","phpseclib\/File\/X509.html#method_getOID","($name)","Returns the OID corresponding to a name",2],["BigInteger::__construct","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method___construct","(<abbr title=\"phpseclib\\Math\\$x\">$x<\/abbr> $x, int $base = 10)","Converts base-2, base-10, base-16, and binary strings",2],["BigInteger::toBytes","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_toBytes","(bool $twos_compliment = false)","Converts a BigInteger to a byte string (eg.",2],["BigInteger::toHex","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_toHex","(bool $twos_compliment = false)","Converts a BigInteger to a hex string (eg.",2],["BigInteger::toBits","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_toBits","(bool $twos_compliment = false)","Converts a BigInteger to a bit string (eg.",2],["BigInteger::toString","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_toString","()","Converts a BigInteger to a base-10 number.",2],["BigInteger::copy","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_copy","()","Copy an object",2],["BigInteger::__toString","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method___toString","()","__toString() magic method",2],["BigInteger::__clone","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method___clone","()","__clone() magic method",2],["BigInteger::__sleep","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method___sleep","()","__sleep() magic method",2],["BigInteger::__wakeup","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method___wakeup","()","__wakeup() magic method",2],["BigInteger::__debugInfo","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method___debugInfo","()","__debugInfo() magic method",2],["BigInteger::add","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_add","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $y)","Adds two BigIntegers.",2],["BigInteger::_add","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__add","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Performs addition.",2],["BigInteger::subtract","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_subtract","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $y)","Subtracts two BigIntegers.",2],["BigInteger::_subtract","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__subtract","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Performs subtraction.",2],["BigInteger::multiply","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_multiply","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x)","Multiplies two BigIntegers",2],["BigInteger::_multiply","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__multiply","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Performs multiplication.",2],["BigInteger::_regularMultiply","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__regularMultiply","(array $x_value, array $y_value)","Performs long multiplication on two BigIntegers",2],["BigInteger::_karatsuba","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__karatsuba","(array $x_value, array $y_value)","Performs Karatsuba multiplication on two BigIntegers",2],["BigInteger::_square","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__square","(array $x = false)","Performs squaring",2],["BigInteger::_baseSquare","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__baseSquare","(array $value)","Performs traditional squaring on two BigIntegers",2],["BigInteger::_karatsubaSquare","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__karatsubaSquare","(array $value)","Performs Karatsuba \"squaring\" on two BigIntegers",2],["BigInteger::divide","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_divide","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $y)","Divides two BigIntegers.",2],["BigInteger::_divide_digit","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__divide_digit","(array $dividend, array $divisor)","Divides a BigInteger by a regular integer",2],["BigInteger::modPow","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_modPow","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $e, <a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $n)","Performs modular exponentiation.",2],["BigInteger::powMod","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_powMod","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $e, <a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $n)","Performs modular exponentiation.",2],["BigInteger::_slidingWindow","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__slidingWindow","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $e, <a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $n, int $mode)","Sliding Window k-ary Modular Exponentiation",2],["BigInteger::_reduce","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__reduce","(array $x, array $n, int $mode)","Modular reduction",2],["BigInteger::_prepareReduce","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__prepareReduce","(array $x, array $n, int $mode)","Modular reduction preperation",2],["BigInteger::_multiplyReduce","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__multiplyReduce","(array $x, array $y, array $n, int $mode)","Modular multiply",2],["BigInteger::_squareReduce","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__squareReduce","(array $x, array $n, int $mode)","Modular square",2],["BigInteger::_mod2","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__mod2","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $n)","Modulos for Powers of Two",2],["BigInteger::_barrett","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__barrett","(array $n, array $m)","Barrett Modular Reduction",2],["BigInteger::_regularBarrett","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__regularBarrett","(array $x, array $n)","(Regular) Barrett Modular Reduction",2],["BigInteger::_multiplyLower","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__multiplyLower","(array $x_value, bool $x_negative, array $y_value, bool $y_negative, int $stop)","Performs long multiplication up to $stop digits",2],["BigInteger::_montgomery","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__montgomery","(array $x, array $n)","Montgomery Modular Reduction",2],["BigInteger::_montgomeryMultiply","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__montgomeryMultiply","(array $x, array $y, array $m)","Montgomery Multiply",2],["BigInteger::_prepMontgomery","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__prepMontgomery","(array $x, array $n)","Prepare a number for use in Montgomery Modular Reductions",2],["BigInteger::_modInverse67108864","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__modInverse67108864","(array $x)","Modular Inverse of a number mod 2**26 (eg.",2],["BigInteger::modInverse","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_modInverse","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $n)","Calculates modular inverses.",2],["BigInteger::extendedGCD","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_extendedGCD","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $n)","Calculates the greatest common divisor and Bezout's",2],["BigInteger::gcd","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_gcd","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $n)","Calculates the greatest common divisor",2],["BigInteger::abs","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_abs","()","Absolute value.",2],["BigInteger::compare","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_compare","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $y)","Compares two numbers.",2],["BigInteger::_compare","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__compare","(array $x_value, bool $x_negative, array $y_value, bool $y_negative)","Compares two numbers.",2],["BigInteger::equals","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_equals","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x)","Tests the equality of two numbers.",2],["BigInteger::setPrecision","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_setPrecision","(int $bits)","Set Precision",2],["BigInteger::bitwise_and","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_and","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x)","Logical And",2],["BigInteger::bitwise_or","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_or","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x)","Logical Or",2],["BigInteger::bitwise_xor","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_xor","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $x)","Logical Exclusive-Or",2],["BigInteger::bitwise_not","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_not","()","Logical Not",2],["BigInteger::bitwise_rightShift","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_rightShift","(int $shift)","Logical Right Shift",2],["BigInteger::bitwise_leftShift","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_leftShift","(int $shift)","Logical Left Shift",2],["BigInteger::bitwise_leftRotate","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_leftRotate","(int $shift)","Logical Left Rotate",2],["BigInteger::bitwise_rightRotate","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_bitwise_rightRotate","(int $shift)","Logical Right Rotate",2],["BigInteger::_random_number_helper","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__random_number_helper","($size)","Generates a random BigInteger",2],["BigInteger::random","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_random","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $arg1, <a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $arg2 = false)","Generate a random number",2],["BigInteger::randomPrime","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_randomPrime","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $arg1, <a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $arg2 = false, int $timeout = false)","Generate a random prime number.",2],["BigInteger::_make_odd","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__make_odd","()","Make the current number odd",2],["BigInteger::isPrime","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method_isPrime","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $t = false)","Checks a numer to see if it's prime",2],["BigInteger::_lshift","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__lshift","(int $shift)","Logical Left Shift",2],["BigInteger::_rshift","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__rshift","(int $shift)","Logical Right Shift",2],["BigInteger::_normalize","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__normalize","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $result)","Normalize",2],["BigInteger::_trim","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__trim","(array $value)","Trim",2],["BigInteger::_array_repeat","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__array_repeat","(<abbr title=\"phpseclib\\Math\\$input\">$input<\/abbr> $input, <abbr title=\"phpseclib\\Math\\$multiplier\">$multiplier<\/abbr> $multiplier)","Array Repeat",2],["BigInteger::_base256_lshift","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__base256_lshift","(<abbr title=\"phpseclib\\Math\\$x\">$x<\/abbr> $x, <abbr title=\"phpseclib\\Math\\$shift\">$shift<\/abbr> $shift)","Logical Left Shift",2],["BigInteger::_base256_rshift","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__base256_rshift","(<abbr title=\"phpseclib\\Math\\$x\">$x<\/abbr> $x, <abbr title=\"phpseclib\\Math\\$shift\">$shift<\/abbr> $shift)","Logical Right Shift",2],["BigInteger::_int2bytes","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__int2bytes","(int $x)","Converts 32-bit integers to bytes.",2],["BigInteger::_bytes2int","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__bytes2int","(string $x)","Converts bytes to 32-bit integers",2],["BigInteger::_encodeASN1Length","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__encodeASN1Length","(int $length)","DER-encode an integer",2],["BigInteger::_safe_divide","phpseclib\\Math\\BigInteger","phpseclib\/Math\/BigInteger.html#method__safe_divide","(int $x, int $y)","Single digit division",2],["SCP::__construct","phpseclib\\Net\\SCP","phpseclib\/Net\/SCP.html#method___construct","(<a href=\"phpseclib\/Net\/SSH1.html\"><abbr title=\"phpseclib\\Net\\SSH1\">SSH1<\/abbr><\/a>|<a href=\"phpseclib\/Net\/SSH2.html\"><abbr title=\"phpseclib\\Net\\SSH2\">SSH2<\/abbr><\/a> $ssh)","Default Constructor.",2],["SCP::put","phpseclib\\Net\\SCP","phpseclib\/Net\/SCP.html#method_put","(string $remote_file, string $data, int $mode = self::SOURCE_STRING, callable $callback = null)","Uploads a file to the SCP server.",2],["SCP::get","phpseclib\\Net\\SCP","phpseclib\/Net\/SCP.html#method_get","(string $remote_file, string $local_file = false)","Downloads a file from the SCP server.",2],["SCP::_send","phpseclib\\Net\\SCP","phpseclib\/Net\/SCP.html#method__send","(string $data)","Sends a packet to an SSH server",2],["SCP::_receive","phpseclib\\Net\\SCP","phpseclib\/Net\/SCP.html#method__receive","()","Receives a packet from an SSH server",2],["SCP::_close","phpseclib\\Net\\SCP","phpseclib\/Net\/SCP.html#method__close","()","Closes the connection to an SSH server",2],["SFTP::__construct","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method___construct","(string $host, int $port = 22, int $timeout = 10)","Default Constructor.",2],["SFTP::login","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_login","($username)","Login",2],["SFTP::disableStatCache","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_disableStatCache","()","Disable the stat cache",2],["SFTP::enableStatCache","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_enableStatCache","()","Enable the stat cache",2],["SFTP::clearStatCache","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_clearStatCache","()","Clear the stat cache",2],["SFTP::enablePathCanonicalization","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_enablePathCanonicalization","()","Enable path canonicalization",2],["SFTP::disablePathCanonicalization","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_disablePathCanonicalization","()","Enable path canonicalization",2],["SFTP::pwd","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_pwd","()","Returns the current directory name",2],["SFTP::_logError","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__logError","(string $response, int $status = -1)","Logs errors",2],["SFTP::realpath","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_realpath","(string $path)","Returns canonicalized absolute pathname",2],["SFTP::_realpath","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__realpath","(string $path)","Canonicalize the Server-Side Path Name",2],["SFTP::chdir","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_chdir","(string $dir)","Changes the current directory",2],["SFTP::nlist","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_nlist","(string $dir = &#039;.&#039;, bool $recursive = false)","Returns a list of files in the given directory",2],["SFTP::_nlist_helper","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__nlist_helper","(string $dir, bool $recursive, string $relativeDir)","Helper method for nlist",2],["SFTP::rawlist","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_rawlist","(string $dir = &#039;.&#039;, bool $recursive = false)","Returns a detailed list of files in the given directory",2],["SFTP::_list","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__list","(string $dir, bool $raw = true)","Reads a list, be it detailed or not, of files in the",2],["SFTP::_comparator","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__comparator","(array $a, array $b)","Compares two rawlist entries using parameters set by",2],["SFTP::setListOrder","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_setListOrder","()","Defines how nlist() and rawlist() will be sorted -",2],["SFTP::size","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_size","(string $filename)","Returns the file size, in bytes, or false, on failure",2],["SFTP::_update_stat_cache","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__update_stat_cache","(string $path, mixed $value)","Save files \/ directories to cache",2],["SFTP::_remove_from_stat_cache","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__remove_from_stat_cache","(string $path)","Remove files \/ directories from cache",2],["SFTP::_query_stat_cache","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__query_stat_cache","($path)","Checks cache for path",2],["SFTP::stat","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_stat","(string $filename)","Returns general information about a file.",2],["SFTP::lstat","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_lstat","(string $filename)","Returns general information about a file or symbolic",2],["SFTP::_stat","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__stat","(string $filename, int $type)","Returns general information about a file or symbolic",2],["SFTP::truncate","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_truncate","(string $filename, int $new_size)","Truncates a file to a given length",2],["SFTP::touch","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_touch","(string $filename, int $time = null, int $atime = null)","Sets access and modification time of file.",2],["SFTP::chown","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_chown","(string $filename, int $uid, bool $recursive = false)","Changes file or directory owner",2],["SFTP::chgrp","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_chgrp","(string $filename, int $gid, bool $recursive = false)","Changes file or directory group",2],["SFTP::chmod","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_chmod","(int $mode, string $filename, bool $recursive = false)","Set permissions on a file.",2],["SFTP::_setstat","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__setstat","(string $filename, string $attr, bool $recursive)","Sets information about a file",2],["SFTP::_setstat_recursive","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__setstat_recursive","(string $path, string $attr, int $i)","Recursively sets information on directories on the",2],["SFTP::readlink","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_readlink","(string $link)","Return the target of a symbolic link",2],["SFTP::symlink","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_symlink","(string $target, string $link)","Create a symlink",2],["SFTP::mkdir","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_mkdir","($dir, $mode = -1, $recursive = false)","Creates a directory.",2],["SFTP::_mkdir_helper","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__mkdir_helper","($dir, $attr)","Helper function for directory creation",2],["SFTP::rmdir","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_rmdir","(string $dir)","Removes a directory.",2],["SFTP::put","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_put","(string $remote_file, string|resource $data, int $mode = self::SOURCE_STRING, int $start = -1, int $local_start = -1, callable|null $progressCallback = null)","Uploads a file to the SFTP server.",2],["SFTP::_read_put_responses","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__read_put_responses","(int $i)","Reads multiple successive SSH_FXP_WRITE responses",2],["SFTP::_close_handle","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__close_handle","(string $handle)","Close handle",2],["SFTP::get","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_get","(string $remote_file, string $local_file = false, int $offset, int $length = -1, callable|null $progressCallback = null)","Downloads a file from the SFTP server.",2],["SFTP::delete","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_delete","(string $path, bool $recursive = true)","Deletes a file on the SFTP server.",2],["SFTP::_delete_recursive","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__delete_recursive","(string $path, int $i)","Recursively deletes directories on the SFTP server",2],["SFTP::file_exists","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_file_exists","(string $path)","Checks whether a file or directory exists",2],["SFTP::is_dir","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_is_dir","(string $path)","Tells whether the filename is a directory",2],["SFTP::is_file","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_is_file","(string $path)","Tells whether the filename is a regular file",2],["SFTP::is_link","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_is_link","(string $path)","Tells whether the filename is a symbolic link",2],["SFTP::is_readable","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_is_readable","(string $path)","Tells whether a file exists and is readable",2],["SFTP::is_writable","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_is_writable","(string $path)","Tells whether the filename is writable",2],["SFTP::is_writeable","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_is_writeable","(string $path)","Tells whether the filename is writeable",2],["SFTP::fileatime","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_fileatime","(string $path)","Gets last access time of file",2],["SFTP::filemtime","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_filemtime","(string $path)","Gets file modification time",2],["SFTP::fileperms","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_fileperms","(string $path)","Gets file permissions",2],["SFTP::fileowner","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_fileowner","(string $path)","Gets file owner",2],["SFTP::filegroup","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_filegroup","(string $path)","Gets file group",2],["SFTP::filesize","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_filesize","(string $path)","Gets file size",2],["SFTP::filetype","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_filetype","(string $path)","Gets file type",2],["SFTP::_get_stat_cache_prop","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__get_stat_cache_prop","(string $path, string $prop)","Return a stat properity",2],["SFTP::_get_lstat_cache_prop","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__get_lstat_cache_prop","(string $path, string $prop)","Return an lstat properity",2],["SFTP::_get_xstat_cache_prop","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__get_xstat_cache_prop","($path, $prop, $type)","Return a stat or lstat properity",2],["SFTP::rename","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_rename","(string $oldname, string $newname)","Renames a file or a directory on the SFTP server",2],["SFTP::_parseAttributes","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__parseAttributes","(string $response)","Parse Attributes",2],["SFTP::_parseMode","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__parseMode","(int $mode)","Attempt to identify the file type",2],["SFTP::_parseLongname","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__parseLongname","(string $longname)","Parse Longname",2],["SFTP::_send_sftp_packet","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__send_sftp_packet","($type, $data, $request_id = 1)","Sends SFTP Packets",2],["SFTP::_get_sftp_packet","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__get_sftp_packet","($request_id = null)","Receives SFTP Packets",2],["SFTP::getSFTPLog","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_getSFTPLog","()","Returns a log of the packets that have been sent and",2],["SFTP::getSFTPErrors","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_getSFTPErrors","()","Returns all errors",2],["SFTP::getLastSFTPError","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_getLastSFTPError","()","Returns the last error",2],["SFTP::getSupportedVersions","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method_getSupportedVersions","()","Get supported SFTP versions",2],["SFTP::_disconnect","phpseclib\\Net\\SFTP","phpseclib\/Net\/SFTP.html#method__disconnect","(int $reason)","Disconnect",2],["Stream::__construct","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method___construct","()","The Constructor",2],["Stream::_parse_path","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__parse_path","(string $path)","Path Parser",2],["Stream::_stream_open","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_open","(string $path, string $mode, int $options, string $opened_path)","Opens file or URL",2],["Stream::_stream_read","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_read","(int $count)","Read from stream",2],["Stream::_stream_write","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_write","(string $data)","Write to stream",2],["Stream::_stream_tell","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_tell","()","Retrieve the current position of a stream",2],["Stream::_stream_eof","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_eof","()","Tests for end-of-file on a file pointer",2],["Stream::_stream_seek","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_seek","(int $offset, int $whence)","Seeks to specific location in a stream",2],["Stream::_stream_metadata","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_metadata","(string $path, int $option, mixed $var)","Change stream options",2],["Stream::_stream_cast","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_cast","(int $cast_as)","Retrieve the underlaying resource",2],["Stream::_stream_lock","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_lock","(int $operation)","Advisory file locking",2],["Stream::_rename","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__rename","(string $path_from, string $path_to)","Renames a file or directory",2],["Stream::_dir_opendir","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__dir_opendir","(string $path, int $options)","Open directory handle",2],["Stream::_dir_readdir","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__dir_readdir","()","Read entry from directory handle",2],["Stream::_dir_rewinddir","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__dir_rewinddir","()","Rewind directory handle",2],["Stream::_dir_closedir","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__dir_closedir","()","Close directory handle",2],["Stream::_mkdir","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__mkdir","(string $path, int $mode, int $options)","Create a directory",2],["Stream::_rmdir","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__rmdir","($path, $options)","Removes a directory",2],["Stream::_stream_flush","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_flush","()","Flushes the output",2],["Stream::_stream_stat","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_stat","()","Retrieve information about a file resource",2],["Stream::_unlink","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__unlink","(string $path)","Delete a file",2],["Stream::_url_stat","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__url_stat","(string $path, int $flags)","Retrieve information about a file",2],["Stream::_stream_truncate","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_truncate","(int $new_size)","Truncate stream",2],["Stream::_stream_set_option","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_set_option","(int $option, int $arg1, int $arg2)","Change stream options",2],["Stream::_stream_close","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method__stream_close","()","Close an resource",2],["Stream::__call","phpseclib\\Net\\SFTP\\Stream","phpseclib\/Net\/SFTP\/Stream.html#method___call","(string $name, array $arguments)","__call Magic Method",2],["SSH1::__construct","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method___construct","(string $host, int $port = 22, int $timeout = 10, int $cipher = self::CIPHER_3DES)","Default Constructor.",2],["SSH1::_connect","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__connect","()","Connect to an SSHv1 server",2],["SSH1::login","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_login","(string $username, string $password = &#039;&#039;)","Login",2],["SSH1::setTimeout","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_setTimeout","(mixed $timeout)","Set Timeout",2],["SSH1::exec","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_exec","($cmd, $block = true)","Executes a command on a non-interactive shell, returns",2],["SSH1::_initShell","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__initShell","()","Creates an interactive shell",2],["SSH1::write","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_write","(string $cmd)","Inputs a command into an interactive shell.",2],["SSH1::read","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_read","(string $expect, int $mode = self::READ_SIMPLE)","Returns the output of an interactive shell when there's",2],["SSH1::interactiveWrite","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_interactiveWrite","(string $cmd)","Inputs a command into an interactive shell.",2],["SSH1::interactiveRead","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_interactiveRead","()","Returns the output of an interactive shell when no",2],["SSH1::disconnect","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_disconnect","()","Disconnect",2],["SSH1::__destruct","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method___destruct","()","Destructor.",2],["SSH1::_disconnect","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__disconnect","(string $msg = &#039;Client Quit&#039;)","Disconnect",2],["SSH1::_get_binary_packet","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__get_binary_packet","()","Gets Binary Packets",2],["SSH1::_send_binary_packet","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__send_binary_packet","(string $data)","Sends Binary Packets",2],["SSH1::_crc","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__crc","(string $data)","Cyclic Redundancy Check (CRC)",2],["SSH1::_string_shift","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["SSH1::_rsa_crypt","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__rsa_crypt","(<a href=\"phpseclib\/Math\/BigInteger.html\"><abbr title=\"phpseclib\\Math\\BigInteger\">BigInteger<\/abbr><\/a> $m, array $key)","RSA Encrypt",2],["SSH1::_define_array","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__define_array","()","Define Array",2],["SSH1::getLog","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getLog","()","Returns a log of the packets that have been sent and",2],["SSH1::_format_log","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__format_log","(array $message_log, array $message_number_log)","Formats a log for printing",2],["SSH1::_format_log_helper","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__format_log_helper","(array $matches)","Helper function for _format_log",2],["SSH1::getServerKeyPublicExponent","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getServerKeyPublicExponent","(bool $raw_output = false)","Return the server key public exponent",2],["SSH1::getServerKeyPublicModulus","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getServerKeyPublicModulus","(bool $raw_output = false)","Return the server key public modulus",2],["SSH1::getHostKeyPublicExponent","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getHostKeyPublicExponent","(bool $raw_output = false)","Return the host key public exponent",2],["SSH1::getHostKeyPublicModulus","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getHostKeyPublicModulus","(bool $raw_output = false)","Return the host key public modulus",2],["SSH1::getSupportedCiphers","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getSupportedCiphers","(bool $raw_output = false)","Return a list of ciphers supported by SSH1 server.",2],["SSH1::getSupportedAuthentications","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getSupportedAuthentications","(bool $raw_output = false)","Return a list of authentications supported by SSH1",2],["SSH1::getServerIdentification","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method_getServerIdentification","()","Return the server identification.",2],["SSH1::_append_log","phpseclib\\Net\\SSH1","phpseclib\/Net\/SSH1.html#method__append_log","($protocol_flags, $message)","Logs data packets",2],["SSH2::__construct","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method___construct","(mixed $host, int $port = 22, int $timeout = 10)","Default Constructor.",2],["SSH2::setCryptoEngine","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_setCryptoEngine","(int $engine)","Set Crypto Engine Mode",2],["SSH2::sendIdentificationStringFirst","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_sendIdentificationStringFirst","()","Send Identification String First",2],["SSH2::sendIdentificationStringLast","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_sendIdentificationStringLast","()","Send Identification String Last",2],["SSH2::sendKEXINITFirst","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_sendKEXINITFirst","()","Send SSH_MSG_KEXINIT First",2],["SSH2::sendKEXINITLast","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_sendKEXINITLast","()","Send SSH_MSG_KEXINIT Last",2],["SSH2::_connect","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__connect","()","Connect to an SSHv2 server",2],["SSH2::_generate_identifier","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__generate_identifier","()","Generates the SSH identifier",2],["SSH2::_key_exchange","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__key_exchange","(string $kexinit_payload_server = false)","Key Exchange",2],["SSH2::_encryption_algorithm_to_key_size","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__encryption_algorithm_to_key_size","(string $algorithm)","Maps an encryption algorithm name to the number of",2],["SSH2::_encryption_algorithm_to_crypt_instance","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__encryption_algorithm_to_crypt_instance","(string $algorithm)","Maps an encryption algorithm name to an instance of",2],["SSH2::_bad_algorithm_candidate","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__bad_algorithm_candidate","($algorithm)","",2],["SSH2::login","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_login","($username)","Login",2],["SSH2::_login","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__login","($username)","Login Helper",2],["SSH2::_login_helper","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__login_helper","(string $username, string $password = null)","Login Helper",2],["SSH2::_keyboard_interactive_login","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__keyboard_interactive_login","(string $username, string $password)","Login via keyboard-interactive authentication",2],["SSH2::_keyboard_interactive_process","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__keyboard_interactive_process","()","Handle the keyboard-interactive requests \/ responses.",2],["SSH2::_ssh_agent_login","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__ssh_agent_login","(string $username, <a href=\"phpseclib\/System\/SSH\/Agent.html\"><abbr title=\"phpseclib\\System\\SSH\\Agent\">Agent<\/abbr><\/a> $agent)","Login with an ssh-agent provided key",2],["SSH2::_privatekey_login","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__privatekey_login","($username, $privatekey)","Login with an RSA private key",2],["SSH2::setTimeout","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_setTimeout","(mixed $timeout)","Set Timeout",2],["SSH2::getStdError","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getStdError","()","Get the output from stdError",2],["SSH2::exec","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_exec","(string $command, <abbr title=\"phpseclib\\Net\\Callback\">Callback<\/abbr> $callback = null)","Execute Command",2],["SSH2::_initShell","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__initShell","()","Creates an interactive shell",2],["SSH2::_get_interactive_channel","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__get_interactive_channel","()","Return the channel to be used with read() \/ write()",2],["SSH2::_get_open_channel","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__get_open_channel","()","Return an available open channel",2],["SSH2::read","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_read","(string $expect = &#039;&#039;, int $mode = self::READ_SIMPLE)","Returns the output of an interactive shell",2],["SSH2::write","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_write","(string $cmd)","Inputs a command into an interactive shell.",2],["SSH2::startSubsystem","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_startSubsystem","(string $subsystem)","Start a subsystem.",2],["SSH2::stopSubsystem","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_stopSubsystem","()","Stops a subsystem.",2],["SSH2::reset","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_reset","()","Closes a channel",2],["SSH2::isTimeout","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_isTimeout","()","Is timeout?",2],["SSH2::disconnect","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_disconnect","()","Disconnect",2],["SSH2::__destruct","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method___destruct","()","Destructor.",2],["SSH2::isConnected","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_isConnected","()","Is the connection still active?",2],["SSH2::isAuthenticated","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_isAuthenticated","()","Have you successfully been logged in?",2],["SSH2::ping","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_ping","()","Pings a server connection, or tries to reconnect if",2],["SSH2::_reconnect","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__reconnect","()","In situ reconnect method",2],["SSH2::_reset_connection","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__reset_connection","(int $reason)","Resets a connection for re-use",2],["SSH2::_get_binary_packet","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__get_binary_packet","($skip_channel_filter = false)","Gets Binary Packets",2],["SSH2::_filter","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__filter","($payload, $skip_channel_filter)","Filter Binary Packets",2],["SSH2::enableQuietMode","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_enableQuietMode","()","Enable Quiet Mode",2],["SSH2::disableQuietMode","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_disableQuietMode","()","Disable Quiet Mode",2],["SSH2::isQuietModeEnabled","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_isQuietModeEnabled","()","Returns whether Quiet Mode is enabled or not",2],["SSH2::enablePTY","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_enablePTY","()","Enable request-pty when using exec()",2],["SSH2::disablePTY","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_disablePTY","()","Disable request-pty when using exec()",2],["SSH2::isPTYEnabled","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_isPTYEnabled","()","Returns whether request-pty is enabled or not",2],["SSH2::_get_channel_packet","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__get_channel_packet","($client_channel, $skip_extended = false)","Gets channel data",2],["SSH2::_send_binary_packet","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__send_binary_packet","(string $data, string $logged = null)","Sends Binary Packets",2],["SSH2::_append_log","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__append_log","($message_number, $message)","Logs data packets",2],["SSH2::_send_channel_packet","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__send_channel_packet","(int $client_channel, string $data)","Sends channel data",2],["SSH2::_close_channel","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__close_channel","(int $client_channel, bool $want_reply = false)","Closes and flushes a channel",2],["SSH2::_disconnect","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__disconnect","(int $reason)","Disconnect",2],["SSH2::_string_shift","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__string_shift","(string $string, int $index = 1)","String Shift",2],["SSH2::_define_array","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__define_array","()","Define Array",2],["SSH2::getLog","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getLog","()","Returns a log of the packets that have been sent and",2],["SSH2::_format_log","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__format_log","(array $message_log, array $message_number_log)","Formats a log for printing",2],["SSH2::_format_log_helper","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__format_log_helper","(array $matches)","Helper function for _format_log",2],["SSH2::_on_channel_open","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__on_channel_open","()","Helper function for agent->_on_channel_open()",2],["SSH2::_array_intersect_first","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method__array_intersect_first","(array $array1, array $array2)","Returns the first value of the intersection of two",2],["SSH2::getErrors","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getErrors","()","Returns all errors",2],["SSH2::getLastError","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getLastError","()","Returns the last error",2],["SSH2::getServerIdentification","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getServerIdentification","()","Return the server identification.",2],["SSH2::getKexAlgorithms","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getKexAlgorithms","()","Return a list of the key exchange algorithms the server",2],["SSH2::getServerHostKeyAlgorithms","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getServerHostKeyAlgorithms","()","Return a list of the host key (public key) algorithms",2],["SSH2::getEncryptionAlgorithmsClient2Server","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getEncryptionAlgorithmsClient2Server","()","Return a list of the (symmetric key) encryption algorithms",2],["SSH2::getEncryptionAlgorithmsServer2Client","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getEncryptionAlgorithmsServer2Client","()","Return a list of the (symmetric key) encryption algorithms",2],["SSH2::getMACAlgorithmsClient2Server","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getMACAlgorithmsClient2Server","()","Return a list of the MAC algorithms the server supports,",2],["SSH2::getMACAlgorithmsServer2Client","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getMACAlgorithmsServer2Client","()","Return a list of the MAC algorithms the server supports,",2],["SSH2::getCompressionAlgorithmsClient2Server","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getCompressionAlgorithmsClient2Server","()","Return a list of the compression algorithms the server",2],["SSH2::getCompressionAlgorithmsServer2Client","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getCompressionAlgorithmsServer2Client","()","Return a list of the compression algorithms the server",2],["SSH2::getLanguagesServer2Client","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getLanguagesServer2Client","()","Return a list of the languages the server supports,",2],["SSH2::getLanguagesClient2Server","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getLanguagesClient2Server","()","Return a list of the languages the server supports,",2],["SSH2::getBannerMessage","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getBannerMessage","()","Returns the banner message.",2],["SSH2::getServerPublicHostKey","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getServerPublicHostKey","()","Returns the server public host key.",2],["SSH2::getExitStatus","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getExitStatus","()","Returns the exit status of an SSH command or false.",2],["SSH2::getWindowColumns","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getWindowColumns","()","Returns the number of columns for the terminal window",2],["SSH2::getWindowRows","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_getWindowRows","()","Returns the number of rows for the terminal window",2],["SSH2::setWindowColumns","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_setWindowColumns","(int $value)","Sets the number of columns for the terminal window",2],["SSH2::setWindowRows","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_setWindowRows","(int $value)","Sets the number of rows for the terminal window size.",2],["SSH2::setWindowSize","phpseclib\\Net\\SSH2","phpseclib\/Net\/SSH2.html#method_setWindowSize","(int $columns = 80, int $rows = 24)","Sets the number of columns and rows for the terminal",2],["Agent::__construct","phpseclib\\System\\SSH\\Agent","phpseclib\/System\/SSH\/Agent.html#method___construct","($address = null)","Default Constructor",2],["Agent::requestIdentities","phpseclib\\System\\SSH\\Agent","phpseclib\/System\/SSH\/Agent.html#method_requestIdentities","()","Request Identities",2],["Agent::startSSHForwarding","phpseclib\\System\\SSH\\Agent","phpseclib\/System\/SSH\/Agent.html#method_startSSHForwarding","(<abbr title=\"phpseclib\\System\\SSH\\Net_SSH2\">Net_SSH2<\/abbr> $ssh)","Signal that agent forwarding should be requested when",2],["Agent::_request_forwarding","phpseclib\\System\\SSH\\Agent","phpseclib\/System\/SSH\/Agent.html#method__request_forwarding","(<abbr title=\"phpseclib\\System\\SSH\\Net_SSH2\">Net_SSH2<\/abbr> $ssh)","Request agent forwarding of remote server",2],["Agent::_on_channel_open","phpseclib\\System\\SSH\\Agent","phpseclib\/System\/SSH\/Agent.html#method__on_channel_open","(<abbr title=\"phpseclib\\System\\SSH\\Net_SSH2\">Net_SSH2<\/abbr> $ssh)","On successful channel open",2],["Agent::_forward_data","phpseclib\\System\\SSH\\Agent","phpseclib\/System\/SSH\/Agent.html#method__forward_data","(string $data)","Forward data to SSH Agent and return data reply",2],["Identity::__construct","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method___construct","(resource $fsock)","Default Constructor.",2],["Identity::setPublicKey","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method_setPublicKey","(<a href=\"phpseclib\/Crypt\/RSA.html\"><abbr title=\"phpseclib\\Crypt\\RSA\">RSA<\/abbr><\/a> $key)","Set Public Key",2],["Identity::setPublicKeyBlob","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method_setPublicKeyBlob","(string $key_blob)","Set Public Key",2],["Identity::getPublicKey","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method_getPublicKey","(int $format = null)","Get Public Key",2],["Identity::setSignatureMode","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method_setSignatureMode","(int $mode)","Set Signature Mode",2],["Identity::setHash","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method_setHash","(string $hash)","Set Hash",2],["Identity::sign","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method_sign","(string $message)","Create a signature",2],["Identity::_string_shift","phpseclib\\System\\SSH\\Agent\\Identity","phpseclib\/System\/SSH\/Agent\/Identity.html#method__string_shift","(string $string, int $index = 1)","String Shift",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']